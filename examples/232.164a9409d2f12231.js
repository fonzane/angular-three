"use strict";(self.webpackChunksandbox=self.webpackChunksandbox||[]).push([[232],{7322:(mt,Ae,_)=>{_.d(Ae,{EQ:()=>$.E,in:()=>xe.i,iM:()=>B.i,GK:()=>tt.G,CR:()=>Se.C,Hk:()=>ce.H}),_(7540);var $=_(132),B=_(516),xe=_(54),tt=_(8607),ce=_(2164),Se=_(8243);_(3444)},132:(mt,Ae,_)=>{_.d(Ae,{E:()=>Q,w:()=>$});var N=_(7540),z=_(2046),k=_(3193);const O=["*"];let $=(()=>{class w extends N.Xh{get lightType(){return z.Mig}}return w.\u0275fac=function(){let F;return function(P){return(F||(F=k.n5z(w)))(P||w)}}(),w.\u0275cmp=k.Xpm({type:w,selectors:[["ngt-ambient-light"]],features:[k._Bn([(0,N.tG)(w)]),k.qOj],ngContentSelectors:O,decls:1,vars:0,template:function(B,P){1&B&&(k.F$t(),k.Hsn(0))},encapsulation:2,changeDetection:0}),w})(),Q=(()=>{class w{}return w.\u0275fac=function(B){return new(B||w)},w.\u0275mod=k.oAB({type:w}),w.\u0275inj=k.cJS({}),w})()},54:(mt,Ae,_)=>{_.d(Ae,{Y:()=>$,i:()=>Q});var N=_(7540),z=_(2046),k=_(3193);const O=["*"];let $=(()=>{class w extends N.Xh{set target(B){this.set({target:B})}get lightType(){return z.Ox3}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{target:!0})}}return w.\u0275fac=function(){let F;return function(P){return(F||(F=k.n5z(w)))(P||w)}}(),w.\u0275cmp=k.Xpm({type:w,selectors:[["ngt-directional-light"]],inputs:{target:"target"},features:[k._Bn([(0,N.tG)(w)]),k.qOj],ngContentSelectors:O,decls:1,vars:0,template:function(B,P){1&B&&(k.F$t(),k.Hsn(0))},encapsulation:2,changeDetection:0}),w})(),Q=(()=>{class w{}return w.\u0275fac=function(B){return new(B||w)},w.\u0275mod=k.oAB({type:w}),w.\u0275inj=k.cJS({}),w})()},516:(mt,Ae,_)=>{_.d(Ae,{L:()=>$,i:()=>Q});var N=_(7540),z=_(2046),k=_(3193);const O=["*"];let $=(()=>{class w extends N.Xh{set skyColor(B){this.set({skyColor:B})}set groundColor(B){this.set({groundColor:B})}get lightType(){return z.vmT}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{skyColor:!0,groundColor:!0})}}return w.\u0275fac=function(){let F;return function(P){return(F||(F=k.n5z(w)))(P||w)}}(),w.\u0275cmp=k.Xpm({type:w,selectors:[["ngt-hemisphere-light"]],inputs:{skyColor:"skyColor",groundColor:"groundColor"},features:[k._Bn([(0,N.tG)(w)]),k.qOj],ngContentSelectors:O,decls:1,vars:0,template:function(B,P){1&B&&(k.F$t(),k.Hsn(0))},encapsulation:2,changeDetection:0}),w})(),Q=(()=>{class w{}return w.\u0275fac=function(B){return new(B||w)},w.\u0275mod=k.oAB({type:w}),w.\u0275inj=k.cJS({}),w})()},8607:(mt,Ae,_)=>{_.d(Ae,{G:()=>Q,H:()=>$});var N=_(7540),z=_(2046),k=_(3193);const O=["*"];let $=(()=>{class w extends N.Xh{set distance(B){this.set({distance:(0,N.su)(B)})}set decay(B){this.set({decay:(0,N.su)(B)})}set power(B){this.set({power:(0,N.su)(B)})}get lightType(){return z.cek}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{distance:!0,decay:!0,power:!0})}}return w.\u0275fac=function(){let F;return function(P){return(F||(F=k.n5z(w)))(P||w)}}(),w.\u0275cmp=k.Xpm({type:w,selectors:[["ngt-point-light"]],inputs:{distance:"distance",decay:"decay",power:"power"},features:[k._Bn([(0,N.tG)(w)]),k.qOj],ngContentSelectors:O,decls:1,vars:0,template:function(B,P){1&B&&(k.F$t(),k.Hsn(0))},encapsulation:2,changeDetection:0}),w})(),Q=(()=>{class w{}return w.\u0275fac=function(B){return new(B||w)},w.\u0275mod=k.oAB({type:w}),w.\u0275inj=k.cJS({}),w})()},8243:(mt,Ae,_)=>{_.d(Ae,{C:()=>Q,u:()=>$});var N=_(7540),z=_(2046),k=_(3193);const O=["*"];let $=(()=>{class w extends N.Xh{set width(B){this.set({width:(0,N.su)(B)})}set height(B){this.set({height:(0,N.su)(B)})}set power(B){this.set({power:(0,N.su)(B)})}get lightType(){return z.T_f}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{width:!0,height:!0,power:!0})}}return w.\u0275fac=function(){let F;return function(P){return(F||(F=k.n5z(w)))(P||w)}}(),w.\u0275cmp=k.Xpm({type:w,selectors:[["ngt-rect-area-light"]],inputs:{width:"width",height:"height",power:"power"},features:[k._Bn([(0,N.tG)(w)]),k.qOj],ngContentSelectors:O,decls:1,vars:0,template:function(B,P){1&B&&(k.F$t(),k.Hsn(0))},encapsulation:2,changeDetection:0}),w})(),Q=(()=>{class w{}return w.\u0275fac=function(B){return new(B||w)},w.\u0275mod=k.oAB({type:w}),w.\u0275inj=k.cJS({}),w})()},3444:(mt,Ae,_)=>{_(7540),_(2164)},2164:(mt,Ae,_)=>{_.d(Ae,{H:()=>Q,K:()=>$});var N=_(7540),z=_(2046),k=_(3193);const O=["*"];let $=(()=>{class w extends N.Xh{set distance(B){this.set({distance:(0,N.su)(B)})}set angle(B){this.set({angle:(0,N.su)(B)})}set penumbra(B){this.set({penumbra:(0,N.su)(B)})}set decay(B){this.set({decay:(0,N.su)(B)})}set target(B){this.set({target:B})}set power(B){this.set({power:(0,N.su)(B)})}get lightType(){return z.PMe}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{distance:!0,angle:!0,penumbra:!0,decay:!0,target:!0,power:!0})}}return w.\u0275fac=function(){let F;return function(P){return(F||(F=k.n5z(w)))(P||w)}}(),w.\u0275cmp=k.Xpm({type:w,selectors:[["ngt-spot-light"]],inputs:{distance:"distance",angle:"angle",penumbra:"penumbra",decay:"decay",target:"target",power:"power"},features:[k._Bn([(0,N.tG)(w)]),k.qOj],ngContentSelectors:O,decls:1,vars:0,template:function(B,P){1&B&&(k.F$t(),k.Hsn(0))},encapsulation:2,changeDetection:0}),w})(),Q=(()=>{class w{}return w.\u0275fac=function(B){return new(B||w)},w.\u0275mod=k.oAB({type:w}),w.\u0275inj=k.cJS({}),w})()},991:(mt,Ae,_)=>{_.d(Ae,{R:()=>z.R,M$:()=>N.M});var N=_(8919),z=_(1644);_(7540)},1644:(mt,Ae,_)=>{_.d(Ae,{R:()=>w,f:()=>Q});var N=_(7540),z=_(2046),k=_(3193);const O=["count",""],$=["*"];let Q=(()=>{class F extends N.uT{set count(P){this.set({count:(0,N.su)(P)})}get meshType(){return z.SPe}postPrepare(P){P.instanceMatrix.setUsage(z.dj0)}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{count:!1})}get argsKeys(){return["count"]}}return F.\u0275fac=function(){let B;return function(L){return(B||(B=k.n5z(F)))(L||F)}}(),F.\u0275cmp=k.Xpm({type:F,selectors:[["ngt-instanced-mesh","count",""]],inputs:{count:"count"},features:[k._Bn([(0,N.pb)(F)]),k.qOj],attrs:O,ngContentSelectors:$,decls:1,vars:0,template:function(P,L){1&P&&(k.F$t(),k.Hsn(0))},encapsulation:2,changeDetection:0}),F})(),w=(()=>{class F{}return F.\u0275fac=function(P){return new(P||F)},F.\u0275mod=k.oAB({type:F}),F.\u0275inj=k.cJS({}),F})()},8919:(mt,Ae,_)=>{_.d(Ae,{M:()=>Q,o:()=>$});var N=_(7540),z=_(2046),k=_(3193);const O=["*"];let $=(()=>{class w extends N.uT{get meshType(){return z.Kj0}}return w.\u0275fac=function(){let F;return function(P){return(F||(F=k.n5z(w)))(P||w)}}(),w.\u0275cmp=k.Xpm({type:w,selectors:[["ngt-mesh"]],features:[k._Bn([(0,N.pb)(w)]),k.qOj],ngContentSelectors:O,decls:1,vars:0,template:function(B,P){1&B&&(k.F$t(),k.Hsn(0))},encapsulation:2,changeDetection:0}),w})(),Q=(()=>{class w{}return w.\u0275fac=function(B){return new(B||w)},w.\u0275mod=k.oAB({type:w}),w.\u0275inj=k.cJS({}),w})()},7540:(mt,Ae,_)=>{_.d(Ae,{Aw:()=>B.Aw,cz:()=>B.cz,dL:()=>Qe,cY:()=>B.cY,Dh:()=>B.Dh,DX:()=>Q.DX,f5:()=>F,fc:()=>ce,B:()=>we,Xh:()=>Ue,hZ:()=>Le,uT:()=>Ne,gU:()=>w.gU,WZ:()=>N.W,gj:()=>ns,Jy:()=>k.J,Fq:()=>k.F,y2:()=>Xn.y,yh:()=>wn.yh,kZ:()=>Gn.k,g8:()=>Tn.g,W7:()=>se.W,gD:()=>Qi,Rl:()=>es.R,WC:()=>ni.WC,ll:()=>ni.ll,nH:()=>Pi.n,QF:()=>Re.Q,Ig:()=>We.I,su:()=>We.s,is:()=>z.is,Sy:()=>On.Sy,EH:()=>On.EH,CE:()=>On.CE,qR:()=>On.qR,jS:()=>On.jS,Ut:()=>On.NO,Pl:()=>Ja.P,_4:()=>L,dF:()=>Se,O2:()=>K,tG:()=>Ee,Wm:()=>Ce,pb:()=>ut,UV:()=>P.U,Hm:()=>xe.Hm,Q2:()=>xe.Q2,nD:()=>zn.n,gh:()=>Za,Xb:()=>w.Xb,oe:()=>w.oe});var N=_(9973),z=_(5918),k=_(5796),O=_(3193);let $=(()=>{class X extends k.J{set material(S){this.set({material:S})}set geometry(S){this.set({geometry:S})}set morphTargetInfluences(S){this.set({morphTargetInfluences:S})}set morphTargetDictionary(S){this.set({morphTargetDictionary:S})}objectInitFn(){const S=this.get(),rt=this.argsKeys.reduce((Lt,he)=>(Lt.push(S[he]),Lt),[]),yt=new this.objectType(z.is.ref(S.geometry)?S.geometry.value:S.geometry,z.is.arr(S.material)?S.material.map(Lt=>z.is.ref(Lt)?Lt.value:Lt):z.is.ref(S.material)?S.material.value:S.material,...rt);return S.morphTargetDictionary&&"morphTargetDictionary"in yt&&(yt.morphTargetDictionary=S.morphTargetDictionary),S.morphTargetInfluences&&"morphTargetInfluences"in yt&&(yt.morphTargetInfluences=S.morphTargetInfluences),yt}get argsKeys(){return[]}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{material:!0,geometry:!0,morphTargetInfluences:!0,morphTargetDictionary:!0})}}return X.\u0275fac=function(){let Y;return function(rt){return(Y||(Y=O.n5z(X)))(rt||X)}}(),X.\u0275dir=O.lG2({type:X,inputs:{material:"material",geometry:"geometry",morphTargetInfluences:"morphTargetInfluences",morphTargetDictionary:"morphTargetDictionary"},features:[O.qOj]}),X})();var Q=_(4349),w=_(532);let F=(()=>{class X extends N.W{constructor(){super(...arguments),this.init=this.effect((0,w.oe)(S=>{this.prepareInstance(new this.attributeType(...S))}))}set args(S){this.instanceArgs=S}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.onCanvasReady(this.store.ready$,()=>{const S=this.init(this.instanceArgs$);return this.postInit(),()=>{S&&S.unsubscribe&&S.unsubscribe()}},!0)})}}return X.\u0275fac=function(){let Y;return function(rt){return(Y||(Y=O.n5z(X)))(rt||X)}}(),X.\u0275dir=O.lG2({type:X,inputs:{args:"args"},features:[O.qOj]}),X})();var B=_(6029),P=_(7335);function L(X,Y){return[(0,P.U)(X,Y),{provide:F,useExisting:X},{provide:B.Rb,useFactory:S=>()=>(null==Y?void 0:Y(S))||S.instance,deps:[X]}]}var xe=_(2620);let ce=(()=>{class X extends k.J{set args(S){this.instanceArgs=S}objectInitFn(){const S=this.get(rt=>rt.instanceArgs);return new this.cameraType(...S)}}return X.\u0275fac=function(){let Y;return function(rt){return(Y||(Y=O.n5z(X)))(rt||X)}}(),X.\u0275dir=O.lG2({type:X,inputs:{args:"args"},features:[O.qOj]}),X})();function Se(X,Y){return[(0,xe.Q2)(X,Y),{provide:ce,useExisting:X},{provide:B.hD,useFactory:S=>()=>(null==Y?void 0:Y(S))||S.instance,deps:[X]}]}var se=_(8756);let we=(()=>{class X extends N.W{constructor(S,rt,yt,Lt){super(S,rt,yt,Lt),this.init=this.effect((0,w.oe)(()=>{const he=this.get(ln=>ln.instanceArgs),sn=this.adjustCtorParams(he),xn=this.prepareInstance(new this.geometryType(...sn));return()=>{xn.dispose()}}))}set args(S){this.instanceArgs=S}preInit(){this.set(S=>({attach:S.attach.length?S.attach:["geometry"]}))}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.onCanvasReady(this.store.ready$,()=>{this.init(this.ctorParams$),this.postInit()})})}}return X.\u0275fac=function(S){return new(S||X)(O.Y36(O.R0b),O.Y36(se.W),O.Y36(B.Dh,12),O.Y36(B.cY,12))},X.\u0275dir=O.lG2({type:X,inputs:{args:"args"},features:[O.qOj]}),X})();function K(X,Y){return[(0,P.U)(X,Y),{provide:we,useExisting:X},{provide:B.sV,useFactory:S=>()=>(null==Y?void 0:Y(S))||S.instance,deps:[X]}]}var ze=_(4476),Ve=_(4891);const Qe=new O.OlP("isWebGLAvailable",{factory:()=>{const X=(0,O.f3M)(ze.K0),Y=(0,O.f3M)(Ve.m);try{const S=X.createElement("canvas");return!(!Y.WebGL2RenderingContext||!S.getContext("webgl2"))}catch(S){return!1}}});var We=_(2690);let Ue=(()=>{class X extends k.J{set args(S){this.instanceArgs=S}set intensity(S){this.set({intensity:(0,We.s)(S)})}objectInitFn(){const{intensity:S,instanceArgs:rt}=this.get(),yt=new this.lightType(...rt);return null!=S&&(yt.intensity=S),yt}get preObjectInit(){return S=>{this.set(rt=>{var yt;return{intensity:null!==(yt=rt.intensity)&&void 0!==yt?yt:1}}),S()}}get optionFields(){return Object.assign(Object.assign({},super.optionFields),{intensity:!1})}}return X.\u0275fac=function(){let Y;return function(rt){return(Y||(Y=O.n5z(X)))(rt||X)}}(),X.\u0275dir=O.lG2({type:X,inputs:{args:"args",intensity:"intensity"},features:[O.qOj]}),X})();function Ee(X,Y){return[(0,xe.Q2)(X,Y),{provide:Ue,useExisting:X},{provide:B.iq,useFactory:S=>()=>(null==Y?void 0:Y(S))||S.instance,deps:[X]}]}function ee(X,Y){return[(0,xe.Q2)(X,Y),{provide:$,useExisting:X},{provide:B.sN,useFactory:S=>()=>(null==Y?void 0:Y(S))||S.instance,deps:[X]}]}var Ke=_(2310),Fe=_(758),Re=_(8216);let Le=(()=>{class X extends N.W{constructor(S,rt,yt,Lt){super(S,rt,yt,Lt),this.init=this.effect((0,w.oe)(()=>{const he=this.prepareInstance(new this.materialType);return()=>{he.dispose()}})),this.setParameters=this.effect((0,Ke.b)(({parameters:he,material:sn})=>{sn.setValues(Object.assign(Object.entries(he).reduce((xn,[ln,rn])=>(void 0!==rn&&(xn[ln]=rn),xn),{}),"uniforms"in sn&&"uniforms"in he?{uniforms:Object.assign(Object.assign({},sn.uniforms),he.uniforms)}:{})),(0,Re.Q)(sn)})),this.parameters$=this.select(this.select(he=>he.alphaTest).pipe((0,w.Xb)()),this.select(he=>he.alphaToCoverage).pipe((0,w.Xb)()),this.select(he=>he.blendDst).pipe((0,w.Xb)()),this.select(he=>he.blendDstAlpha).pipe((0,w.Xb)()),this.select(he=>he.blendEquation).pipe((0,w.Xb)()),this.select(he=>he.blendEquationAlpha).pipe((0,w.Xb)()),this.select(he=>he.blending).pipe((0,w.Xb)()),this.select(he=>he.blendSrc).pipe((0,w.Xb)()),this.select(he=>he.blendSrcAlpha).pipe((0,w.Xb)()),this.select(he=>he.clipIntersection).pipe((0,w.Xb)()),this.select(he=>he.clippingPlanes).pipe((0,w.Xb)()),this.select(he=>he.clipShadows).pipe((0,w.Xb)()),this.select(he=>he.colorWrite).pipe((0,w.Xb)()),this.select(he=>he.defines).pipe((0,w.Xb)()),this.select(he=>he.depthFunc).pipe((0,w.Xb)()),this.select(he=>he.depthTest).pipe((0,w.Xb)()),this.select(he=>he.depthWrite).pipe((0,w.Xb)()),this.select(he=>he.name).pipe((0,w.Xb)()),this.select(he=>he.opacity).pipe((0,w.Xb)()),this.select(he=>he.polygonOffset).pipe((0,w.Xb)()),this.select(he=>he.polygonOffsetFactor).pipe((0,w.Xb)()),this.select(he=>he.polygonOffsetUnits).pipe((0,w.Xb)()),this.select(he=>he.precision).pipe((0,w.Xb)()),this.select(he=>he.premultipliedAlpha).pipe((0,w.Xb)()),this.select(he=>he.dithering).pipe((0,w.Xb)()),this.select(he=>he.side).pipe((0,w.Xb)()),this.select(he=>he.shadowSide).pipe((0,w.Xb)()),this.select(he=>he.toneMapped).pipe((0,w.Xb)()),this.select(he=>he.transparent).pipe((0,w.Xb)()),this.select(he=>he.vertexColors).pipe((0,w.Xb)()),this.select(he=>he.visible).pipe((0,w.Xb)()),this.select(he=>he.format).pipe((0,w.Xb)()),this.select(he=>he.stencilWrite).pipe((0,w.Xb)()),this.select(he=>he.stencilFunc).pipe((0,w.Xb)()),this.select(he=>he.stencilRef).pipe((0,w.Xb)()),this.select(he=>he.stencilWriteMask).pipe((0,w.Xb)()),this.select(he=>he.stencilFuncMask).pipe((0,w.Xb)()),this.select(he=>he.stencilFail).pipe((0,w.Xb)()),this.select(he=>he.stencilZFail).pipe((0,w.Xb)()),this.select(he=>he.stencilZPass).pipe((0,w.Xb)()),this.select(he=>he.userData).pipe((0,w.Xb)()),(he,sn,xn,ln,rn,$n,ss,xr,ro,oo,ao,lo,qa,co,uo,ho,fo,po,mo,go,vo,yo,xo,_o,bo,Mo,wo,So,Eo,To,Qa,el,tl,rs,os,_r,Ri,Li,Ns,br,Ao)=>({alphaTest:he,alphaToCoverage:sn,blendDst:xn,blendDstAlpha:ln,blendEquation:rn,blendEquationAlpha:$n,blending:ss,blendSrc:xr,blendSrcAlpha:ro,clipIntersection:oo,clippingPlanes:ao,clipShadows:lo,colorWrite:qa,defines:co,depthFunc:uo,depthTest:ho,depthWrite:fo,name:po,opacity:mo,polygonOffset:go,polygonOffsetFactor:vo,polygonOffsetUnits:yo,precision:xo,premultipliedAlpha:_o,dithering:bo,side:Mo,shadowSide:wo,toneMapped:So,transparent:Eo,vertexColors:To,visible:Qa,format:el,stencilWrite:tl,stencilFunc:rs,stencilRef:os,stencilWriteMask:_r,stencilFuncMask:Ri,stencilFail:Li,stencilZFail:Ns,stencilZPass:br,userData:Ao}))}set alphaTest(S){this.set({alphaTest:(0,We.s)(S)})}set alphaToCoverage(S){this.set({alphaToCoverage:(0,We.I)(S)})}set blendDst(S){this.set({blendDst:S})}set blendDstAlpha(S){this.set({blendDstAlpha:(0,We.s)(S)})}set blendEquation(S){this.set({blendEquation:S})}set blendEquationAlpha(S){this.set({blendEquationAlpha:(0,We.s)(S)})}set blending(S){this.set({blending:S})}set blendSrc(S){this.set({blendSrc:S})}set blendSrcAlpha(S){this.set({blendSrcAlpha:(0,We.s)(S)})}set clipIntersection(S){this.set({clipIntersection:(0,We.I)(S)})}set clippingPlanes(S){this.set({clippingPlanes:S})}set clipShadows(S){this.set({clipShadows:(0,We.I)(S)})}set colorWrite(S){this.set({colorWrite:(0,We.I)(S)})}set defines(S){this.set({defines:S})}set depthFunc(S){this.set({depthFunc:S})}set depthTest(S){this.set({depthTest:(0,We.I)(S)})}set depthWrite(S){this.set({depthWrite:(0,We.I)(S)})}set name(S){this.set({name:S})}set opacity(S){this.set({opacity:(0,We.s)(S)})}set polygonOffset(S){this.set({polygonOffset:(0,We.I)(S)})}set polygonOffsetFactor(S){this.set({polygonOffsetFactor:(0,We.s)(S)})}set polygonOffsetUnits(S){this.set({polygonOffsetUnits:(0,We.s)(S)})}set precision(S){this.set({precision:S})}set premultipliedAlpha(S){this.set({premultipliedAlpha:(0,We.I)(S)})}set dithering(S){this.set({dithering:(0,We.I)(S)})}set side(S){this.set({side:S})}set shadowSide(S){this.set({shadowSide:S})}set toneMapped(S){this.set({toneMapped:(0,We.I)(S)})}set transparent(S){this.set({transparent:(0,We.I)(S)})}set vertexColors(S){this.set({vertexColors:(0,We.I)(S)})}set visible(S){this.set({visible:(0,We.I)(S)})}set format(S){this.set({format:S})}set stencilWrite(S){this.set({stencilWrite:(0,We.I)(S)})}set stencilFunc(S){this.set({stencilFunc:S})}set stencilRef(S){this.set({stencilRef:(0,We.s)(S)})}set stencilWriteMask(S){this.set({stencilWriteMask:(0,We.s)(S)})}set stencilFuncMask(S){this.set({stencilFuncMask:(0,We.s)(S)})}set stencilFail(S){this.set({stencilFail:S})}set stencilZFail(S){this.set({stencilZFail:S})}set stencilZPass(S){this.set({stencilZPass:S})}set userData(S){this.set({userData:S})}set parameters(S){this.set({materialParameters:S})}get parameters(){return this.get(S=>S.materialParameters)}preInit(){this.set(S=>({attach:S.attach.length?S.attach:["material"],materialParameters:S.materialParameters||{}}))}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.onCanvasReady(this.store.ready$,()=>{this.init(),this.postInit(),this.setParameters(this.select(this.instance$,this.select(S=>S.materialParameters),this.parameters$,this.subParameters$,(S,rt,yt,Lt)=>({material:S,parameters:Object.keys(rt).length?rt:Object.assign(Object.assign({},yt),Lt)})))})})}get subParameters$(){const S=Object.entries(this.optionFields);return 0===S.length?(0,Fe.of)({}):this.select(...S.map(([rt,yt])=>{const Lt=this.select(he=>he[rt]);return yt?Lt.pipe((0,w.Xb)()):Lt}),(...rt)=>rt.reduce((yt,Lt,he)=>(yt[S[he][0]]=Lt,yt),{}))}}return X.\u0275fac=function(S){return new(S||X)(O.Y36(O.R0b),O.Y36(se.W),O.Y36(B.Dh,12),O.Y36(B.cY,12))},X.\u0275dir=O.lG2({type:X,inputs:{alphaTest:"alphaTest",alphaToCoverage:"alphaToCoverage",blendDst:"blendDst",blendDstAlpha:"blendDstAlpha",blendEquation:"blendEquation",blendEquationAlpha:"blendEquationAlpha",blending:"blending",blendSrc:"blendSrc",blendSrcAlpha:"blendSrcAlpha",clipIntersection:"clipIntersection",clippingPlanes:"clippingPlanes",clipShadows:"clipShadows",colorWrite:"colorWrite",defines:"defines",depthFunc:"depthFunc",depthTest:"depthTest",depthWrite:"depthWrite",name:"name",opacity:"opacity",polygonOffset:"polygonOffset",polygonOffsetFactor:"polygonOffsetFactor",polygonOffsetUnits:"polygonOffsetUnits",precision:"precision",premultipliedAlpha:"premultipliedAlpha",dithering:"dithering",side:"side",shadowSide:"shadowSide",toneMapped:"toneMapped",transparent:"transparent",vertexColors:"vertexColors",visible:"visible",format:"format",stencilWrite:"stencilWrite",stencilFunc:"stencilFunc",stencilRef:"stencilRef",stencilWriteMask:"stencilWriteMask",stencilFuncMask:"stencilFuncMask",stencilFail:"stencilFail",stencilZFail:"stencilZFail",stencilZPass:"stencilZPass",userData:"userData",parameters:"parameters"},features:[O.qOj]}),X})();function Ce(X,Y){return[(0,P.U)(X,Y),{provide:Le,useExisting:X},{provide:B.jy,useFactory:S=>()=>(null==Y?void 0:Y(S))||S.instance,deps:[X]}]}let Ne=(()=>{class X extends ${get objectType(){return this.meshType}}return X.\u0275fac=function(){let Y;return function(rt){return(Y||(Y=O.n5z(X)))(rt||X)}}(),X.\u0275dir=O.lG2({type:X,features:[O.qOj]}),X})();function ut(X,Y){return[ee(X,Y),{provide:Ne,useExisting:X},{provide:B.FY,useFactory:S=>()=>(null==Y?void 0:Y(S))||S.instance,deps:[X]}]}var zn=_(2944);_(3238);var Xn=_(9049),On=_(9809),Gn=_(9461),Tn=_(2455);let Qi=(()=>{class X{}return X.\u0275fac=function(S){return new(S||X)},X.\u0275mod=O.oAB({type:X}),X.\u0275inj=O.cJS({}),X})();var wn=_(2375),es=_(3139),nn=_(6682),Ds=_(4370),Ec=_(9072),Os=_(2595),Tc=_(4080),Qt=_(9453),yr=_(393),Qn=_(2219),Cc=_(7201),ei=_(8450),$a=_(6742),Ka=_(6329),ts=_(310);let ns=(()=>{class X{constructor(){this.cached=new Map}use(S,rt,yt,Lt){const he=z.is.arr(rt)?rt:[rt],sn=new S;yt&&yt(sn);const xn=function Ac(...X){const Y=(0,Os.jO)(X),{args:S,keys:rt}=(0,Ds.D)(X),yt=new nn.y(Lt=>{const{length:he}=S;if(!he)return void Lt.complete();const sn=new Array(he);let xn=he,ln=he;for(let rn=0;rn<he;rn++){let $n=!1;(0,Ec.Xf)(S[rn]).subscribe((0,Tc.x)(Lt,ss=>{$n||($n=!0,ln--),sn[rn]=ss},()=>xn--,void 0,()=>{(!xn||!$n)&&(ln||Lt.next(rt?(0,yr.n)(rt,sn):sn),Lt.complete())}))}});return Y?yt.pipe((0,Qt.Z)(Y)):yt}(he.map(ln=>this.cached.has(ln)?(0,Fe.of)(this.cached.get(ln)):(0,Qn.P)(()=>sn.loadAsync(ln,Lt)).pipe((0,Ke.b)(rn=>{rn.scene&&Object.assign(rn,function Ya(X){const Y={nodes:{},materials:{}};return X&&X.traverse(S=>{S.name&&(Y.nodes[S.name]=S),S.material&&!Y.materials[S.material.name]&&(Y.materials[S.material.name]=S.material)}),Y}(rn.scene)),this.cached.set(ln,rn)}),(0,Cc.K)(rn=>(console.error(`Error loading ${ln}: ${rn.message}`),(0,ei._)(rn))))));return(0,Qn.P)(()=>z.is.arr(rt)?xn:xn.pipe((0,$a.U)(ln=>ln[0]))).pipe((0,Ka.B)({connector:()=>new ts.t,resetOnRefCountZero:!0,resetOnError:!0}))}ngOnDestroy(){this.cached.clear()}}return X.\u0275fac=function(S){return new(S||X)},X.\u0275prov=O.Yz7({token:X,factory:X.\u0275fac,providedIn:"root"}),X})();_(9194);var Pi=_(8961),Ja=(_(6238),_(6671)),ni=_(3477),so=_(2046);function Za(X,Y,S,rt){return class extends so.jyz{constructor(){const yt=Object.entries(X);super({uniforms:yt.reduce((Lt,[he,sn])=>{const xn=so.rDY.clone({[he]:{value:sn}});return Object.assign(Object.assign({},Lt),xn)},{}),vertexShader:Y,fragmentShader:S}),yt.forEach(([Lt])=>Object.defineProperty(this,Lt,{get:()=>this.uniforms[Lt].value,set:he=>this.uniforms[Lt].value=he})),rt&&rt(this)}}}},9973:(mt,Ae,_)=>{_.d(Ae,{W:()=>We});var N=_(4254),z=_(3193),k=_(1446),O=_(4080),Q=_(1569),w=_(6517),F=_(2310),B=_(4643),P=_(7897),L=_(6742),Ie=_(758),xe=_(6153),tt=_(3139),ce=_(532),Se=_(8756),G=_(6029),Te=_(8961),se=_(8216),we=_(2690),K=_(8658),De=_(6671),ae=_(5918);function ze(Ue,Ee,re){const{decomposedPath:ee,base:be}=function Ve(Ue){return Ue.length<1?{base:"",decomposedPath:[]}:{base:Ue[0],decomposedPath:Ue}}(Ee);void 0!==be&&(function Qe(Ue,Ee){!Object.prototype.hasOwnProperty.call(Ue,Ee)&&Reflect&&Reflect.has&&!Reflect.has(Ue,Ee)&&(Ue[Ee]={})}(Ue,be),ee.length<=1?(0,Te.n)(Ue,{[be]:re}):ze(Ue[be],ee.slice(1),re))}let We=(()=>{class Ue extends ce.gU{constructor(re,ee,be,Ke){super(),this.zone=re,this.store=ee,this.parentRef=be,this.parentHostRef=Ke,this.ready=new z.vpe,this.hasEmittedAlready=!1,this.update=new z.vpe,this.instance$=this.select(Fe=>Fe.instance).pipe((0,Q.w)(Fe=>Fe.pipe((0,w.h)(Re=>null!=Re)))),this.instanceArgs$=this.select(Fe=>Fe.instanceArgs),this.isPrimitive=!1,this.isWrapper=!1,this.isRaw=!1,this.instanceReady=this.effect((0,ce.oe)(()=>{const Fe=this.setOptions(this.select(this.optionsFieldsToOptions(this.optionFields),this.setOptionsTrigger$,Re=>Re));return this.get(Re=>Re.noAttach)||this.attachToParent(),()=>{Fe.unsubscribe()}})),this.setOptions=this.effect((0,F.b)(Fe=>{if(0!==Object.keys(Fe).length&&this.instanceValue){if(ae.is.material(this.instanceValue))return;const Re=this.get(),Le={},{rotation:Ce,quaternion:Ne}=Fe,ut=(0,N._T)(Fe,["rotation","quaternion"]);Ce?Le.rotation=Re.rotation:Ne&&(Le.quaternion=Re.quaternion);for(const et of Object.keys(ut))null!=Re[et]&&(Le[et]=Re[et]);(0,Te.n)(this.instanceValue,Le),this.postSetOptions(this.instanceValue),this.checkUpdate(this.instanceValue),this.update.observed&&this.update.emit(this.instanceValue)}})),this.attachToParent=this.effect((0,B.z)((0,P.M)(this.select(Fe=>Fe.attach)),(0,F.b)(([,Fe])=>{var Re;let Le=this.__ngt__.parent;if(!Le||!Le.value){if(!(null===(Re=this.parent)||void 0===Re?void 0:Re.value))return;this.__ngt__.parent=this.parent,Le=this.parent}if("function"==typeof Fe){const Ce=Fe(Le,this.instance);Ce&&(this.__ngt__.previousAttach=Ce)}else{const Ce=[...Fe];if(0===Ce.length)return;"material"===Ce[0]&&Ce[1]&&ae.is.num(Number(Ce[1]))&&ae.is.material(this.instanceValue)&&(ae.is.arr(Le.value.material)||(Le.value.material=[])),this.__ngt__.previousAttachValue=Ce.reduce((Ne,ut)=>Ne[ut],Le.value),ze(Le.value,Ce,this.instanceValue),this.__ngt__&&this.__ngt__.root().invalidate(),Le.value.__ngt__&&Le.value.__ngt__.root().invalidate(),this.__ngt__.previousAttach=Ce,this.set({attach:Ce})}this.checkUpdate(Le.value),this.checkUpdate(this.instanceValue)}))),this.set({instance:new tt.R(null),instanceArgs:[],attach:[],noAttach:!1,skipParent:!1})}set ref(re){this.set({instance:re})}set skipParent(re){this.set({attachExplicit:!0,skipParent:(0,we.I)(re)})}get skipParent(){return this.get(re=>re.skipParent)}set noAttach(re){this.set({noAttachExplicit:!0,noAttach:(0,we.I)(re)})}get noAttach(){return this.get(re=>re.noAttach)}set attach(re){re&&this.set({skipParentExplicit:!0,attach:"function"==typeof re||ae.is.arr(re)?re:[re]})}get attach(){return this.get(re=>re.attach)}get instance(){return this.get(re=>re.instance)}get instanceValue(){return this.isRaw?this.instance.value.valueOf():this.instance.value}get __ngt__(){return this.instance.value.__ngt__}get parent(){var re,ee,be;return this.skipParent?(null===(ee=this.parentHostRef)||void 0===ee?void 0:ee.call(this))||(null===(be=this.parentRef)||void 0===be?void 0:be.call(this)):null===(re=this.parentRef)||void 0===re?void 0:re.call(this)}set instanceArgs(re){this.set({instanceArgs:ae.is.arr(re)?re:[re]})}get instanceArgs(){return this.get(re=>re.instanceArgs)}ngOnInit(){this.zone.runOutsideAngular(()=>{this.preInit(),this.onCanvasReady(this.store.ready$,()=>{this.instanceReady(this.instance$)})})}preInit(){}postInit(){}emitReady(){this.hasEmittedAlready||(this.ready.emit(this.instanceValue),this.hasEmittedAlready=!0)}prepareInstance(re,ee){var be,Ke,Fe;ee&&"uuid"in re&&(re.uuid=ee);const Re=(0,De.P)(re,()=>this.store.get(),this.parent,this.instance,this.isPrimitive);if(this.postPrepare(Re),this.instance.set(Re),this.emitReady(),!ae.is.object3d(Re)&&!this.noAttach&&!this.skipParent){const Le=null===(Fe=null===(Ke=null===(be=Re.__ngt__.parent)||void 0===be?void 0:be.value)||void 0===Ke?void 0:Ke.__ngt__)||void 0===Fe?void 0:Fe.objects;Le&&Le.set([...Le.value,this.instance])}return Re}adjustCtorParams(re){return re}get ctorParams$(){return this.instanceArgs$.pipe((0,L.U)(()=>({})))}destroy(){if(this.instanceValue){if(ae.is.object3d(this.instanceValue)){const ee=this.parent;ee&&ae.is.object3d(ee.value)&&(0,K.M)(this.__ngt__.root.bind(this.__ngt__),this.instanceValue),null!=this.instanceValue.clear&&this.instanceValue.clear()}else{const ee=this.__ngt__.previousAttach;if(null!=ee)if("function"==typeof ee)ee(),this.__ngt__.parent&&this.__ngt__.parent.value&&(0,se.Q)(this.__ngt__.parent.value);else{const be=this.__ngt__.previousAttachValue;this.__ngt__.parent&&this.__ngt__.parent.value&&(ze(this.__ngt__.parent.value,ee,be),(0,se.Q)(this.__ngt__.parent.value))}}const re=this.instanceValue.dispose;re&&"function"==typeof re&&re.apply(this.instanceValue)}this.set({attach:[]}),this.instance.complete()}postPrepare(re){}get optionFields(){return{}}optionsFieldsToOptions(re,ee=!1){const be=Object.entries(re);return 0===be.length?(0,Ie.of)({}):this.select(...be.map(([Ke,Fe])=>{const Re=this.select(Le=>Le[Ke]);return Fe?Re.pipe((0,ce.Xb)()):Re}),(...Ke)=>Ke.reduce((Fe,Re,Le)=>(Fe[be[Le][0]]=Re,Fe),{})).pipe((0,xe.O)({}),function $(){return(0,k.e)((Ue,Ee)=>{let re,ee=!1;Ue.subscribe((0,O.x)(Ee,be=>{const Ke=re;re=be,ee&&Ee.next([Ke,be]),ee=!0}))})}(),(0,L.U)(([Ke,Fe])=>Object.entries(Fe).reduce((Re,[Le,Ce])=>((!ae.is.equ(Ke[Le],Ce)||ee&&ae.is.equ(Ke[Le],Ce))&&(Re[Le]=Ce),Re),{})))}ngOnDestroy(){this.zone.runOutsideAngular(()=>{this.destroy()}),super.ngOnDestroy()}postSetOptions(re){}get setOptionsTrigger$(){return(0,Ie.of)({})}checkUpdate(re){ae.is.object3d(re)?re.updateMatrix():ae.is.camera(re)&&((ae.is.perspective(re)||ae.is.orthographic(re))&&re.updateProjectionMatrix(),re.updateMatrixWorld()),(0,se.Q)(re)}}return Ue.\u0275fac=function(re){return new(re||Ue)(z.Y36(z.R0b),z.Y36(Se.W),z.Y36(G.cz,12),z.Y36(G.Aw,12))},Ue.\u0275dir=z.lG2({type:Ue,inputs:{ref:"ref",skipParent:"skipParent",noAttach:"noAttach",attach:"attach"},outputs:{ready:"ready",update:"update"},features:[z.qOj]}),Ue})()},5796:(mt,Ae,_)=>{_.d(Ae,{F:()=>xe,J:()=>tt});var N=_(3193),z=_(2046),k=_(3139),O=_(532),$=_(8756),Q=_(6029),w=_(8961),F=_(2690),B=_(5918),P=_(9809),L=_(9973);const Ie=["click","contextmenu","dblclick","pointerup","pointerdown","pointerover","pointerout","pointerenter","pointerleave","pointermove","pointermissed","pointercancel","wheel"];let xe=(()=>{class ce extends L.W{constructor(G,Te,se,we){super(G,Te,se,we),this.parentObjectRef=se,this.parentObjectHostRef=we,this.click=new N.vpe,this.contextmenu=new N.vpe,this.dblclick=new N.vpe,this.pointerup=new N.vpe,this.pointerdown=new N.vpe,this.pointerover=new N.vpe,this.pointerout=new N.vpe,this.pointerenter=new N.vpe,this.pointerleave=new N.vpe,this.pointermove=new N.vpe,this.pointermissed=new N.vpe,this.pointercancel=new N.vpe,this.wheel=new N.vpe,this.shouldPassThroughRef=!0,this.set({name:"",position:new z.Pa4,rotation:new z.USm,quaternion:new z._fP,scale:new z.Pa4(1,1,1),color:new z.Ilk,castShadow:!1,receiveShadow:!1,priority:0,visible:!0,matrixAutoUpdate:!0,appendMode:"immediate",userData:{}})}set name(G){this.set({nameExplicit:!0,name:G})}get name(){return this.get(G=>G.name)}set position(G){this.set({positionExplicit:!0,position:(0,P.NO)(G)})}get position(){return this.get(G=>G.position)}get rotation(){return this.get(G=>G.rotation)}set rotation(G){this.set({rotationExplicit:!0,rotation:(0,P.Sy)(z.USm,G)})}get quaternion(){return this.get(G=>G.quaternion)}set quaternion(G){this.set({quaternionExplicit:!0,quaternion:(0,P.Sy)(z._fP,G)})}get scale(){return this.get(G=>G.scale)}set scale(G){this.set({scaleExplicit:!0,scale:(0,P.NO)(G)})}get color(){return this.get(G=>G.color)}set color(G){this.set({colorExplicit:!0,color:(0,P.EH)(G)})}get castShadow(){return this.get(G=>G.castShadow)}set castShadow(G){this.set({castShadowExplicit:!0,castShadow:(0,F.I)(G)})}get receiveShadow(){return this.get(G=>G.receiveShadow)}set receiveShadow(G){this.set({receiveShadowExplicit:!0,receiveShadow:(0,F.I)(G)})}get priority(){return this.get(G=>G.priority)}set priority(G){this.set({priorityExplicit:!0,priority:(0,F.s)(G)})}get visible(){return this.get(G=>G.visible)}set visible(G){this.set({visibleExplicit:!0,visible:(0,F.I)(G)})}get matrixAutoUpdate(){return this.get(G=>G.matrixAutoUpdate)}set matrixAutoUpdate(G){this.set({matrixAutoUpdateExplicit:!0,matrixAutoUpdate:(0,F.I)(G)})}get userData(){return this.get(G=>G.userData)}set userData(G){this.set({userDataExplicit:!0,userData:G})}get dispose(){return this.get(G=>G.dispose)}set dispose(G){this.set({disposeExplicit:!0,dispose:G})}get raycast(){return this.get(G=>G.raycast)}set raycast(G){this.set({raycastExplicit:!0,raycast:G})}get appendMode(){return this.get(G=>G.appendMode)}set appendMode(G){this.set({appendModeExplicit:!0,appendMode:G})}get appendTo(){return this.get(G=>G.appendTo)}set appendTo(G){this.set({appendToExplicit:!0,appendTo:G?B.is.ref(G)?G:new k.R(G):void 0})}get optionFields(){return{name:!1,position:!1,rotation:!1,quaternion:!1,scale:!1,color:!1,castShadow:!1,receiveShadow:!1,visible:!1,matrixAutoUpdate:!1,userData:!1,dispose:!0,raycast:!0}}}return ce.\u0275fac=function(G){return new(G||ce)(N.Y36(N.R0b),N.Y36($.W),N.Y36(Q.Dh,12),N.Y36(Q.cY,12))},ce.\u0275dir=N.lG2({type:ce,inputs:{name:"name",position:"position",rotation:"rotation",quaternion:"quaternion",scale:"scale",color:"color",castShadow:"castShadow",receiveShadow:"receiveShadow",priority:"priority",visible:"visible",matrixAutoUpdate:"matrixAutoUpdate",userData:"userData",dispose:"dispose",raycast:"raycast",appendMode:"appendMode",appendTo:"appendTo"},outputs:{click:"click",contextmenu:"contextmenu",dblclick:"dblclick",pointerup:"pointerup",pointerdown:"pointerdown",pointerover:"pointerover",pointerout:"pointerout",pointerenter:"pointerenter",pointerleave:"pointerleave",pointermove:"pointermove",pointermissed:"pointermissed",pointercancel:"pointercancel",wheel:"wheel"},features:[N.qOj]}),ce})(),tt=(()=>{class ce extends xe{constructor(){super(...arguments),this.appended=new N.vpe,this.beforeRender=new N.vpe,this.animateReady=this.beforeRender,this.init=this.effect((0,O.oe)(()=>{var G,Te;if(this.instance.value&&this.__ngt__?this.switch():this.prepareInstance(this.objectInitFn(),null===(Te=null===(G=this.instance)||void 0===G?void 0:G.value)||void 0===Te?void 0:Te.uuid),this.instance.value){this.postInit&&this.postInit();const se=Ie.reduce((we,K)=>{const De=this[K].observed?this[K]:null;return De&&(we.handlers[K]=this.eventNameToHandler(De),we.eventCount+=1),we},{handlers:{},eventCount:0});(0,w.n)(this.__ngt__,{handlers:se.handlers,eventCount:se.eventCount}),se.eventCount>0&&this.store.addInteraction(this.instance.value),B.is.object3d(this.instance.value)&&this.appendToParent(),this.beforeRender.observed&&this.store.registerBeforeRender({obj:this.instance,callback:we=>{this.beforeRender.emit({state:we,object:this.instance.value})},priority:this.get(we=>we.priority)})}return()=>{this.destroy()}}))}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.onCanvasReady(this.store.ready$,()=>{this.preObjectInit?this.preObjectInit(()=>this.init(this.instanceArgs$)):this.init(this.instanceArgs$)})})}get preObjectInit(){}destroy(){this.instance.value&&(this.store.unregisterBeforeRender(this.instance.value.uuid),this.__ngt__.eventCount>0&&this.store.removeInteraction(this.instance.value.uuid),this.remove()),super.destroy()}appendToParent(){requestAnimationFrame(()=>{const G=this.get(se=>se.appendTo);if(G&&G.value)return G.value.add(this.instance.value),void this.appended.emit(this.instance.value);const Te=this.get(se=>se.appendMode);if("none"!==Te){if("root"===Te)return this.addToScene(),void this.appended.emit(this.instance.value);"immediate"===Te&&(this.addToParent(),this.appended.emit(this.instance.value))}})}addToScene(){const G=this.store.get(Te=>Te.scene);G&&G.add(this.instance.value)}addToParent(){var G;let Te=this.parent;this.shouldUseParent(Te)?Te.value.add(this.instance.value):(Te=null===(G=this.parentHostRef)||void 0===G?void 0:G.call(this),this.shouldUseParent(Te)?Te.value.add(this.instance.value):this.addToScene())}shouldUseParent(G){return G&&G.value&&G.value.uuid!==this.instance.value.uuid}remove(){const{appendMode:G,appendTo:Te}=this.get();if(Te&&Te.value)Te.value.remove(this.instance.value);else if(this.shouldUseParent(this.parent)&&"immediate"===G)this.parent.value.remove(this.instance.value);else{const se=this.store.get(we=>we.scene);se&&se.remove(this.instance.value)}}switch(){const G=this.objectInitFn();this.instance.value.children&&(this.instance.value.traverse(Te=>{Te!==this.instance.value&&Te.parent===this.instance.value&&(Te.parent=G)}),this.instance.value.children=[]),this.__ngt__.eventCount>0&&this.store.removeInteraction(this.instance.value.uuid),this.remove(),this.prepareInstance(G)}eventNameToHandler(G){return Te=>{this.zone.run(()=>{G.emit(Te)})}}}return ce.\u0275fac=function(){let Se;return function(Te){return(Se||(Se=N.n5z(ce)))(Te||ce)}}(),ce.\u0275dir=N.lG2({type:ce,outputs:{appended:"appended",beforeRender:"beforeRender",animateReady:"animateReady"},features:[N.qOj]}),ce})()},4349:(mt,Ae,_)=>{_.d(Ae,{B3:()=>Se,DX:()=>G});var N=_(4476),z=_(3193),k=_(2620),O=_(9194),$=_(532),Q=_(8756),w=_(2690),F=_(3477);const B=["rendererCanvas"];function P(se,we){if(1&se&&z.GkF(0,3),2&se){z.oxw();const K=z.MAs(4);z.Q6J("ngTemplateOutlet",K)}}function L(se,we){1&se&&z.Hsn(0)}const Ie=["*"],xe=new Map,{invalidate:tt,advance:ce}=(0,F.ip)(xe);let Se=(()=>{class se extends $.gU{constructor(K,De){super(),this.zone=K,this.store=De,this.hostClass=!0,this._initialLog=!1,this._projectContent=!1,this.created=new z.vpe,this.pointermissed=new z.vpe}set linear(K){this.store.set({linear:(0,w.I)(K)})}set legacy(K){this.store.set({legacy:(0,w.I)(K)})}set flat(K){this.store.set({flat:(0,w.I)(K)})}set frameloop(K){this.store.set({frameloop:K})}set orthographic(K){this.store.set({orthographic:(0,w.I)(K)})}set dpr(K){this.store.set({dpr:K})}set raycaster(K){this.store.set({raycasterOptions:K})}set shadows(K){this.store.set({shadows:"object"==typeof K?K:(0,w.I)(K)})}set camera(K){this.store.set({cameraOptions:K})}get cameraRef(){return this.store.get(K=>K.cameraRef)}set scene(K){this.store.set({sceneOptions:K})}get sceneRef(){return this.store.get(K=>K.sceneRef)}set gl(K){this.store.set({glOptions:K})}get initialLog(){return this._initialLog}set initialLog(K){this._initialLog=(0,w.I)(K)}get projectContent(){return this._projectContent}set projectContent(K){this._projectContent=(0,w.I)(K)}ngOnInit(){this.zone.runOutsideAngular(()=>{this.pointermissed.observed&&this.store.set({pointerMissed:K=>{this.pointermissed.emit(K)}}),xe.set(this.rendererCanvas.nativeElement,()=>this.store.get()),this.store.init(this.rendererCanvas.nativeElement,xe,tt,ce),this.onCanvasReady(this.store.ready$,()=>{const K=this.store.get();this.created.emit(K),this.initialLog&&(console.group("[NgtCanvas] Initialized"),console.log(K),console.groupEnd()),this.store.startLoop(this.store.select())})})}}return se.\u0275fac=function(K){return new(K||se)(z.Y36(z.R0b),z.Y36(Q.W))},se.\u0275cmp=z.Xpm({type:se,selectors:[["ngt-canvas"]],viewQuery:function(K,De){if(1&K&&z.Gf(B,7),2&K){let ae;z.iGM(ae=z.CRH())&&(De.rendererCanvas=ae.first)}},hostVars:2,hostBindings:function(K,De){2&K&&z.ekj("ngt-canvas",De.hostClass)},inputs:{linear:"linear",legacy:"legacy",flat:"flat",frameloop:"frameloop",orthographic:"orthographic",dpr:"dpr",raycaster:"raycaster",shadows:"shadows",camera:"camera",scene:"scene",gl:"gl",initialLog:"initialLog",projectContent:"projectContent"},outputs:{created:"created",pointermissed:"pointermissed"},features:[z._Bn([Q.W,O.I,(0,k.RP)(se)]),z.qOj],ngContentSelectors:Ie,decls:5,vars:1,consts:[["rendererCanvas",""],[3,"ngTemplateOutlet",4,"ngIf"],["contentTemplate",""],[3,"ngTemplateOutlet"]],template:function(K,De){1&K&&(z.F$t(),z._UZ(0,"canvas",null,0),z.YNc(2,P,1,1,"ng-container",1),z.YNc(3,L,1,0,"ng-template",null,2,z.W1O)),2&K&&(z.xp6(2),z.Q6J("ngIf",De.projectContent))},directives:[N.O5,N.tP],styles:["[_nghost-%COMP%]{display:block;position:relative;width:100%;height:100%;overflow:hidden}[_nghost-%COMP%]   canvas[_ngcontent-%COMP%]{display:block}"],changeDetection:0}),se})(),G=(()=>{class se{}return se.\u0275fac=function(K){return new(K||se)},se.\u0275mod=z.oAB({type:se}),se.\u0275inj=z.cJS({imports:[[N.ez]]}),se})()},7335:(mt,Ae,_)=>{_.d(Ae,{U:()=>k});var N=_(9973),z=_(6029);function k($,Q){return[{provide:N.W,useExisting:$},{provide:z.cz,useFactory:w=>()=>(null==Q?void 0:Q(w))||w.instance,deps:[$]}]}},2620:(mt,Ae,_)=>{_.d(Ae,{Hm:()=>$,Q2:()=>O,RP:()=>Q});var N=_(5796),z=_(6029),k=_(7335);function O(w,F){return[(0,k.U)(w,F),{provide:N.J,useExisting:w},{provide:z.Dh,useFactory:B=>()=>(null==F?void 0:F(B))||B.instance,deps:[w]}]}function $(w,F,B){return[{provide:N.J,useExisting:w},{provide:z.cz,useFactory:P=>()=>F?F(P):P.instance,deps:[w]},{provide:z.Aw,useFactory:P=>B?B(P):P.parentRef,deps:[w]},{provide:z.Dh,useFactory:P=>()=>F?F(P):P.instance,deps:[w]},{provide:z.cY,useFactory:P=>B?B(P):P.parentRef,deps:[w]}]}function Q(w){return[{provide:z.cz,useFactory:F=>()=>F.sceneRef,deps:[w]},{provide:z.Dh,useFactory:F=>()=>F.sceneRef,deps:[w]},{provide:z.e9,useFactory:F=>()=>F.sceneRef,deps:[w]},{provide:z.mK,useFactory:F=>()=>F.cameraRef,deps:[w]}]}},2944:(mt,Ae,_)=>{_.d(Ae,{M:()=>z,n:()=>k});const z=new(_(3193).OlP)("NgtPerformance options",{factory:()=>({current:1,min:.5,max:1,debounce:200})});function k(O){return{provide:z,useValue:Object.assign({current:1,min:.5,max:1,debounce:200},O)}}},3238:(mt,Ae,_)=>{_.d(Ae,{Ji:()=>w,N1:()=>$});var N=_(3193),z=_(4891);const $=new N.OlP("ngtResizeObserver Options",{factory:()=>({box:"content-box",scroll:!1,offsetSize:!1,debounce:200})}),w=new N.OlP("Resize Observer API support",{factory:()=>{const F=(0,N.f3M)(z.m);return"ResizeObserver"in F&&null!=F.ResizeObserver}})},4891:(mt,Ae,_)=>{_.d(Ae,{m:()=>k});var N=_(4476),z=_(3193);const k=new z.OlP("window",{factory:()=>{const{defaultView:O}=(0,z.f3M)(N.K0);if(!O)throw"window is not available!";return O}})},9049:(mt,Ae,_)=>{_.d(Ae,{V:()=>Q,y:()=>w});var N=_(5255),z=_(9429),k=_(5796),O=_(532),$=_(3193);let Q=(()=>{class F{constructor(P){this.host=P}set ngtObjectOutputs(P){this.assertWrapper(P),P.click.observed&&this.host.click.pipe((0,N.R)(P.destroy$)).subscribe(P.click.emit.bind(P.click)),P.contextmenu.observed&&this.host.contextmenu.pipe((0,N.R)(P.destroy$)).subscribe(P.contextmenu.emit.bind(P.contextmenu)),P.dblclick.observed&&this.host.dblclick.pipe((0,N.R)(P.destroy$)).subscribe(P.dblclick.emit.bind(P.dblclick)),P.pointerup.observed&&this.host.pointerup.pipe((0,N.R)(P.destroy$)).subscribe(P.pointerup.emit.bind(P.pointerup)),P.pointerdown.observed&&this.host.pointerdown.pipe((0,N.R)(P.destroy$)).subscribe(P.pointerdown.emit.bind(P.pointerdown)),P.pointerover.observed&&this.host.pointerover.pipe((0,N.R)(P.destroy$)).subscribe(P.pointerover.emit.bind(P.pointerover)),P.pointerout.observed&&this.host.pointerout.pipe((0,N.R)(P.destroy$)).subscribe(P.pointerout.emit.bind(P.pointerout)),P.pointerenter.observed&&this.host.pointerenter.pipe((0,N.R)(P.destroy$)).subscribe(P.pointerenter.emit.bind(P.pointerenter)),P.pointerleave.observed&&this.host.pointerleave.pipe((0,N.R)(P.destroy$)).subscribe(P.pointerleave.emit.bind(P.pointerleave)),P.pointermove.observed&&this.host.pointermove.pipe((0,N.R)(P.destroy$)).subscribe(P.pointermove.emit.bind(P.pointermove)),P.pointermissed.observed&&this.host.pointermissed.pipe((0,N.R)(P.destroy$)).subscribe(P.pointermissed.emit.bind(P.pointermissed)),P.pointercancel.observed&&this.host.pointercancel.pipe((0,N.R)(P.destroy$)).subscribe(P.pointercancel.emit.bind(P.pointercancel)),P.wheel.observed&&this.host.wheel.pipe((0,N.R)(P.destroy$)).subscribe(P.wheel.emit.bind(P.wheel)),P.ready.observed&&this.host.ready.pipe((0,N.R)(P.destroy$)).subscribe(P.ready.emit.bind(P.ready))}set ngtObjectInputs(P){this.assertWrapper(P),P.shouldPassThroughRef&&(this.host.ref=P.instance),(0,z.T)(P.select(L=>L.attach),this.host.select(L=>L.attach)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.attach=this.host.get(L=>L.attachExplicit)?this.host.attach:P.attach}),(0,z.T)(P.select(L=>L.skipParent),this.host.select(L=>L.skipParent)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.skipParent=this.host.get(L=>L.skipParentExplicit)?this.host.skipParent:P.skipParent}),(0,z.T)(P.select(L=>L.noAttach),this.host.select(L=>L.noAttach)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.noAttach=this.host.get(L=>L.noAttachExplicit)?this.host.noAttach:P.noAttach}),(0,z.T)(P.select(L=>L.name),this.host.select(L=>L.name)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.name=this.host.get(L=>L.nameExplicit)?this.host.name:P.name}),(0,z.T)(P.select(L=>L.position),this.host.select(L=>L.position)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.position=this.host.get(L=>L.positionExplicit)?this.host.position:P.position}),(0,z.T)(P.select(L=>L.rotation),this.host.select(L=>L.rotation)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.rotation=this.host.get(L=>L.rotationExplicit)?this.host.rotation:P.rotation}),(0,z.T)(P.select(L=>L.quaternion),this.host.select(L=>L.quaternion)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.quaternion=this.host.get(L=>L.quaternionExplicit)?this.host.quaternion:P.quaternion}),(0,z.T)(P.select(L=>L.scale),this.host.select(L=>L.scale)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.scale=this.host.get(L=>L.scaleExplicit)?this.host.scale:P.scale}),(0,z.T)(P.select(L=>L.color),this.host.select(L=>L.color)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.color=this.host.get(L=>L.colorExplicit)?this.host.color:P.color}),(0,z.T)(P.select(L=>L.userData),this.host.select(L=>L.userData)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.userData=this.host.get(L=>L.userDataExplicit)?this.host.userData:P.userData}),(0,z.T)(P.select(L=>L.castShadow).pipe((0,O.Xb)()),this.host.select(L=>L.castShadow).pipe((0,O.Xb)())).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.castShadow=this.host.get(L=>L.castShadowExplicit)?this.host.castShadow:P.castShadow}),(0,z.T)(P.select(L=>L.receiveShadow).pipe((0,O.Xb)()),this.host.select(L=>L.receiveShadow).pipe((0,O.Xb)())).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.receiveShadow=this.host.get(L=>L.receiveShadowExplicit)?this.host.receiveShadow:P.receiveShadow}),(0,z.T)(P.select(L=>L.visible),this.host.select(L=>L.visible)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.visible=this.host.get(L=>L.visibleExplicit)?this.host.visible:P.visible}),(0,z.T)(P.select(L=>L.matrixAutoUpdate),this.host.select(L=>L.matrixAutoUpdate)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.matrixAutoUpdate=this.host.get(L=>L.matrixAutoUpdateExplicit)?this.host.matrixAutoUpdate:P.matrixAutoUpdate}),(0,z.T)(P.select(L=>L.dispose).pipe((0,O.Xb)()),this.host.select(L=>L.dispose).pipe((0,O.Xb)())).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.dispose=this.host.get(L=>L.disposeExplicit)?this.host.dispose:P.dispose}),(0,z.T)(P.select(L=>L.raycast).pipe((0,O.Xb)()),this.host.select(L=>L.raycast).pipe((0,O.Xb)())).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.raycast=this.host.get(L=>L.raycastExplicit)?this.host.raycast:P.raycast}),(0,z.T)(P.select(L=>L.appendMode),this.host.select(L=>L.appendMode)).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.appendMode=this.host.get(L=>L.appendModeExplicit)?this.host.appendMode:P.appendMode}),(0,z.T)(P.select(L=>L.appendTo).pipe((0,O.Xb)()),this.host.select(L=>L.appendTo).pipe((0,O.Xb)())).pipe((0,N.R)(P.destroy$)).subscribe(()=>{this.host.appendTo=this.host.get(L=>L.appendToExplicit)?this.host.appendTo:P.appendTo})}assertWrapper(P){if(!(P instanceof k.F))throw new Error("[NgtObjectPassThrough] wrapper is not an NgtObject")}}return F.\u0275fac=function(P){return new(P||F)($.Y36(k.J,10))},F.\u0275dir=$.lG2({type:F,selectors:[["","ngtObjectOutputs",""],["","ngtObjectInputs",""],["","ngtObjectInputs","","ngtObjectOutputs",""]],inputs:{ngtObjectOutputs:"ngtObjectOutputs",ngtObjectInputs:"ngtObjectInputs"}}),F})(),w=(()=>{class F{}return F.\u0275fac=function(P){return new(P||F)},F.\u0275mod=$.oAB({type:F}),F.\u0275inj=$.cJS({}),F})()},9461:(mt,Ae,_)=>{_.d(Ae,{j:()=>z,k:()=>k});var N=_(3193);let z=(()=>{class O{transform(Q){return Q*Math.PI/180}}return O.\u0275fac=function(Q){return new(Q||O)},O.\u0275pipe=N.Yjl({name:"radian",type:O,pure:!0}),O})(),k=(()=>{class O{}return O.\u0275fac=function(Q){return new(Q||O)},O.\u0275mod=N.oAB({type:O}),O.\u0275inj=N.cJS({}),O})()},2455:(mt,Ae,_)=>{_.d(Ae,{g:()=>O,i:()=>k});var N=_(2046),z=_(3193);let k=(()=>{class ${transform(w){switch(w){case"front":return N.Wl3;case"back":return N._Li;case"double":return N.ehD}}}return $.\u0275fac=function(w){return new(w||$)},$.\u0275pipe=z.Yjl({name:"side",type:$,pure:!0}),$})(),O=(()=>{class ${}return $.\u0275fac=function(w){return new(w||$)},$.\u0275mod=z.oAB({type:$}),$.\u0275inj=z.cJS({}),$})()},2375:(mt,Ae,_)=>{_.d(Ae,{WS:()=>se,yh:()=>we});var N=_(4254),z=_(4476),k=_(2310),O=_(2046),$=_(9973),Q=_(9194),w=_(532),F=_(8756),B=_(6029),P=_(6238),L=_(6671),Ie=_(9809),xe=_(3193);const tt=function(K){return{portal:K}};function ce(K,De){if(1&K&&xe.GkF(0,1),2&K){const ae=xe.oxw();xe.Q6J("ngTemplateOutlet",ae.content.templateRef)("ngTemplateOutletContext",xe.VKq(2,tt,ae.instance))}}const Se=["*"],G=["events","invalidate","advance","size","viewport"];let Te=(()=>{class K{constructor(ae){this.templateRef=ae}static ngTemplateContextGuard(ae,ze){return!0}}return K.\u0275fac=function(ae){return new(ae||K)(xe.Y36(xe.Rgc))},K.\u0275dir=xe.lG2({type:K,selectors:[["ng-template","ngt-portal-content",""]]}),K})(),se=(()=>{class K extends $.W{constructor(ae,ze,Ve,Qe,We){super(ae,ze,Ve,Qe),this.resizeResult$=We,this.init=this.effect((0,k.b)(()=>{const Ue=this.store.get();this.set(Ee=>{var re,ee;return{raycaster:new O.iMs,pointer:new O.FM8,size:null!==(re=Ee.size)&&void 0!==re?re:Ue.size,events:null!==(ee=Ee.events)&&void 0!==ee?ee:Ue.events}})})),this.initPortalStore=this.effect((0,k.b)(()=>{var Ue;const Ee=this.store.get(),re=this.get(),ee={clientWidth:re.size.width,clientHeight:re.size.height},Fe=(0,N._T)(Ee.performance,["regress"]),Re=new F.W({nativeElement:ee},Fe,{devicePixelRatio:(0,Ie.CE)(Ee.viewport.dpr)},this.store,this.resizeResult$,this.zone),Le=this.instance;let Ce=this.instance.value;Ce||(Ce=(0,L.P)(new O.xsS,()=>Re.get(),null===(Ue=this.parentRef)||void 0===Ue?void 0:Ue.call(this)),this.instance.set(Ce)),Re.set(Object.assign(Object.assign({},Ee),{scene:Ce,sceneRef:Le,raycaster:re.raycaster,pointer:re.pointer,mouse:re.pointer,previousState:this.store.get(),events:Object.assign(Object.assign({},Ee.events),re.events),size:Object.assign(Object.assign({},Ee.size),re.size)})),this.set({portalStore:Re})})),this.subscribeToRoot=this.effect((0,w.oe)(()=>{const Ue=this.store.select().subscribe(Ee=>{this.get(re=>re.portalStore).set(re=>this.inject(Ee,re))});return()=>{Ue.unsubscribe()}})),this.setInitialPortalState=this.effect((0,k.b)(()=>{this.get(Ue=>Ue.portalStore).set(Ue=>this.inject(this.store.get(),Ue))}))}set size(ae){this.set({size:ae})}set events(ae){this.set({events:ae})}ngOnInit(){super.ngOnInit(),this.zone.runOutsideAngular(()=>{this.init(),this.onCanvasReady(this.store.ready$,()=>{this.initPortalStore(),this.subscribeToRoot(),this.setInitialPortalState()})})}inject(ae,ze){const{size:Ve,events:Qe,portalStore:We}=this.get(),Ue=We.get(),{scene:Ee,raycaster:re,pointer:ee,previousState:be,events:Ke,size:Fe,viewport:Re,mouse:Le}=Ue,Ce=(0,N._T)(Ue,["scene","raycaster","pointer","previousState","events","size","viewport","mouse"]),Ne=Object.assign({},ae);let ut;if(Object.keys(ae).forEach(et=>{(G.includes(et)||ae[et]!==ze[et])&&delete Ne[et]}),ze&&Ve){const et=ze.camera;ut=ae.viewport.getCurrentViewport(et,new O.Pa4,Ve),et!==ae.camera&&(0,P.H)(ae.cameraOptions,et,Ve)}return Object.assign(Object.assign(Object.assign({},Ne),{scene:Ee,raycaster:re,pointer:ee,mouse:Le,previousState:be,events:Object.assign(Object.assign(Object.assign({},ae.events),(null==ze?void 0:ze.events)||Ke),Qe),size:Object.assign(Object.assign(Object.assign({},ae.size),Fe),Ve),viewport:Object.assign(Object.assign({},ae.viewport),ut||Re)}),Ce)}}return K.\u0275fac=function(ae){return new(ae||K)(xe.Y36(xe.R0b),xe.Y36(F.W,4),xe.Y36(B.cz,12),xe.Y36(B.Aw,12),xe.Y36(Q.I))},K.\u0275cmp=xe.Xpm({type:K,selectors:[["ngt-portal"]],contentQueries:function(ae,ze,Ve){if(1&ae&&xe.Suo(Ve,Te,5),2&ae){let Qe;xe.iGM(Qe=xe.CRH())&&(ze.content=Qe.first)}},inputs:{size:"size",events:"events"},features:[xe._Bn([Q.I,{provide:F.W,useFactory:De=>De.get(ae=>ae.portalStore),deps:[K]},{provide:B.cz,useFactory:De=>()=>De.get(ae=>ae.portalStore).get(ae=>ae.sceneRef),deps:[K]},{provide:B.Dh,useFactory:De=>()=>De.get(ae=>ae.portalStore).get(ae=>ae.sceneRef),deps:[K]},{provide:B.e9,useFactory:De=>()=>De.get(ae=>ae.portalStore).get(ae=>ae.sceneRef),deps:[K]},{provide:B.mK,useFactory:De=>()=>De.get(ae=>ae.portalStore).get(ae=>ae.cameraRef),deps:[K]}]),xe.qOj],ngContentSelectors:Se,decls:2,vars:1,consts:[[3,"ngTemplateOutlet","ngTemplateOutletContext",4,"ngIf"],[3,"ngTemplateOutlet","ngTemplateOutletContext"]],template:function(ae,ze){1&ae&&(xe.F$t(),xe.YNc(0,ce,1,4,"ng-container",0),xe.Hsn(1)),2&ae&&xe.Q6J("ngIf",ze.content)},directives:[z.O5,z.tP],encapsulation:2,changeDetection:0}),K})(),we=(()=>{class K{}return K.\u0275fac=function(ae){return new(ae||K)},K.\u0275mod=xe.oAB({type:K}),K.\u0275inj=xe.cJS({imports:[[z.ez]]}),K})()},3139:(mt,Ae,_)=>{_.d(Ae,{R:()=>z});var N=_(2369);class z extends N.X{constructor(O){super(O||null)}set(O){this.next("function"==typeof O?O(this.value):O)}}},9194:(mt,Ae,_)=>{_.d(Ae,{I:()=>Ve});var N=_(4476),z=_(3193),k=_(9072),O=_(6682),$=_(1844),Q=_(3667),w=_(3205),F=_(9453);const B=["addListener","removeListener"],P=["addEventListener","removeEventListener"],L=["on","off"];function Ie(Ee,re,ee,be){if((0,w.m)(ee)&&(be=ee,ee=void 0),be)return Ie(Ee,re,ee).pipe((0,F.Z)(be));const[Ke,Fe]=function Se(Ee){return(0,w.m)(Ee.addEventListener)&&(0,w.m)(Ee.removeEventListener)}(Ee)?P.map(Re=>Le=>Ee[Re](re,Le,ee)):function tt(Ee){return(0,w.m)(Ee.addListener)&&(0,w.m)(Ee.removeListener)}(Ee)?B.map(xe(Ee,re)):function ce(Ee){return(0,w.m)(Ee.on)&&(0,w.m)(Ee.off)}(Ee)?L.map(xe(Ee,re)):[];if(!Ke&&(0,Q.z)(Ee))return(0,$.z)(Re=>Ie(Re,re,ee))((0,k.Xf)(Ee));if(!Ke)throw new TypeError("Invalid event target");return new O.y(Re=>{const Le=(...Ce)=>Re.next(1<Ce.length?Ce:Ce[0]);return Ke(Le),()=>Fe(Le)})}function xe(Ee,re){return ee=>be=>Ee[ee](re,be)}var G=_(3691),Te=_(4643),se=_(8414),we=_(5255),K=_(6329),De=_(310),ae=_(3238),ze=_(4891);let Ve=(()=>{class Ee extends O.y{constructor({nativeElement:ee},be,Ke,Fe,Re,{box:Le,offsetSize:Ce,scroll:Ne,debounce:ut}){let et,Kt,zn=[];const Ci=new G.x,di=Qe(ee),mn=ut?"number"==typeof ut?ut:ut.scroll:null,Zi=ut?"number"==typeof ut?ut:ut.resize:null,fi=Hn=>(0,Te.z)((0,se.b)(null!=Hn?Hn:0),(0,we.R)(Ci));return super(Hn=>{if(Re)return be.runOutsideAngular(()=>{const Yt=tn=>{zn=tn;const{left:qt,top:Xn,width:On,height:no,bottom:gr,right:io,x:qi,y:Gn}=ee.getBoundingClientRect(),Tn={left:qt,top:Xn,width:On,height:no,bottom:gr,right:io,x:qi,y:Gn};ee instanceof HTMLElement&&Ce&&(Tn.height=ee.offsetHeight,Tn.width=ee.offsetWidth),Object.freeze(Tn),Hn.next(Object.assign({entries:tn,dpr:Fe.devicePixelRatio},Tn)),Ue(Kt||{},Tn)||(Kt=Tn)},Zt=()=>{Yt(zn)};et=new ResizeObserver(Yt),et.observe(ee,{box:Le}),Ne&&(di&&di.forEach(tn=>{Ie(tn,"scroll",{capture:!0,passive:!0}).pipe(fi(mn)).subscribe(Zt)}),Ie(Fe,"scroll",{capture:!0,passive:!0}).pipe(fi(mn)).subscribe(Zt)),Ie(Fe,"resize").pipe(fi(Zi)).subscribe(Zt)}),()=>{et&&(et.unobserve(ee),et.disconnect()),Ci.next(),Ci.complete()};Hn.error("ResizeObserver is not supported in your browser. Please use a polyfill")}),this.pipe((0,se.b)(mn||0),(0,K.B)({connector:()=>new De.t(1),resetOnRefCountZero:!0,resetOnComplete:!0}))}}return Ee.\u0275fac=function(ee){return new(ee||Ee)(z.LFG(z.SBq),z.LFG(z.R0b),z.LFG(N.K0),z.LFG(ze.m),z.LFG(ae.Ji),z.LFG(ae.N1))},Ee.\u0275prov=z.Yz7({token:Ee,factory:Ee.\u0275fac}),Ee})();function Qe(Ee){const re=[];if(!Ee||Ee===document.body)return re;const{overflow:ee,overflowX:be,overflowY:Ke}=window.getComputedStyle(Ee);return[ee,be,Ke].some(Fe=>"auto"===Fe||"scroll"===Fe)&&re.push(Ee),[...re,...Qe(Ee.parentElement)]}const We=["x","y","top","bottom","left","right","width","height"],Ue=(Ee,re)=>We.every(ee=>Ee[ee]===re[ee])},532:(mt,Ae,_)=>{_.d(Ae,{gU:()=>Ee,Xb:()=>Ke,oe:()=>re});var N=_(9941),z=_(1446),k=_(4080);function O(Re,Le=N.y){return Re=null!=Re?Re:$,(0,z.e)((Ce,Ne)=>{let ut,et=!0;Ce.subscribe((0,k.x)(Ne,Kt=>{const zn=Le(Kt);(et||!Re(ut,zn))&&(et=!1,ut=zn,Ne.next(Kt))}))})}function $(Re,Le){return Re===Le}var Q=_(9622),F=_(8191);const P=new class B extends F.v{}(class w extends Q.o{constructor(Le,Ce){super(Le,Ce),this.scheduler=Le,this.work=Ce}schedule(Le,Ce=0){return Ce>0?super.schedule(Le,Ce):(this.delay=Ce,this.state=Le,this.scheduler.flush(this),this)}execute(Le,Ce){return Ce>0||this.closed?super.execute(Le,Ce):this._execute(Le,Ce)}requestAsyncId(Le,Ce,Ne=0){return null!=Ne&&Ne>0||null==Ne&&this.delay>0?super.requestAsyncId(Le,Ce,Ne):Le.flush(this)}});var Ie=_(310),xe=_(6083),tt=_(6742),ce=_(6329),Se=_(5255),G=_(6422),Te=_(1238),se=_(3691),we=_(758),K=_(2310),De=_(5285),ae=_(7705),ze=_(7897),Ve=_(6153),Qe=_(3715),We=_(6517),Ue=_(3193);let Ee=(()=>{class Re{constructor(){this.destroySubject$=new Ie.t(1),this.destroy$=this.destroySubject$.asObservable(),this.stateSubject$=new Ie.t(1)}ngOnDestroy(){this.stateSubject$.complete(),this.destroySubject$.next()}get(Ce){let Ne;return this.stateSubject$.pipe((0,xe.q)(1),be(),(0,tt.U)(ut=>Ce?Ce(ut):ut),be()).subscribe(ut=>{Ne=ut}),Ne}set(Ce){const Ne="function"==typeof Ce?Ce(this.get()):Ce;this.updateState((ut,et)=>Object.assign(Object.assign({},ut),et))(Ne)}select(...Ce){if(0===Ce.length)return this.stateSubject$.pipe(be(),O(),(0,ce.B)({connector:()=>new Ie.t(1),resetOnComplete:!0,resetOnRefCountZero:!0,resetOnError:!0}),(0,Se.R)(this.destroy$));(0,G.b)(Ce[Ce.length-1])&&Ce.push(()=>({}));const{observables:Ne,projector:ut}=function Fe(Re){const Le=Array.from(Re),Ce=Le.pop();return{observables:Le,projector:Ce}}(Ce);let et;return et=0===Ne.length?this.stateSubject$.pipe(be(),(0,tt.U)(ut)):(0,Te.a)(Ne).pipe((0,tt.U)(Kt=>ut(...Kt))),et.pipe(be(),O(),(0,ce.B)({connector:()=>new Ie.t(1),resetOnComplete:!0,resetOnRefCountZero:!0,resetOnError:!0}),(0,Se.R)(this.destroy$))}effect(Ce){const Ne=new se.x;return Ce(Ne).pipe((0,Se.R)(this.destroy$)).subscribe(),ut=>((0,G.b)(ut)?ut:(0,we.of)(ut)).pipe((0,Se.R)(this.destroy$)).subscribe(Kt=>{Ne.next(Kt)})}onCanvasReady(Ce,Ne,ut=!1){return this.effect((ut?re:K.b)(()=>Ne()))(Ce)}subscribeTo(Ce){return this.effect(Ne=>Ne)(Ce)}updateState(Ce){return Ne=>((0,G.b)(Ne)?Ne:(0,we.of)(Ne)).pipe((0,De.b)(et=>(0,ae.x)([et],P).pipe((0,ze.M)(this.stateSubject$.pipe((0,Ve.O)({}))))),(0,Se.R)(this.destroy$)).subscribe({next:([et,Kt])=>{this.stateSubject$.next(Ce(Kt||{},et))},error:et=>{this.stateSubject$.error(et)}})}}return Re.\u0275fac=function(Ce){return new(Ce||Re)},Re.\u0275prov=Ue.Yz7({token:Re,factory:Re.\u0275fac}),Re})();function re(Re){let Ne,Le=Qe.Z,Ce=!1;const ut=et=>()=>{Le&&Le({prev:Ne,complete:!0,error:et})};return(0,K.b)({next:et=>{Le&&Ce&&Le({prev:Ne,complete:!1,error:!1});const Kt=Re(et);Kt&&(Le=Kt),Ne=et,Ce||(Ce=!0)},complete:ut(!1),unsubscribe:ut(!1),error:ut(!0)})}function be(){return(0,We.h)(Re=>void 0!==Re)}function Ke(){return(0,Ve.O)(void 0)}},8756:(mt,Ae,_)=>{_.d(Ae,{W:()=>we});var N=_(4254),z=_(6517),k=_(6742),O=_(2310),$=_(2046),Q=_(2944),w=_(4891),F=_(3139),B=_(9194),P=_(8961),L=_(6238),Ie=_(8216),xe=_(8658),tt=_(6671),ce=_(5918),Se=_(9809),G=_(532),Te=_(3193);const se={click:!1,contextmenu:!1,dblclick:!1,wheel:!1,pointerdown:!0,pointerup:!0,pointerleave:!0,pointermove:!0,pointercancel:!0,lostpointercapture:!0};let we=(()=>{class De extends G.gU{constructor({nativeElement:{clientWidth:ze,clientHeight:Ve}},Qe,{devicePixelRatio:We},Ue,Ee,re){super(),this.parentStore=Ue,this.resizeResult$=Ee,this.zone=re,this.pointer=new $.FM8,this.position=new $.Pa4,this.defaultTarget=new $.Pa4,this.tempTarget=new $.Pa4,this.ready$=this.select(ee=>ee.ready).pipe((0,z.h)(ee=>ee)),this.camera$=this.select(ee=>ee.camera),this.scene$=this.select(ee=>ee.scene),this.gl$=this.select(ee=>ee.gl),this.raycaster$=this.select(ee=>ee.raycaster),this.active$=this.select(ee=>ee.internal.active),this.allConstructed$=this.select(this.camera$,this.scene$,this.gl$,this.raycaster$,this.active$,(ee,be,Ke,Fe,Re)=>!!(ee&&Ke&&be&&Fe&&!0===Re)).pipe((0,k.U)(ee=>({ready:ee}))),this.performanceTimeoutId=void 0,this.dimensions$=this.select(this.select(ee=>ee.size),this.select(ee=>ee.viewport),(ee,be)=>({size:ee,viewport:be})),this.startLoop=this.effect((0,O.b)(({invalidate:ee})=>{ee()})),this.initRenderer=this.effect((0,G.oe)(({canvasElement:ee,rootStateMap:be,advance:Ke})=>{var Fe,Re,Le,Ce;const Ne=this.get(),ut=(0,tt.P)(new $.xsS,()=>this.get(),(null===(Fe=this.parentStore)||void 0===Fe?void 0:Fe.get(Yt=>Yt.sceneRef))||null);(0,P.n)(ut,Ne.sceneOptions),this.get(Yt=>Yt.sceneRef).set(ut);let et=Ne.gl;Ne.gl||(et=function K(De,ae){const ze="function"==typeof De?De(ae):De;return null!=(null==ze?void 0:ze.render)?ze:new $.CP7(Object.assign({powerPreference:"high-performance",canvas:ae,antialias:!0,alpha:!0},De))}(Ne.glOptions,ee)),this.set({gl:et});let Kt=Ne.raycaster;Ne.raycaster||(Kt=new $.iMs);const zn=Ne.raycasterOptions||{},{params:Ci}=zn,di=(0,N._T)(zn,["params"]);(0,P.n)(Kt,Object.assign(Object.assign({enabled:!0},di),{params:Object.assign(Object.assign({},Kt.params),Ci||{})}));let mn=Ne.camera;if(!Ne.camera){const Yt=ce.is.camera(Ne.cameraOptions);if(mn=Yt?Ne.cameraOptions:(0,L.W)(Ne),!Yt){if(Ne.cameraOptions&&(0,P.n)(mn,Ne.cameraOptions),(null===(Re=Ne.cameraOptions)||void 0===Re?void 0:Re.position)||(mn.position.z=5),!(null===(Le=Ne.cameraOptions)||void 0===Le?void 0:Le.rotation))if(Ne.cameraOptions.lookAt){const Zt=Ne.cameraOptions.lookAt;ce.is.arr(Zt)?mn.lookAt(Zt[0],Zt[1],Zt[2]):mn.lookAt(Zt)}else mn.lookAt(0,0,0);mn.updateProjectionMatrix()}ce.is.instance(mn)||(mn=(0,tt.P)(mn,()=>this.get(),(null===(Ce=this.parentStore)||void 0===Ce?void 0:Ce.get(Zt=>Zt.cameraRef))||null)),this.get(Zt=>Zt.cameraRef).set(mn)}let Zi=Ne.xr;if(!Ne.xr){const Yt=(tn,qt)=>{const Xn=this.get();"never"!==Xn.frameloop&&Ke(tn,!0,()=>Xn,qt)},Zt=()=>{const tn=this.get(qt=>qt.gl);tn.xr.enabled=tn.xr.isPresenting,tn.xr.setAnimationLoop(tn.xr.isPresenting?Yt:null)};Zi={connect:()=>{const tn=this.get(qt=>qt.gl);tn.xr.addEventListener("sessionstart",Zt),tn.xr.addEventListener("sessionend",Zt)},disconnect:()=>{const tn=this.get(qt=>qt.gl);tn.xr.removeEventListener("sessionstart",Zt),tn.xr.removeEventListener("sessionend",Zt)}},et.xr&&Zi.connect()}et.shadowMap&&Ne.shadows&&(et.shadowMap.enabled=!0,"object"==typeof Ne.shadows?Object.assign(et.shadowMap,Ne.shadows):et.shadowMap.type=$.ntZ,(0,Ie.Q)(et.shadowMap)),$.epp&&($.epp.legacyMode=Ne.legacy);const fi=Ne.linear?$.rnI:$.knz,Hn=Ne.flat?$.uL9:$.LY2;return et.outputEncoding!==fi&&(et.outputEncoding=fi),et.toneMapping!==Hn&&(et.toneMapping=Hn),et.setClearAlpha(0),et.setPixelRatio((0,Se.CE)(Ne.viewport.dpr)),et.setSize(Ne.size.width,Ne.size.height),"object"==typeof Ne.glOptions&&"function"!=typeof Ne.glOptions&&!ce.is.glRenderer(Ne.glOptions)&&(0,P.n)(et,Ne.glOptions),this.set({gl:et,camera:mn,scene:ut,raycaster:Kt}),()=>{const{gl:Yt,xr:Zt,cameraRef:tn,sceneRef:qt,events:Xn}=this.get();Yt&&(Xn.disconnect&&Xn.disconnect(),Yt.renderLists.dispose(),Yt.forceContextLoss(),Yt.xr&&Yt.xr.enabled&&(Yt.xr.setAnimationLoop(null),Zt.disconnect()),tn.complete(),qt.complete(),this.set(On=>Object.assign(Object.assign({},On),{internal:Object.assign(Object.assign({},On.internal),{active:!1})})),be.delete(ee))}})),this.resize=this.effect((0,O.b)(({width:ee,height:be,dpr:Ke})=>{this.set(({viewport:Fe,camera:Re})=>{const Le={width:ee,height:be};return{size:Le,viewport:Object.assign(Object.assign(Object.assign({},Fe),Fe.getCurrentViewport(Re,this.defaultTarget,Le)),{dpr:(0,Se.CE)(Ke)})}})})),this.updateDimensions=this.effect((0,O.b)(({size:ee,viewport:be})=>{const{camera:Ke,gl:Fe,ready:Re,cameraOptions:Le}=this.get();Re&&((0,L.H)(Le,Ke,ee),Fe.setPixelRatio(be.dpr),Fe.setSize(ee.width,ee.height))})),this.registerBeforeRenderEffect=this.effect((0,G.oe)(ee=>{var{uuid:be}=ee,Ke=(0,N._T)(ee,["uuid"]);return be&&this.set(Fe=>({internal:Object.assign(Object.assign({},Fe.internal),{animations:new Map(Fe.internal.animations).set(be,Ke),priority:Fe.internal.priority+((Ke.priority||0)>0?1:0)})})),({prev:{uuid:Fe}={},complete:Re})=>{(Fe!==be||Re)&&this.unregisterBeforeRender(be)}})),this.updateSubscribers=this.effect((0,O.b)(({animations:ee})=>{if(!ee.size)return;const Ke=Array.from(ee.values());Ke.sort((Fe,Re)=>(Fe.priority||0)-(Re.priority||0)),this.set(Fe=>({internal:Object.assign(Object.assign({},Fe.internal),{subscribers:Ke})}))})),this.set({ready:!1,clock:new $.SUY,frameloop:"always",legacy:!1,linear:!1,flat:!1,orthographic:!1,shadows:!1,controls:null,pointer:this.pointer,mouse:this.pointer,sceneRef:new F.R,cameraRef:new F.R,events:{priority:1,enabled:!0,connected:void 0,handlers:{},compute:(ee,be)=>{be.pointer.set(ee.offsetX/be.size.width*2-1,-ee.offsetY/be.size.height*2+1),be.raycaster.setFromCamera(be.pointer,be.camera)}},cameraOptions:{},glOptions:{},raycasterOptions:{},sceneOptions:{},pointerMissed:()=>{},internal:{active:!1,lastEvent:null,priority:0,frames:0,interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,animations:new Map},dpr:[1,2],size:{width:ze,height:Ve},viewport:{initialDpr:We||1,dpr:We||1,width:ze,height:Ve,aspect:ze/Ve,distance:0,factor:0,getCurrentViewport:(ee=this.get(Fe=>Fe.camera),be=this.defaultTarget,Ke=this.get(Fe=>Fe.size))=>{const{width:Fe,height:Re}=Ke,Le=Fe/Re;be instanceof $.Pa4?this.tempTarget.copy(be):this.tempTarget.set(...be);const Ce=ee.getWorldPosition(this.position).distanceTo(this.tempTarget);if(ce.is.orthographic(ee))return{width:Fe/ee.zoom,height:Re/ee.zoom,factor:1,distance:Ce,aspect:Le};const Ne=ee.fov*Math.PI/180,ut=2*Math.tan(Ne/2)*Ce,et=ut*(Fe/Re);return{width:et,height:ut,factor:Fe/et,distance:Ce,aspect:Le}}},performance:Object.assign(Object.assign({},Qe),{regress:()=>{this.zone.runOutsideAngular(()=>{const ee=this.get(be=>be.performance);this.performanceTimeoutId&&clearTimeout(this.performanceTimeoutId),ee.current!==ee.min&&this.set(be=>({performance:Object.assign(Object.assign({},be.performance),{current:ee.min})})),this.performanceTimeoutId=setTimeout(()=>this.set(be=>({performance:Object.assign(Object.assign({},be.performance),{current:this.get(Ke=>Ke.performance.max)})})),ee.debounce)})}}),previousState:null==Ue?void 0:Ue.get()})}init(ze,Ve,Qe,We){this.initEvents(ze),this.resize(this.resizeResult$),this.updateDimensions(this.dimensions$),this.initRenderer({canvasElement:ze,rootStateMap:Ve,advance:We}),this.updateSubscribers(this.select(this.select(Ue=>Ue.internal.animations),this.select(Ue=>Ue.internal.priority),(Ue,Ee)=>({animations:Ue,priority:Ee}))),this.set(Ue=>({invalidate:()=>Qe(()=>this.get()),advance:(Ee,re)=>We(Ee,re,()=>this.get()),internal:Object.assign(Object.assign({},Ue.internal),{active:!0})})),this.set(this.allConstructed$)}registerBeforeRender(ze){const Ve=ce.is.object3d(ze.obj)?ze.obj.uuid:ce.is.ref(ze.obj)?ze.obj.value.uuid:(0,Se.qR)();return this.registerBeforeRenderEffect(Object.assign(Object.assign({},ze),{uuid:Ve})),()=>{this.unregisterBeforeRender(Ve)}}unregisterBeforeRender(ze){if(!ze)return;const Ve=this.get(Ue=>Ue.internal.animations),Qe=Ve.get(ze);Ve.delete(ze)&&Qe&&this.set(Ue=>({internal:Object.assign(Object.assign({},Ue.internal),{animations:Ve,priority:Ue.internal.priority-((Qe.priority||0)>0?1:0)})}))}addInteraction(ze){this.set(Ve=>Object.assign(Object.assign({},Ve),{internal:Object.assign(Object.assign({},Ve.internal),{interaction:[...Ve.internal.interaction,ze]})}))}removeInteraction(ze){this.set(Ve=>Object.assign(Object.assign({},Ve),{internal:Object.assign(Object.assign({},Ve.internal),{interaction:Ve.internal.interaction.filter(Qe=>Qe.uuid!==ze)})}))}initEvents(ze){const{handlePointer:Ve}=(0,xe.n)(()=>this.get());this.set(Qe=>({events:Object.assign(Object.assign({},Qe.events),{handlers:Object.keys(se).reduce((We,Ue)=>(We[Ue]=Ve(Ue),We),{})})})),this.connectElement(ze)}connectElement(ze){this.set(Qe=>({events:Object.assign(Object.assign({},Qe.events),{connected:ze})}));const Ve=this.get(Qe=>Qe.events.handlers);Object.entries(null!=Ve?Ve:{}).forEach(([Qe,We])=>{ze.addEventListener(Qe,We,{passive:se[Qe]})})}disconnectElement(){const{handlers:ze,connected:Ve}=this.get(Qe=>Qe.events);Ve&&Object.entries(null!=ze?ze:{}).forEach(([Qe,We])=>{Ve instanceof HTMLElement&&Ve.removeEventListener(Qe,We)})}ngOnDestroy(){this.disconnectElement(),super.ngOnDestroy()}}return De.\u0275fac=function(ze){return new(ze||De)(Te.LFG(Te.SBq),Te.LFG(Q.M),Te.LFG(w.m),Te.LFG(De,12),Te.LFG(B.I),Te.LFG(Te.R0b))},De.\u0275prov=Te.Yz7({token:De,factory:De.\u0275fac}),De})()},6029:(mt,Ae,_)=>{_.d(Ae,{Aw:()=>k,Dh:()=>O,FY:()=>Te,Rb:()=>F,cY:()=>$,cz:()=>z,e9:()=>w,hD:()=>P,iq:()=>tt,jy:()=>Se,mK:()=>Q,sN:()=>G,sV:()=>Ie});var N=_(3193);const z=new N.OlP("NgtInstance ref"),k=new N.OlP("NgtInstance ref of the host of the wrapper"),O=new N.OlP("NgtObject ref"),$=new N.OlP("NgtObject ref of the host of the wrapper"),Q=new N.OlP("Ref for root Camera"),w=new N.OlP("Ref for root Scene"),F=new N.OlP("NgtCommonAttribute ref"),P=(new N.OlP("NgtCommonAudio ref"),new N.OlP("NgtCommonCamera ref")),Ie=(new N.OlP("NgtCommonCurve ref"),new N.OlP("NgtCommonGeometry ref")),tt=(new N.OlP("NgtCommonHelper ref"),new N.OlP("NgtCommonLight ref")),Se=(new N.OlP("NgtCommonLine ref"),new N.OlP("NgtCommonMaterial ref")),G=new N.OlP("NgtMaterialGeometry ref"),Te=new N.OlP("NgtCommonMesh ref");new N.OlP("NgtCommonObjectHelper ref"),new N.OlP("NgtCommonSprite ref"),new N.OlP("NgtCommonTexture ref"),new N.OlP("NgtSkinnedMesh ref as parent host"),new N.OlP("NgtBone ref as parent host"),new N.OlP("NgtSkeleton ref as parent host")},8961:(mt,Ae,_)=>{_.d(Ae,{n:()=>O});var N=_(2046),z=_(8216),k=_(5918);function O($,Q){var w;if(!Object.keys(Q).length)return;const B=($.__ngt__||{}).root,P=null!==(w=null==B?void 0:B())&&void 0!==w?w:{};"__ngt__"in Q&&($.__ngt__=Q.__ngt__);for(const L of Object.entries(Q)){const Ie=L[0];let xe=L[1];if("raycast"===Ie&&null==xe)continue;k.is.ref(xe)&&(xe=xe.value);const tt=$,ce=tt[Ie];if(ce&&ce.set&&(ce.copy||ce instanceof N.S9g)){if(k.is.arr(xe))ce.fromArray?ce.fromArray(xe):ce.set(...xe);else if(ce.copy&&xe&&xe.constructor&&ce.constructor.name===xe.constructor.name)ce.copy(xe);else if(void 0!==xe){const Se=ce instanceof N.Ilk;!Se&&ce.setScalar?ce.setScalar(xe):ce instanceof N.S9g&&xe instanceof N.S9g?ce.mask=xe.mask:ce.set(xe),!N.epp&&!P.linear&&Se&&ce.convertSRGBToLinear()}}else tt[Ie]=xe,!P.linear&&tt[Ie]instanceof N.xEZ&&(tt[Ie].encoding=N.knz);(0,z.Q)(xe),(0,z.Q)(ce)}}},6238:(mt,Ae,_)=>{_.d(Ae,{H:()=>k,W:()=>O});var N=_(2046),z=_(5918);function k($,Q,w){z.is.camera($)||Q.manual||(z.is.orthographic(Q)?(Q.left=w.width/-2,Q.right=w.width/2,Q.top=w.height/2,Q.bottom=w.height/-2):Q.aspect=w.width/w.height,Q.updateProjectionMatrix(),Q.updateMatrixWorld())}function O($){return $.orthographic?new N.iKG(0,0,0,0,.1,1e3):new N.cPb(75,$.size.width/$.size.height,.1,1e3)}},8216:(mt,Ae,_)=>{function N(z){null!==z&&"object"==typeof z&&"needsUpdate"in z&&(z.needsUpdate=!0,"uniformsNeedUpdate"in z&&(z.uniformsNeedUpdate=!0))}_.d(Ae,{Q:()=>N})},2690:(mt,Ae,_)=>{function N(O){return null!=O&&"false"!=`${O}`}function z(O,$=0){return function k(O){return!isNaN(parseFloat(O))&&!isNaN(Number(O))}(O)?Number(O):$}_.d(Ae,{I:()=>N,s:()=>z})},8658:(mt,Ae,_)=>{_.d(Ae,{M:()=>$,n:()=>Q});var N=_(2046),z=_(6671),k=_(9809);function O(w,F,B,P){const L=B.get(F);L&&(B.delete(F),0===B.size&&(w.delete(P),L.target.releasePointerCapture(P)))}function $(w,F){const B=w().internal;B.interaction=B.interaction.filter(P=>P!==F),B.initialHits=B.initialHits.filter(P=>P!==F),B.hovered.forEach((P,L)=>{(P.eventObject===F||P.object===F)&&B.hovered.delete(L)}),B.capturedMap.forEach((P,L)=>{O(B.capturedMap,F,P,L)})}function Q(w){const F=new N.Pa4;function P(Se){return Se.filter(G=>["move","over","enter","out","leave"].some(Te=>{var se,we;return null===(we=null===(se=G.__ngt__)||void 0===se?void 0:se.handlers)||void 0===we?void 0:we["pointer"+Te]}))}function xe(Se){const G=w().internal;Array.from(G.hovered.values()).forEach(Te=>{var se,we;if(!Se.length||!Se.find(K=>K.object===Te.object&&K.index===Te.index&&K.instanceId===Te.instanceId)){const De=Te.eventObject.__ngt__,ae=null==De?void 0:De.handlers;if(G.hovered.delete((0,k.qR)(Te)),null==De?void 0:De.eventCount){const ze=Object.assign(Object.assign({},Te),{intersections:Se||[]});null===(se=ae.pointerout)||void 0===se||se.call(ae,ze),null===(we=ae.pointerleave)||void 0===we||we.call(ae,ze)}}})}function ce(Se,G){G.forEach(Te=>{var se,we,K;return null===(K=null===(we=null===(se=Te.__ngt__)||void 0===se?void 0:se.handlers)||void 0===we?void 0:we.pointermissed)||void 0===K?void 0:K.call(we,Se)})}return{handlePointer:Se=>{switch(Se){case"pointerleave":case"pointercancel":return()=>xe([]);case"lostpointercapture":return G=>{const Te=w().internal;"pointerId"in G&&!Te.capturedMap.has(G.pointerId)&&(Te.capturedMap.delete(G.pointerId),xe([]))}}return G=>{const{pointerMissed:Te,internal:se}=w();se.lastEvent=G;const we="pointermove"===Se,K="click"===Se||"contextmenu"===Se||"dblclick"===Se,ae=function L(Se,G){var Te,se,we;const K=w(),De=new Set,ae=[],ze=G?G(K.internal.interaction):K.internal.interaction;ze.forEach(Qe=>{const We=(0,z.m)(Qe);We&&(We.raycaster.camera=void 0)}),K.previousState||null===(se=(Te=K.events).compute)||void 0===se||se.call(Te,Se,K);let Ve=ze.flatMap(Qe=>{var We,Ue;const Ee=(0,z.m)(Qe);return Ee&&Ee.events.enabled&&null!==Ee.raycaster.camera?(void 0===Ee.raycaster.camera&&(null===(Ue=(We=Ee.events).compute)||void 0===Ue||Ue.call(We,Se,Ee,Ee.previousState),void 0===Ee.raycaster.camera&&(Ee.raycaster.camera=null)),Ee.raycaster.camera?Ee.raycaster.intersectObject(Qe,!0):[]):[]}).sort((Qe,We)=>{const Ue=(0,z.m)(Qe.object),Ee=(0,z.m)(We.object);return Ue&&Ee?Ee.events.priority-Ue.events.priority||Qe.distance-We.distance:0}).filter(Qe=>{const We=(0,k.qR)(Qe);return!De.has(We)&&(De.add(We),!0)});K.events.filter&&(Ve=K.events.filter(Ve,K));for(const Qe of Ve){let We=Qe.object;for(;We;)(null===(we=We.__ngt__)||void 0===we?void 0:we.eventCount)&&ae.push(Object.assign(Object.assign({},Qe),{eventObject:We})),We=We.parent}if("pointerId"in Se&&K.internal.capturedMap.has(Se.pointerId))for(const Qe of K.internal.capturedMap.get(Se.pointerId).values())ae.push(Qe.intersection);return ae}(G,we?P:void 0),ze=K?function B(Se){const G=w().internal,Te=Se.offsetX-G.initialClick[0],se=Se.offsetY-G.initialClick[1];return Math.round(Math.sqrt(Te*Te+se*se))}(G):0;"pointerdown"===Se&&(se.initialClick=[G.offsetX,G.offsetY],se.initialHits=ae.map(Ve=>Ve.eventObject)),K&&!ae.length&&ze<=2&&(ce(G,se.interaction),Te&&Te(G)),we&&xe(ae),function Ie(Se,G,Te,se){const{raycaster:we,pointer:K,camera:De,internal:ae}=w();if(Se.length){const ze=F.set(K.x,K.y,0).unproject(De),Ve={stopped:!1};for(const Qe of Se){const We=be=>{var Ke,Fe;return null!==(Fe=null===(Ke=ae.capturedMap.get(be))||void 0===Ke?void 0:Ke.has(Qe.eventObject))&&void 0!==Fe&&Fe},Ue=be=>{const Ke={intersection:Qe,target:G.target};ae.capturedMap.has(be)?ae.capturedMap.get(be).set(Qe.eventObject,Ke):ae.capturedMap.set(be,new Map([[Qe.eventObject,Ke]])),G.target.setPointerCapture(be)},Ee=be=>{const Ke=ae.capturedMap.get(be);Ke&&O(ae.capturedMap,Qe.eventObject,Ke,be)},re={};for(const be in G){const Ke=G[be];"function"!=typeof Ke&&(re[be]=Ke)}const ee=Object.assign(Object.assign(Object.assign({},Qe),re),{pointer:K,intersections:Se,stopped:Ve.stopped,delta:Te,unprojectedPoint:ze,ray:we.ray,camera:De,stopPropagation:()=>{const be="pointerId"in G&&ae.capturedMap.get(G.pointerId);(!be||be.has(Qe.eventObject))&&(ee.stopped=Ve.stopped=!0,ae.hovered.size&&Array.from(ae.hovered.values()).find(Ke=>Ke.eventObject===Qe.eventObject))&&xe([...Se.slice(0,Se.indexOf(Qe)),Qe])},target:{hasPointerCapture:We,setPointerCapture:Ue,releasePointerCapture:Ee},currentTarget:{hasPointerCapture:We,setPointerCapture:Ue,releasePointerCapture:Ee},nativeEvent:G});if(se(ee),!0===Ve.stopped)break}}}(ae,G,ze,Ve=>{var Qe,We,Ue;const Ee=Ve.eventObject,re=Ee.__ngt__,ee=null==re?void 0:re.handlers;if(null==re?void 0:re.eventCount)if(we){if(ee.pointerover||ee.pointerenter||ee.pointerout||ee.pointerleave){const be=(0,k.qR)(Ve),Ke=se.hovered.get(be);Ke?Ke.stopped&&Ve.stopPropagation():(se.hovered.set(be,Ve),null===(Qe=ee.pointerover)||void 0===Qe||Qe.call(ee,Ve),null===(We=ee.pointerenter)||void 0===We||We.call(ee,Ve))}null===(Ue=ee.pointermove)||void 0===Ue||Ue.call(ee,Ve)}else{const be=ee[Se];be?(!K||se.initialHits.includes(Ee))&&(ce(G,se.interaction.filter(Ke=>!se.initialHits.includes(Ke))),be(Ve)):K&&se.initialHits.includes(Ee)&&ce(G,se.interaction.filter(Ke=>!se.initialHits.includes(Ke)))}})}}}}},6671:(mt,Ae,_)=>{_.d(Ae,{P:()=>$,m:()=>O});var N=_(3139),z=_(8961),k=_(5918);const O=Q=>{var w;return null===(w=Q.__ngt__)||void 0===w?void 0:w.root()};function $(Q,w,F,B,P=!1){var L,Ie,xe,tt,ce,Se,G,Te,se,we,K,De,ae;const ze=F||(B?null===(Ie=null===(L=B.value)||void 0===L?void 0:L.__ngt__)||void 0===Ie?void 0:Ie.parent:void 0);return k.is.scene(Q)&&(0,z.n)(Q,{dispose:null}),Object.assign(Q,{__ngt__:{root:w,primitive:P||(null===(tt=null===(xe=null==B?void 0:B.value)||void 0===xe?void 0:xe.__ngt__)||void 0===tt?void 0:tt.primitive),eventCount:null!==(G=null===(Se=null===(ce=null==B?void 0:B.value)||void 0===ce?void 0:ce.__ngt__)||void 0===Se?void 0:Se.eventCount)&&void 0!==G?G:0,handlers:null!==(we=null===(se=null===(Te=null==B?void 0:B.value)||void 0===Te?void 0:Te.__ngt__)||void 0===se?void 0:se.handlers)&&void 0!==we?we:{},objects:null!==(ae=null===(De=null===(K=null==B?void 0:B.value)||void 0===K?void 0:K.__ngt__)||void 0===De?void 0:De.objects)&&void 0!==ae?ae:new N.R([]),parent:ze?ze===Q?null:ze:null}})}},5918:(mt,Ae,_)=>{_.d(Ae,{is:()=>k});var N=_(2046),z=_(3139);const k={obj:O=>O===Object(O)&&!k.arr(O)&&"function"!=typeof O,material:O=>!!O&&O.isMaterial,geometry:O=>!!O&&O.isBufferGeometry,orthographic:O=>!!O&&O.isOrthographicCamera,perspective:O=>!!O&&O.isPerspectiveCamera,camera:O=>!!O&&O.isCamera,glRenderer:O=>!!O&&O instanceof N.CP7,scene:O=>!!O&&O.isScene,object3d:O=>!!O&&O.isObject3D,instance:O=>!!O&&!!O.__ngt__,ref:O=>!!O&&O instanceof z.R,vector3:O=>!!O&&O.isVector3,color:O=>!!O&&O.isColor,fun:O=>"function"==typeof O,str:O=>"string"==typeof O,num:O=>"number"==typeof O,boo:O=>"boolean"==typeof O,und:O=>void 0===O,arr:O=>Array.isArray(O),equ(O,$,{arrays:Q="shallow",objects:w="reference",strict:F=!0}={}){if(typeof O!=typeof $||!!O!=!!$)return!1;if(k.str(O)||k.num(O))return O===$;const B=k.obj(O);if(B&&"reference"===w)return O===$;const P=k.arr(O);if(P&&"reference"===Q)return O===$;if((P||B)&&O===$)return!0;let L;for(L in O)if(!(L in $))return!1;for(L in F?$:O)if(O[L]!==$[L])return!1;if(k.und(L)){if(P&&0===O.length&&0===$.length||B&&0===Object.keys(O).length&&0===Object.keys($).length)return!0;if(O!==$)return!1}return!0}}},3477:(mt,Ae,_)=>{_.d(Ae,{WC:()=>F,ip:()=>L,ll:()=>w});var N=_(5918);const z=[],k=[],O=[];function $(Ie,xe){const tt=xe.length;return xe.push(Ie),()=>{xe.splice(tt,1)}}function Q(Ie,xe){for(let tt=0,ce=Ie.length;tt<ce;tt++)Ie[tt](xe)}function w(Ie){return $(Ie,z)}function F(Ie){return $(Ie,k)}function P(Ie,xe,tt){const ce=xe();let Se=ce.clock.getDelta();"never"===ce.frameloop&&"number"==typeof Ie&&(Se=Ie-ce.clock.elapsedTime,ce.clock.oldTime=ce.clock.elapsedTime,ce.clock.elapsedTime=Ie);for(const G of ce.internal.subscribers){const Te=N.is.ref(G.obj)?G.obj.value:G.obj;G.callback(Object.assign(Object.assign({},ce),{delta:Se,frame:tt}),Te)}return!ce.internal.priority&&ce.gl.render&&ce.gl.render(ce.scene,ce.camera),ce.internal.frames=Math.max(0,ce.internal.frames-1),"always"===ce.frameloop?1:ce.internal.frames}function L(Ie){let tt,ce,Se,xe=!1;function G(we){if(ce=requestAnimationFrame(G),xe=!0,tt=0,z.length&&Q(z,we),Ie.forEach(K=>{var De;Se=K(),Se.internal.active&&("always"===Se.frameloop||Se.internal.frames>0)&&!(null===(De=Se.gl.xr)||void 0===De?void 0:De.isPresenting)&&(tt+=P(we,K))}),k.length&&Q(k,we),0===tt)return O.length&&Q(O,we),xe=!1,cancelAnimationFrame(ce)}return{loop:G,advance:function se(we,K=!0,De,ae){K&&Q(z,we);const ze=null==De?void 0:De();ze?P(we,()=>ze,ae):Ie.forEach(Ve=>P(we,Ve)),K&&Q(k,we)},invalidate:function Te(we){var K;const De=null==we?void 0:we();if(!De)return Ie.forEach(ae=>Te(ae));(null===(K=De.gl.xr)||void 0===K?void 0:K.isPresenting)||!De.internal.active||"never"===De.frameloop||(De.internal.frames=Math.min(60,De.internal.frames+1),xe||(xe=!0,requestAnimationFrame(G)))}}}},9809:(mt,Ae,_)=>{_.d(Ae,{CE:()=>F,EH:()=>w,NO:()=>O,Sy:()=>Q,jS:()=>k,qR:()=>P});var N=_(2046),z=_(5918);function k(L){return L?L instanceof N.FM8?L:z.is.arr(L)?new N.FM8(...L):new N.FM8(L,L):new N.FM8}function O(L){return L?L instanceof N.Pa4?L:z.is.arr(L)?new N.Pa4(...L):new N.Pa4(L,L,L):new N.Pa4}function Q(L,Ie){return Ie?Ie instanceof L?Ie:new L(...Ie):new L}function w(L){return L?L instanceof N.Ilk?L:z.is.arr(L)?new N.Ilk(...L):new N.Ilk(L):new N.Ilk}function F(L){return z.is.arr(L)?Math.min(Math.max(L[0],window.devicePixelRatio),L[1]):L}const B={};function P(L){if(L)return(L.eventObject||L.object).uuid+"/"+L.index+L.instanceId;const Ie=N.M8C.generateUUID();return B[Ie]?P():(B[Ie]=!0,Ie)}},310:(mt,Ae,_)=>{_.d(Ae,{t:()=>k});var N=_(3691),z=_(9230);class k extends N.x{constructor($=1/0,Q=1/0,w=z.l){super(),this._bufferSize=$,this._windowTime=Q,this._timestampProvider=w,this._buffer=[],this._infiniteTimeWindow=!0,this._infiniteTimeWindow=Q===1/0,this._bufferSize=Math.max(1,$),this._windowTime=Math.max(1,Q)}next($){const{isStopped:Q,_buffer:w,_infiniteTimeWindow:F,_timestampProvider:B,_windowTime:P}=this;Q||(w.push($),!F&&w.push(B.now()+P)),this._trimBuffer(),super.next($)}_subscribe($){this._throwIfClosed(),this._trimBuffer();const Q=this._innerSubscribe($),{_infiniteTimeWindow:w,_buffer:F}=this,B=F.slice();for(let P=0;P<B.length&&!$.closed;P+=w?1:2)$.next(B[P]);return this._checkFinalizedStatuses($),Q}_trimBuffer(){const{_bufferSize:$,_timestampProvider:Q,_buffer:w,_infiniteTimeWindow:F}=this,B=(F?1:2)*$;if($<1/0&&B<w.length&&w.splice(0,w.length-B),!F){const P=Q.now();let L=0;for(let Ie=1;Ie<w.length&&w[Ie]<=P;Ie+=2)L=Ie;L&&w.splice(0,L+1)}}}},8414:(mt,Ae,_)=>{_.d(Ae,{b:()=>O});var N=_(4386),z=_(1446),k=_(4080);function O($,Q=N.z){return(0,z.e)((w,F)=>{let B=null,P=null,L=null;const Ie=()=>{if(B){B.unsubscribe(),B=null;const tt=P;P=null,F.next(tt)}};function xe(){const tt=L+$,ce=Q.now();if(ce<tt)return B=this.schedule(void 0,tt-ce),void F.add(B);Ie()}w.subscribe((0,k.x)(F,tt=>{P=tt,L=Q.now(),B||(B=Q.schedule(xe,$),F.add(B))},()=>{Ie(),F.complete()},void 0,()=>{P=B=null}))})}},5255:(mt,Ae,_)=>{_.d(Ae,{R:()=>$});var N=_(1446),z=_(4080),k=_(9072),O=_(3715);function $(Q){return(0,N.e)((w,F)=>{(0,k.Xf)(Q).subscribe((0,z.x)(F,()=>F.complete(),O.Z)),!F.closed&&w.subscribe(F)})}},7897:(mt,Ae,_)=>{_.d(Ae,{M:()=>w});var N=_(1446),z=_(4080),k=_(9072),O=_(9941),$=_(3715),Q=_(2595);function w(...F){const B=(0,Q.jO)(F);return(0,N.e)((P,L)=>{const Ie=F.length,xe=new Array(Ie);let tt=F.map(()=>!1),ce=!1;for(let Se=0;Se<Ie;Se++)(0,k.Xf)(F[Se]).subscribe((0,z.x)(L,G=>{xe[Se]=G,!ce&&!tt[Se]&&(tt[Se]=!0,(ce=tt.every(O.y))&&(tt=null))},$.Z));P.subscribe((0,z.x)(L,Se=>{if(ce){const G=[Se,...xe];L.next(B?B(...G):G)}}))})}},9622:(mt,Ae,_)=>{_.d(Ae,{o:()=>$});var N=_(8667);class z extends N.w0{constructor(w,F){super()}schedule(w,F=0){return this}}const k={setInterval(Q,w,...F){const{delegate:B}=k;return(null==B?void 0:B.setInterval)?B.setInterval(Q,w,...F):setInterval(Q,w,...F)},clearInterval(Q){const{delegate:w}=k;return((null==w?void 0:w.clearInterval)||clearInterval)(Q)},delegate:void 0};var O=_(3225);class $ extends z{constructor(w,F){super(w,F),this.scheduler=w,this.work=F,this.pending=!1}schedule(w,F=0){if(this.closed)return this;this.state=w;const B=this.id,P=this.scheduler;return null!=B&&(this.id=this.recycleAsyncId(P,B,F)),this.pending=!0,this.delay=F,this.id=this.id||this.requestAsyncId(P,this.id,F),this}requestAsyncId(w,F,B=0){return k.setInterval(w.flush.bind(w,this),B)}recycleAsyncId(w,F,B=0){if(null!=B&&this.delay===B&&!1===this.pending)return F;k.clearInterval(F)}execute(w,F){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;const B=this._execute(w,F);if(B)return B;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))}_execute(w,F){let P,B=!1;try{this.work(w)}catch(L){B=!0,P=L||new Error("Scheduled action threw falsy error")}if(B)return this.unsubscribe(),P}unsubscribe(){if(!this.closed){const{id:w,scheduler:F}=this,{actions:B}=F;this.work=this.state=this.scheduler=null,this.pending=!1,(0,O.P)(B,this),null!=w&&(this.id=this.recycleAsyncId(F,w,null)),this.delay=null,super.unsubscribe()}}}},8191:(mt,Ae,_)=>{_.d(Ae,{v:()=>k});var N=_(9230);class z{constructor($,Q=z.now){this.schedulerActionCtor=$,this.now=Q}schedule($,Q=0,w){return new this.schedulerActionCtor(this,$).schedule(w,Q)}}z.now=N.l.now;class k extends z{constructor($,Q=z.now){super($,Q),this.actions=[],this._active=!1,this._scheduled=void 0}flush($){const{actions:Q}=this;if(this._active)return void Q.push($);let w;this._active=!0;do{if(w=$.execute($.state,$.delay))break}while($=Q.shift());if(this._active=!1,w){for(;$=Q.shift();)$.unsubscribe();throw w}}}},4386:(mt,Ae,_)=>{_.d(Ae,{P:()=>O,z:()=>k});var N=_(9622);const k=new(_(8191).v)(N.o),O=k},9230:(mt,Ae,_)=>{_.d(Ae,{l:()=>N});const N={now:()=>(N.delegate||Date).now(),delegate:void 0}},6422:(mt,Ae,_)=>{_.d(Ae,{b:()=>k});var N=_(6682),z=_(3205);function k(O){return!!O&&(O instanceof N.y||(0,z.m)(O.lift)&&(0,z.m)(O.subscribe))}},2046:(mt,Ae,_)=>{function N(r,e,t,n,i,s,o){try{var a=r[s](o),l=a.value}catch(c){return void t(c)}a.done?e(l):Promise.resolve(l).then(n,i)}_.d(Ae,{LY2:()=>gr,Mig:()=>fc,m7l:()=>Zr,_Li:()=>ce,z81:()=>Rc,N$j:()=>ua,ZzF:()=>Fn,DvJ:()=>Wi,TlE:()=>kt,u9r:()=>ft,V1s:()=>Pr,ROQ:()=>Ku,uWy:()=>wn,SUY:()=>Dh,Ilk:()=>Ze,epp:()=>Wn,b_z:()=>Wr,_am:()=>Jo,fY$:()=>Gn,cBK:()=>vh,fHI:()=>Ss,IEO:()=>bs,yxD:()=>v0,A5E:()=>Y0,tEQ:()=>gh,brP:()=>yt,$YQ:()=>Fl,Ox3:()=>dc,ehD:()=>Se,dj0:()=>Fs,dSO:()=>Ls,USm:()=>Ui,pBf:()=>Ii,hH6:()=>Ai,a$l:()=>st,VzW:()=>ti,ybr:()=>Dr,Wl3:()=>tt,ZAu:()=>xs,cLu:()=>Pi,vmT:()=>ac,cJO:()=>Xr,QRU:()=>Ph,lb7:()=>Ms,L5s:()=>mc,SPe:()=>zl,vpT:()=>_s,kB5:()=>Vi,_C8:()=>Ei,Syv:()=>rs,NMF:()=>os,S9g:()=>zo,x12:()=>ji,nls:()=>Mn,blk:()=>Gl,ejS:()=>ws,rnI:()=>pi,wem:()=>Qt,D1R:()=>Qn,qyh:()=>yr,aNw:()=>ri,Zp0:()=>Ba,Y8D:()=>Y,RsA:()=>O,F5T:()=>un,M8C:()=>yd,Vkp:()=>gn,yGw:()=>ot,Kj0:()=>yn,vBJ:()=>bi,lRF:()=>ta,Lun:()=>na,YBo:()=>oc,RSm:()=>rc,xoR:()=>sc,EJi:()=>ic,Wid:()=>Oa,OoA:()=>es,TyD:()=>nn,aH4:()=>Os,YLQ:()=>Ds,jFi:()=>se,uL9:()=>qt,dUE:()=>Yr,Tme:()=>Ft,iKG:()=>Lr,ntZ:()=>Ie,cPb:()=>bn,BKK:()=>gs,_12:()=>gs,cek:()=>hc,woe:()=>kl,UY4:()=>pa,iUV:()=>jt,_fP:()=>En,iLg:()=>cr,UZH:()=>k,mSO:()=>Lc,wk1:()=>X,av9:()=>sn,iMs:()=>k0,T_f:()=>pc,hEm:()=>Lt,rpg:()=>Qi,xsS:()=>sa,WdD:()=>Ct,jyz:()=>Vn,Tn7:()=>nc,OdW:()=>ha,TUv:()=>ca,aLr:()=>Ni,xo$:()=>ar,$V:()=>V0,PMe:()=>cc,QmN:()=>$,IOt:()=>as,xEZ:()=>Cn,dpR:()=>yh,z$h:()=>ed,UlW:()=>Qh,xfE:()=>qi,xWb:()=>za,rBU:()=>je,rDY:()=>Jc,ywz:()=>ei,wJv:()=>ni,JQ4:()=>ns,FM8:()=>pe,Pa4:()=>T,Ltg:()=>Bt,yC1:()=>Jr,oAp:()=>Al,p7A:()=>J0,dd2:()=>Pn,CP7:()=>Ht,knz:()=>Xt});const k="140",O={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},$={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Ie=2,tt=0,ce=1,Se=2,se=0,qt=0,gr=4,qi=300,Gn=301,Ls=303,Qi=1e3,wn=1001,es=1002,nn=1003,Ds=1004,Os=1005,Qt=1006,yr=1007,Qn=1008,ei=1009,ts=1012,ns=1014,ti=1015,Pi=1016,ni=1020,X=1023,Y=1024,rt=1026,yt=1027,Lt=1028,sn=1030,rs=2300,os=2301,Ri=2400,Li=2401,Qh=1,ed=2,pi=3e3,Xt=3001,Rc=3200,Lc=3201,as=0,mi="srgb",ls="srgb-linear",Mr=35044,Fs=35048;class Ii{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const i=this._listeners[e];if(void 0!==i){const s=i.indexOf(t);-1!==s&&i.splice(s,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const n=this._listeners[e.type];if(void 0!==n){e.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,e);e.target=null}}}const Sn=[];for(let r=0;r<256;r++)Sn[r]=(r<16?"0":"")+r.toString(16);let Dc=1234567;const cs=Math.PI/180,wr=180/Math.PI;function Nn(){const r=4294967295*Math.random()|0,e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(Sn[255&r]+Sn[r>>8&255]+Sn[r>>16&255]+Sn[r>>24&255]+"-"+Sn[255&e]+Sn[e>>8&255]+"-"+Sn[e>>16&15|64]+Sn[e>>24&255]+"-"+Sn[63&t|128]+Sn[t>>8&255]+"-"+Sn[t>>16&255]+Sn[t>>24&255]+Sn[255&n]+Sn[n>>8&255]+Sn[n>>16&255]+Sn[n>>24&255]).toLowerCase()}function cn(r,e,t){return Math.max(e,Math.min(t,r))}function sl(r,e){return(r%e+e)%e}function Sr(r,e,t){return(1-t)*r+t*e}function rl(r){return 0==(r&r-1)&&0!==r}function Oc(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function Co(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}var yd=Object.freeze({__proto__:null,DEG2RAD:cs,RAD2DEG:wr,generateUUID:Nn,clamp:cn,euclideanModulo:sl,mapLinear:function id(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)},inverseLerp:function sd(r,e,t){return r!==e?(t-r)/(e-r):0},lerp:Sr,damp:function rd(r,e,t,n){return Sr(r,e,1-Math.exp(-t*n))},pingpong:function od(r,e=1){return e-Math.abs(sl(r,2*e)-e)},smoothstep:function ad(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e))*r*(3-2*r)},smootherstep:function ld(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e))*r*r*(r*(6*r-15)+10)},randInt:function cd(r,e){return r+Math.floor(Math.random()*(e-r+1))},randFloat:function ud(r,e){return r+Math.random()*(e-r)},randFloatSpread:function hd(r){return r*(.5-Math.random())},seededRandom:function dd(r){void 0!==r&&(Dc=r);let e=Dc+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function fd(r){return r*cs},radToDeg:function pd(r){return r*wr},isPowerOfTwo:rl,ceilPowerOfTwo:Oc,floorPowerOfTwo:Co,setQuaternionFromProperEuler:function md(r,e,t,n,i){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+n)/2),u=o((e+n)/2),h=s((e-n)/2),d=o((e-n)/2),f=s((n-e)/2),g=o((n-e)/2);switch(i){case"XYX":r.set(a*u,l*h,l*d,a*c);break;case"YZY":r.set(l*d,a*u,l*h,a*c);break;case"ZXZ":r.set(l*h,l*d,a*u,a*c);break;case"XZX":r.set(a*u,l*g,l*f,a*c);break;case"YXY":r.set(l*f,a*u,l*g,a*c);break;case"ZYZ":r.set(l*g,l*f,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}},normalize:function vd(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return Math.round(65535*r);case Uint8Array:return Math.round(255*r);case Int16Array:return Math.round(32767*r);case Int8Array:return Math.round(127*r);default:throw new Error("Invalid component type.")}},denormalize:function gd(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}});class pe{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*i+e.x,this.y=s*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}pe.prototype.isVector2=!0;class gn{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=i,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],d=n[2],f=n[5],g=n[8],p=i[0],m=i[3],v=i[6],y=i[1],M=i[4],x=i[7],A=i[2],R=i[5],U=i[8];return s[0]=o*p+a*y+l*A,s[3]=o*m+a*M+l*R,s[6]=o*v+a*x+l*U,s[1]=c*p+u*y+h*A,s[4]=c*m+u*M+h*R,s[7]=c*v+u*x+h*U,s[2]=d*p+f*y+g*A,s[5]=d*m+f*M+g*R,s[8]=d*v+f*x+g*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-n*s*u+n*a*l+i*s*c-i*o*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,d=a*l-u*s,f=c*s-o*l,g=t*h+n*d+i*f;if(0===g)return this.set(0,0,0,0,0,0,0,0,0);const p=1/g;return e[0]=h*p,e[1]=(i*c-u*n)*p,e[2]=(a*n-i*o)*p,e[3]=d*p,e[4]=(u*t-i*l)*p,e[5]=(i*s-a*t)*p,e[6]=f*p,e[7]=(n*l-c*t)*p,e[8]=(o*t-n*s)*p,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+e,-i*c,i*l,-i*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,s=i[0],o=i[3],a=i[6],l=i[1],c=i[4],u=i[7];return i[0]=t*s+n*l,i[3]=t*o+n*c,i[6]=t*a+n*u,i[1]=-n*s+t*l,i[4]=-n*o+t*c,i[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}function Nc(r){for(let e=r.length-1;e>=0;--e)if(r[e]>65535)return!0;return!1}function Er(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function us(r){return r<.04045?.0773993808*r:Math.pow(.9478672986*r+.0521327014,2.4)}function Po(r){return r<.0031308?12.92*r:1.055*Math.pow(r,.41666)-.055}gn.prototype.isMatrix3=!0,Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const ol={[mi]:{[ls]:us},[ls]:{[mi]:Po}},Wn={legacyMode:!0,get workingColorSpace(){return ls},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.legacyMode||e===t||!e||!t)return r;if(ol[e]&&void 0!==ol[e][t]){const n=ol[e][t];return r.r=n(r.r),r.g=n(r.g),r.b=n(r.b),r}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}},Fc={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},vn={r:0,g:0,b:0},Kn={h:0,s:0,l:0},Ro={h:0,s:0,l:0};function al(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+6*(e-r)*t:t<.5?e:t<2/3?r+6*(e-r)*(2/3-t):r}function Lo(r,e){return e.r=r.r,e.g=r.g,e.b=r.b,e}let Us,Ze=(()=>{class r{constructor(t,n,i){return void 0===n&&void 0===i?this.set(t):this.setRGB(t,n,i)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,n=mi){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,Wn.toWorkingColorSpace(this,n),this}setRGB(t,n,i,s=ls){return this.r=t,this.g=n,this.b=i,Wn.toWorkingColorSpace(this,s),this}setHSL(t,n,i,s=ls){if(t=sl(t,1),n=cn(n,0,1),i=cn(i,0,1),0===n)this.r=this.g=this.b=i;else{const o=i<=.5?i*(1+n):i+n-i*n,a=2*i-o;this.r=al(a,o,t+1/3),this.g=al(a,o,t),this.b=al(a,o,t-1/3)}return Wn.toWorkingColorSpace(this,s),this}setStyle(t,n=mi){function i(o){void 0!==o&&parseFloat(o)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let o;const l=s[2];switch(s[1]){case"rgb":case"rgba":if(o=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return this.r=Math.min(255,parseInt(o[1],10))/255,this.g=Math.min(255,parseInt(o[2],10))/255,this.b=Math.min(255,parseInt(o[3],10))/255,Wn.toWorkingColorSpace(this,n),i(o[4]),this;if(o=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return this.r=Math.min(100,parseInt(o[1],10))/100,this.g=Math.min(100,parseInt(o[2],10))/100,this.b=Math.min(100,parseInt(o[3],10))/100,Wn.toWorkingColorSpace(this,n),i(o[4]),this;break;case"hsl":case"hsla":if(o=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l)){const c=parseFloat(o[1])/360,u=parseInt(o[2],10)/100,h=parseInt(o[3],10)/100;return i(o[4]),this.setHSL(c,u,h,n)}}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const o=s[1],a=o.length;if(3===a)return this.r=parseInt(o.charAt(0)+o.charAt(0),16)/255,this.g=parseInt(o.charAt(1)+o.charAt(1),16)/255,this.b=parseInt(o.charAt(2)+o.charAt(2),16)/255,Wn.toWorkingColorSpace(this,n),this;if(6===a)return this.r=parseInt(o.charAt(0)+o.charAt(1),16)/255,this.g=parseInt(o.charAt(2)+o.charAt(3),16)/255,this.b=parseInt(o.charAt(4)+o.charAt(5),16)/255,Wn.toWorkingColorSpace(this,n),this}return t&&t.length>0?this.setColorName(t,n):this}setColorName(t,n=mi){const i=Fc[t.toLowerCase()];return void 0!==i?this.setHex(i,n):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=us(t.r),this.g=us(t.g),this.b=us(t.b),this}copyLinearToSRGB(t){return this.r=Po(t.r),this.g=Po(t.g),this.b=Po(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=mi){return Wn.fromWorkingColorSpace(Lo(this,vn),t),cn(255*vn.r,0,255)<<16^cn(255*vn.g,0,255)<<8^cn(255*vn.b,0,255)<<0}getHexString(t=mi){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,n=ls){Wn.fromWorkingColorSpace(Lo(this,vn),n);const i=vn.r,s=vn.g,o=vn.b,a=Math.max(i,s,o),l=Math.min(i,s,o);let c,u;const h=(l+a)/2;if(l===a)c=0,u=0;else{const d=a-l;switch(u=h<=.5?d/(a+l):d/(2-a-l),a){case i:c=(s-o)/d+(s<o?6:0);break;case s:c=(o-i)/d+2;break;case o:c=(i-s)/d+4}c/=6}return t.h=c,t.s=u,t.l=h,t}getRGB(t,n=ls){return Wn.fromWorkingColorSpace(Lo(this,vn),n),t.r=vn.r,t.g=vn.g,t.b=vn.b,t}getStyle(t=mi){return Wn.fromWorkingColorSpace(Lo(this,vn),t),t!==mi?`color(${t} ${vn.r} ${vn.g} ${vn.b})`:`rgb(${255*vn.r|0},${255*vn.g|0},${255*vn.b|0})`}offsetHSL(t,n,i){return this.getHSL(Kn),Kn.h+=t,Kn.s+=n,Kn.l+=i,this.setHSL(Kn.h,Kn.s,Kn.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,n){return this.r=t.r+n.r,this.g=t.g+n.g,this.b=t.b+n.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,n){return this.r+=(t.r-this.r)*n,this.g+=(t.g-this.g)*n,this.b+=(t.b-this.b)*n,this}lerpColors(t,n,i){return this.r=t.r+(n.r-t.r)*i,this.g=t.g+(n.g-t.g)*i,this.b=t.b+(n.b-t.b)*i,this}lerpHSL(t,n){this.getHSL(Kn),t.getHSL(Ro);const i=Sr(Kn.h,Ro.h,n),s=Sr(Kn.s,Ro.s,n),o=Sr(Kn.l,Ro.l,n);return this.setHSL(i,s,o),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,n=0){return this.r=t[n],this.g=t[n+1],this.b=t[n+2],this}toArray(t=[],n=0){return t[n]=this.r,t[n+1]=this.g,t[n+2]=this.b,t}fromBufferAttribute(t,n){return this.r=t.getX(n),this.g=t.getY(n),this.b=t.getZ(n),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}return r.NAMES=Fc,r})();Ze.prototype.isColor=!0,Ze.prototype.r=1,Ze.prototype.g=1,Ze.prototype.b=1;class hs{static getDataURL(e){if(/^data:/i.test(e.src)||"undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===Us&&(Us=Er("canvas")),Us.width=e.width,Us.height=e.height;const n=Us.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Us}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const t=Er("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=255*us(s[o]/255);return n.putImageData(i,0,0),t}if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t[n]=t instanceof Uint8Array||t instanceof Uint8ClampedArray?Math.floor(255*us(t[n]/255)):us(t[n]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class zs{constructor(e=null){this.uuid=Nn(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)s.push(ll(i[o].isDataTexture?i[o].image:i[o]))}else s=ll(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function ll(r){return"undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&r instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&r instanceof ImageBitmap?hs.getDataURL(r):r.data?{data:Array.prototype.slice.call(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}zs.prototype.isSource=!0;let _d=0,Cn=(()=>{class r extends Ii{constructor(t=r.DEFAULT_IMAGE,n=r.DEFAULT_MAPPING,i=wn,s=wn,o=Qt,a=Qn,l=X,c=ei,u=1,h=pi){super(),Object.defineProperty(this,"id",{value:_d++}),this.uuid=Nn(),this.name="",this.source=new zs(t),this.mipmaps=[],this.mapping=n,this.wrapS=i,this.wrapT=s,this.magFilter=o,this.minFilter=a,this.anisotropy=u,this.format=l,this.internalFormat=null,this.type=c,this.offset=new pe(0,0),this.repeat=new pe(1,1),this.center=new pe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new gn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const n=void 0===t||"string"==typeof t;if(!n&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),n||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==qi)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Qi:t.x=t.x-Math.floor(t.x);break;case wn:t.x=t.x<0?0:1;break;case es:t.x=1===Math.abs(Math.floor(t.x)%2)?Math.ceil(t.x)-t.x:t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case Qi:t.y=t.y-Math.floor(t.y);break;case wn:t.y=t.y<0?0:1;break;case es:t.y=1===Math.abs(Math.floor(t.y)%2)?Math.ceil(t.y)-t.y:t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}}return r.DEFAULT_IMAGE=null,r.DEFAULT_MAPPING=qi,r})();Cn.prototype.isTexture=!0;class Bt{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const l=e.elements,c=l[0],u=l[4],h=l[8],d=l[1],f=l[5],g=l[9],p=l[2],m=l[6],v=l[10];if(Math.abs(u-d)<.01&&Math.abs(h-p)<.01&&Math.abs(g-m)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+p)<.1&&Math.abs(g+m)<.1&&Math.abs(c+f+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const M=(c+1)/2,x=(f+1)/2,A=(v+1)/2,R=(u+d)/4,U=(h+p)/4,b=(g+m)/4;return M>x&&M>A?M<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(M),i=R/n,s=U/n):x>A?x<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(x),n=R/i,s=b/i):A<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(A),n=U/s,i=b/s),this.set(n,i,s,t),this}let y=Math.sqrt((m-g)*(m-g)+(h-p)*(h-p)+(d-u)*(d-u));return Math.abs(y)<.001&&(y=1),this.x=(m-g)/y,this.y=(h-p)/y,this.z=(d-u)/y,this.w=Math.acos((c+f+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Bt.prototype.isVector4=!0;class Pn extends Ii{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Bt(0,0,e,t),this.scissorTest=!1,this.viewport=new Bt(0,0,e,t),this.texture=new Cn({width:e,height:t,depth:1},n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:Qt,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null,this.samples=void 0!==n.samples?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0,this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}Pn.prototype.isWebGLRenderTarget=!0;class Io extends Cn{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=nn,this.minFilter=nn,this.wrapR=wn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Io.prototype.isDataArrayTexture=!0,class bd extends Pn{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new Io(null,e,t,n),this.texture.isRenderTargetTexture=!0}}.prototype.isWebGLArrayRenderTarget=!0;class cl extends Cn{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=nn,this.minFilter=nn,this.wrapR=wn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}cl.prototype.isData3DTexture=!0,class Md extends Pn{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new cl(null,e,t,n),this.texture.isRenderTargetTexture=!0}}.prototype.isWebGL3DRenderTarget=!0,class wd extends Pn{constructor(e,t,n,i={}){super(e,t,i);const s=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=s.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}.prototype.isWebGLMultipleRenderTargets=!0;class En{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,s,o,a){let l=n[i+0],c=n[i+1],u=n[i+2],h=n[i+3];const d=s[o+0],f=s[o+1],g=s[o+2],p=s[o+3];if(0===a)return e[t+0]=l,e[t+1]=c,e[t+2]=u,void(e[t+3]=h);if(1===a)return e[t+0]=d,e[t+1]=f,e[t+2]=g,void(e[t+3]=p);if(h!==p||l!==d||c!==f||u!==g){let m=1-a;const v=l*d+c*f+u*g+h*p,y=v>=0?1:-1,M=1-v*v;if(M>Number.EPSILON){const A=Math.sqrt(M),R=Math.atan2(A,v*y);m=Math.sin(m*R)/A,a=Math.sin(a*R)/A}const x=a*y;if(l=l*m+d*x,c=c*m+f*x,u=u*m+g*x,h=h*m+p*x,m===1-a){const A=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=A,c*=A,u*=A,h*=A}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,s,o){const a=n[i],l=n[i+1],c=n[i+2],u=n[i+3],h=s[o],d=s[o+1],f=s[o+2],g=s[o+3];return e[t]=a*g+u*h+l*f-c*d,e[t+1]=l*g+u*d+c*h-a*f,e[t+2]=c*g+u*f+a*d-l*h,e[t+3]=u*g-a*h-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(i/2),h=a(s/2),d=l(n/2),f=l(i/2),g=l(s/2);switch(o){case"XYZ":this._x=d*u*h+c*f*g,this._y=c*f*h-d*u*g,this._z=c*u*g+d*f*h,this._w=c*u*h-d*f*g;break;case"YXZ":this._x=d*u*h+c*f*g,this._y=c*f*h-d*u*g,this._z=c*u*g-d*f*h,this._w=c*u*h+d*f*g;break;case"ZXY":this._x=d*u*h-c*f*g,this._y=c*f*h+d*u*g,this._z=c*u*g+d*f*h,this._w=c*u*h-d*f*g;break;case"ZYX":this._x=d*u*h-c*f*g,this._y=c*f*h+d*u*g,this._z=c*u*g-d*f*h,this._w=c*u*h+d*f*g;break;case"YZX":this._x=d*u*h+c*f*g,this._y=c*f*h+d*u*g,this._z=c*u*g-d*f*h,this._w=c*u*h-d*f*g;break;case"XZY":this._x=d*u*h-c*f*g,this._y=c*f*h-d*u*g,this._z=c*u*g+d*f*h,this._w=c*u*h+d*f*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-l)*f,this._y=(s-c)*f,this._z=(o-i)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-l)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(s+c)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(s-c)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(l+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-i)/f,this._x=(s+c)/f,this._y=(l+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(cn(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=n*u+o*a+i*c-s*l,this._y=i*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-i*a,this._w=o*u-n*a-i*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,d=Math.sin(t*u)/c;return this._w=o*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=s*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}En.prototype.isQuaternion=!0;class T{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Bc.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Bc.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*i-a*n,u=l*n+a*t-s*i,h=l*i+s*n-o*t,d=-s*t-o*n-a*i;return this.x=c*l+d*-s+u*-a-h*-o,this.y=u*l+d*-o+h*-s-c*-a,this.z=h*l+d*-a+c*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=i*l-s*a,this.y=s*o-n*l,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return ul.copy(this).projectOnVector(e),this.sub(ul)}reflect(e){return this.sub(ul.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(cn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}T.prototype.isVector3=!0;const ul=new T,Bc=new En;class Fn{constructor(e=new T(1/0,1/0,1/0),t=new T(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],h=e[l+1],d=e[l+2];u<t&&(t=u),h<n&&(n=h),d<i&&(i=d),u>s&&(s=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),h=e.getY(l),d=e.getZ(l);u<t&&(t=u),h<n&&(n=h),d<i&&(i=d),u>s&&(s=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=ds.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(void 0!==n)if(t&&null!=n.attributes&&void 0!==n.attributes.position){const s=n.attributes.position;for(let o=0,a=s.count;o<a;o++)ds.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(ds)}else null===n.boundingBox&&n.computeBoundingBox(),hl.copy(n.boundingBox),hl.applyMatrix4(e.matrixWorld),this.union(hl);const i=e.children;for(let s=0,o=i.length;s<o;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,ds),ds.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Tr),Do.subVectors(this.max,Tr),Hs.subVectors(e.a,Tr),Gs.subVectors(e.b,Tr),Ws.subVectors(e.c,Tr),Di.subVectors(Gs,Hs),Oi.subVectors(Ws,Gs),fs.subVectors(Hs,Ws);let t=[0,-Di.z,Di.y,0,-Oi.z,Oi.y,0,-fs.z,fs.y,Di.z,0,-Di.x,Oi.z,0,-Oi.x,fs.z,0,-fs.x,-Di.y,Di.x,0,-Oi.y,Oi.x,0,-fs.y,fs.x,0];return!(!dl(t,Hs,Gs,Ws,Do)||(t=[1,0,0,0,1,0,0,0,1],!dl(t,Hs,Gs,Ws,Do)))&&(Oo.crossVectors(Di,Oi),t=[Oo.x,Oo.y,Oo.z],dl(t,Hs,Gs,Ws,Do))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return ds.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(ds).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(gi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),gi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),gi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),gi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),gi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),gi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),gi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),gi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(gi)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Fn.prototype.isBox3=!0;const gi=[new T,new T,new T,new T,new T,new T,new T,new T],ds=new T,hl=new Fn,Hs=new T,Gs=new T,Ws=new T,Di=new T,Oi=new T,fs=new T,Tr=new T,Do=new T,Oo=new T,ps=new T;function dl(r,e,t,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){ps.fromArray(r,s);const a=i.x*Math.abs(ps.x)+i.y*Math.abs(ps.y)+i.z*Math.abs(ps.z),l=e.dot(ps),c=t.dot(ps),u=n.dot(ps);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const Sd=new Fn,Uc=new T,No=new T,fl=new T;class Ni{constructor(e=new T,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):Sd.setFromPoints(e).getCenter(n);let i=0;for(let s=0,o=e.length;s<o;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){fl.subVectors(e,this.center);const t=fl.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=.5*(n-this.radius);this.center.add(fl.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return!0===this.center.equals(e.center)?No.set(0,0,1).multiplyScalar(e.radius):No.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Uc.copy(e.center).add(No)),this.expandByPoint(Uc.copy(e.center).sub(No)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const vi=new T,pl=new T,Fo=new T,Fi=new T,ml=new T,Bo=new T,gl=new T;class ms{constructor(e=new T,t=new T(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,vi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=vi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(vi.copy(this.direction).multiplyScalar(t).add(this.origin),vi.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){pl.copy(e).add(t).multiplyScalar(.5),Fo.copy(t).sub(e).normalize(),Fi.copy(this.origin).sub(pl);const s=.5*e.distanceTo(t),o=-this.direction.dot(Fo),a=Fi.dot(this.direction),l=-Fi.dot(Fo),c=Fi.lengthSq(),u=Math.abs(1-o*o);let h,d,f,g;if(u>0)if(h=o*l-a,d=o*a-l,g=s*u,h>=0)if(d>=-g)if(d<=g){const p=1/u;h*=p,d*=p,f=h*(h+o*d+2*a)+d*(o*h+d+2*l)+c}else d=s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d=-s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d<=-g?(h=Math.max(0,-(-o*s+a)),d=h>0?-s:Math.min(Math.max(-s,-l),s),f=-h*h+d*(d+2*l)+c):d<=g?(h=0,d=Math.min(Math.max(-s,-l),s),f=d*(d+2*l)+c):(h=Math.max(0,-(o*s+a)),d=h>0?s:Math.min(Math.max(-s,-l),s),f=-h*h+d*(d+2*l)+c);else d=o>0?-s:s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Fo).multiplyScalar(d).add(pl),f}intersectSphere(e,t){vi.subVectors(e.center,this.origin);const n=vi.dot(this.direction),i=vi.dot(vi)-n*n,s=e.radius*e.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,l=n+o;return a<0&&l<0?null:this.at(a<0?l:a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return c>=0?(n=(e.min.x-d.x)*c,i=(e.max.x-d.x)*c):(n=(e.max.x-d.x)*c,i=(e.min.x-d.x)*c),u>=0?(s=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(s=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),n>o||s>i||((s>n||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),h>=0?(a=(e.min.z-d.z)*h,l=(e.max.z-d.z)*h):(a=(e.max.z-d.z)*h,l=(e.min.z-d.z)*h),n>l||a>i)||((a>n||n!=n)&&(n=a),(l<i||i!=i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return null!==this.intersectBox(e,vi)}intersectTriangle(e,t,n,i,s){ml.subVectors(t,e),Bo.subVectors(n,e),gl.crossVectors(ml,Bo);let a,o=this.direction.dot(gl);if(o>0){if(i)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}Fi.subVectors(this.origin,e);const l=a*this.direction.dot(Bo.crossVectors(Fi,Bo));if(l<0)return null;const c=a*this.direction.dot(ml.cross(Fi));if(c<0||l+c>o)return null;const u=-a*Fi.dot(gl);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class ot{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,o,a,l,c,u,h,d,f,g,p,m){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=s,v[5]=o,v[9]=a,v[13]=l,v[2]=c,v[6]=u,v[10]=h,v[14]=d,v[3]=f,v[7]=g,v[11]=p,v[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new ot).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/ks.setFromMatrixColumn(e,0).length(),s=1/ks.setFromMatrixColumn(e,1).length(),o=1/ks.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(s),h=Math.sin(s);if("XYZ"===e.order){const d=o*u,f=o*h,g=a*u,p=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=f+g*c,t[5]=d-p*c,t[9]=-a*l,t[2]=p-d*c,t[6]=g+f*c,t[10]=o*l}else if("YXZ"===e.order){const d=l*u,f=l*h,g=c*u,p=c*h;t[0]=d+p*a,t[4]=g*a-f,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=f*a-g,t[6]=p+d*a,t[10]=o*l}else if("ZXY"===e.order){const d=l*u,f=l*h,g=c*u,p=c*h;t[0]=d-p*a,t[4]=-o*h,t[8]=g+f*a,t[1]=f+g*a,t[5]=o*u,t[9]=p-d*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if("ZYX"===e.order){const d=o*u,f=o*h,g=a*u,p=a*h;t[0]=l*u,t[4]=g*c-f,t[8]=d*c+p,t[1]=l*h,t[5]=p*c+d,t[9]=f*c-g,t[2]=-c,t[6]=a*l,t[10]=o*l}else if("YZX"===e.order){const d=o*l,f=o*c,g=a*l,p=a*c;t[0]=l*u,t[4]=p-d*h,t[8]=g*h+f,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=f*h+g,t[10]=d-p*h}else if("XZY"===e.order){const d=o*l,f=o*c,g=a*l,p=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=d*h+p,t[5]=o*u,t[9]=f*h-g,t[2]=g*h-f,t[6]=a*u,t[10]=p*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Ed,e,Td)}lookAt(e,t,n){const i=this.elements;return Bn.subVectors(e,t),0===Bn.lengthSq()&&(Bn.z=1),Bn.normalize(),Bi.crossVectors(n,Bn),0===Bi.lengthSq()&&(1===Math.abs(n.z)?Bn.x+=1e-4:Bn.z+=1e-4,Bn.normalize(),Bi.crossVectors(n,Bn)),Bi.normalize(),Uo.crossVectors(Bn,Bi),i[0]=Bi.x,i[4]=Uo.x,i[8]=Bn.x,i[1]=Bi.y,i[5]=Uo.y,i[9]=Bn.y,i[2]=Bi.z,i[6]=Uo.z,i[10]=Bn.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],d=n[9],f=n[13],g=n[2],p=n[6],m=n[10],v=n[14],y=n[3],M=n[7],x=n[11],A=n[15],R=i[0],U=i[4],b=i[8],D=i[12],W=i[1],j=i[5],ge=i[9],Oe=i[13],V=i[2],le=i[6],q=i[10],ve=i[14],_e=i[3],ne=i[7],ue=i[11],Be=i[15];return s[0]=o*R+a*W+l*V+c*_e,s[4]=o*U+a*j+l*le+c*ne,s[8]=o*b+a*ge+l*q+c*ue,s[12]=o*D+a*Oe+l*ve+c*Be,s[1]=u*R+h*W+d*V+f*_e,s[5]=u*U+h*j+d*le+f*ne,s[9]=u*b+h*ge+d*q+f*ue,s[13]=u*D+h*Oe+d*ve+f*Be,s[2]=g*R+p*W+m*V+v*_e,s[6]=g*U+p*j+m*le+v*ne,s[10]=g*b+p*ge+m*q+v*ue,s[14]=g*D+p*Oe+m*ve+v*Be,s[3]=y*R+M*W+x*V+A*_e,s[7]=y*U+M*j+x*le+A*ne,s[11]=y*b+M*ge+x*q+A*ue,s[15]=y*D+M*Oe+x*ve+A*Be,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],d=e[10],f=e[14];return e[3]*(+s*l*h-i*c*h-s*a*d+n*c*d+i*a*f-n*l*f)+e[7]*(+t*l*f-t*c*d+s*o*d-i*o*f+i*c*u-s*l*u)+e[11]*(+t*c*h-t*a*f-s*o*h+n*o*f+s*a*u-n*c*u)+e[15]*(-i*a*u-t*l*h+t*a*d+i*o*h-n*o*d+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],d=e[10],f=e[11],g=e[12],p=e[13],m=e[14],v=e[15],y=h*m*c-p*d*c+p*l*f-a*m*f-h*l*v+a*d*v,M=g*d*c-u*m*c-g*l*f+o*m*f+u*l*v-o*d*v,x=u*p*c-g*h*c+g*a*f-o*p*f-u*a*v+o*h*v,A=g*h*l-u*p*l-g*a*d+o*p*d+u*a*m-o*h*m,R=t*y+n*M+i*x+s*A;if(0===R)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const U=1/R;return e[0]=y*U,e[1]=(p*d*s-h*m*s-p*i*f+n*m*f+h*i*v-n*d*v)*U,e[2]=(a*m*s-p*l*s+p*i*c-n*m*c-a*i*v+n*l*v)*U,e[3]=(h*l*s-a*d*s-h*i*c+n*d*c+a*i*f-n*l*f)*U,e[4]=M*U,e[5]=(u*m*s-g*d*s+g*i*f-t*m*f-u*i*v+t*d*v)*U,e[6]=(g*l*s-o*m*s-g*i*c+t*m*c+o*i*v-t*l*v)*U,e[7]=(o*d*s-u*l*s+u*i*c-t*d*c-o*i*f+t*l*f)*U,e[8]=x*U,e[9]=(g*h*s-u*p*s-g*n*f+t*p*f+u*n*v-t*h*v)*U,e[10]=(o*p*s-g*a*s+g*n*c-t*p*c-o*n*v+t*a*v)*U,e[11]=(u*a*s-o*h*s-u*n*c+t*h*c+o*n*f-t*a*f)*U,e[12]=A*U,e[13]=(u*p*i-g*h*i+g*n*d-t*p*d-u*n*m+t*h*m)*U,e[14]=(g*a*i-o*p*i-g*n*l+t*p*l+o*n*m-t*a*m)*U,e[15]=(o*h*i-u*a*i+u*n*l-t*h*l-o*n*d+t*a*d)*U,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10]))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+n,u*l-i*o,0,c*l-i*a,u*l+i*o,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,o){return this.set(1,n,s,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,h=a+a,d=s*c,f=s*u,g=s*h,p=o*u,m=o*h,v=a*h,y=l*c,M=l*u,x=l*h,A=n.x,R=n.y,U=n.z;return i[0]=(1-(p+v))*A,i[1]=(f+x)*A,i[2]=(g-M)*A,i[3]=0,i[4]=(f-x)*R,i[5]=(1-(d+v))*R,i[6]=(m+y)*R,i[7]=0,i[8]=(g+M)*U,i[9]=(m-y)*U,i[10]=(1-(d+p))*U,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=ks.set(i[0],i[1],i[2]).length();const o=ks.set(i[4],i[5],i[6]).length(),a=ks.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],Yn.copy(this);const c=1/s,u=1/o,h=1/a;return Yn.elements[0]*=c,Yn.elements[1]*=c,Yn.elements[2]*=c,Yn.elements[4]*=u,Yn.elements[5]*=u,Yn.elements[6]*=u,Yn.elements[8]*=h,Yn.elements[9]*=h,Yn.elements[10]*=h,t.setFromRotationMatrix(Yn),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,i,s,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,c=2*s/(n-i),u=(t+e)/(t-e),h=(n+i)/(n-i),d=-(o+s)/(o-s),f=-2*o*s/(o-s);return a[0]=2*s/(t-e),a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,i,s,o){const a=this.elements,l=1/(t-e),c=1/(n-i),u=1/(o-s),h=(t+e)*l,d=(n+i)*c,f=(o+s)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}ot.prototype.isMatrix4=!0;const ks=new T,Yn=new ot,Ed=new T(0,0,0),Td=new T(1,1,1),Bi=new T,Uo=new T,Bn=new T,zc=new ot,Hc=new En;class Ui{constructor(e=0,t=0,n=0,i=Ui.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],h=i[2],d=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(cn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-cn(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(cn(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-cn(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(cn(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-cn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return zc.makeRotationFromQuaternion(e),this.setFromRotationMatrix(zc,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Hc.setFromEuler(this),this.setFromQuaternion(Hc,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ui.prototype.isEuler=!0,Ui.DefaultOrder="XYZ",Ui.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class zo{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let Ad=0;const Gc=new T,Vs=new En,yi=new ot,Ho=new T,Ar=new T,Cd=new T,Pd=new En,Wc=new T(1,0,0),kc=new T(0,1,0),Vc=new T(0,0,1),Rd={type:"added"},jc={type:"removed"};class Ft extends Ii{constructor(){super(),Object.defineProperty(this,"id",{value:Ad++}),this.uuid=Nn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ft.DefaultUp.clone();const e=new T,t=new Ui,n=new En,i=new T(1,1,1);t._onChange(function s(){n.setFromEuler(t,!1)}),n._onChange(function o(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ot},normalMatrix:{value:new gn}}),this.matrix=new ot,this.matrixWorld=new ot,this.matrixAutoUpdate=Ft.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new zo,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Vs.setFromAxisAngle(e,t),this.quaternion.multiply(Vs),this}rotateOnWorldAxis(e,t){return Vs.setFromAxisAngle(e,t),this.quaternion.premultiply(Vs),this}rotateX(e){return this.rotateOnAxis(Wc,e)}rotateY(e){return this.rotateOnAxis(kc,e)}rotateZ(e){return this.rotateOnAxis(Vc,e)}translateOnAxis(e,t){return Gc.copy(e).applyQuaternion(this.quaternion),this.position.add(Gc.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Wc,e)}translateY(e){return this.translateOnAxis(kc,e)}translateZ(e){return this.translateOnAxis(Vc,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(yi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Ho.copy(e):Ho.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Ar.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?yi.lookAt(Ar,Ho,this.up):yi.lookAt(Ho,Ar,this.up),this.quaternion.setFromRotationMatrix(yi),i&&(yi.extractRotation(i.matrixWorld),Vs.setFromRotationMatrix(yi),this.quaternion.premultiply(Vs.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Rd)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(jc)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(jc)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),yi.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),yi.multiply(e.parent.matrixWorld)),e.applyMatrix4(yi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(void 0!==o)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ar,e,Cd),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ar,Pd,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function s(a,l){return void 0===a[l.uuid]&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++)s(e.shapes,l[c]);else s(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));i.material=a}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++)i.animations.push(s(e.animations,this.animations[a]))}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),d=o(e.skeletons),f=o(e.animations),g=o(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),g.length>0&&(n.nodes=g)}return n.object=i,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let n=0;n<e.children.length;n++)this.add(e.children[n].clone());return this}}Ft.DefaultUp=new T(0,1,0),Ft.DefaultMatrixAutoUpdate=!0,Ft.prototype.isObject3D=!0;const Jn=new T,xi=new T,vl=new T,_i=new T,js=new T,Xs=new T,Xc=new T,yl=new T,xl=new T,_l=new T;class dn{constructor(e=new T,t=new T,n=new T){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Jn.subVectors(e,t),i.cross(Jn);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){Jn.subVectors(i,t),xi.subVectors(n,t),vl.subVectors(e,t);const o=Jn.dot(Jn),a=Jn.dot(xi),l=Jn.dot(vl),c=xi.dot(xi),u=xi.dot(vl),h=o*c-a*a;if(0===h)return s.set(-2,-1,-1);const d=1/h,f=(c*l-a*u)*d,g=(o*u-a*l)*d;return s.set(1-f-g,g,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,_i),_i.x>=0&&_i.y>=0&&_i.x+_i.y<=1}static getUV(e,t,n,i,s,o,a,l){return this.getBarycoord(e,t,n,i,_i),l.set(0,0),l.addScaledVector(s,_i.x),l.addScaledVector(o,_i.y),l.addScaledVector(a,_i.z),l}static isFrontFacing(e,t,n,i){return Jn.subVectors(n,t),xi.subVectors(e,t),Jn.cross(xi).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Jn.subVectors(this.c,this.b),xi.subVectors(this.a,this.b),.5*Jn.cross(xi).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return dn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return dn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return dn.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return dn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return dn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let o,a;js.subVectors(i,n),Xs.subVectors(s,n),yl.subVectors(e,n);const l=js.dot(yl),c=Xs.dot(yl);if(l<=0&&c<=0)return t.copy(n);xl.subVectors(e,i);const u=js.dot(xl),h=Xs.dot(xl);if(u>=0&&h<=u)return t.copy(i);const d=l*h-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(n).addScaledVector(js,o);_l.subVectors(e,s);const f=js.dot(_l),g=Xs.dot(_l);if(g>=0&&f<=g)return t.copy(s);const p=f*c-l*g;if(p<=0&&c>=0&&g<=0)return a=c/(c-g),t.copy(n).addScaledVector(Xs,a);const m=u*g-f*h;if(m<=0&&h-u>=0&&f-g>=0)return Xc.subVectors(s,i),a=(h-u)/(h-u+(f-g)),t.copy(i).addScaledVector(Xc,a);const v=1/(m+p+d);return o=p*v,a=d*v,t.copy(n).addScaledVector(js,o).addScaledVector(Xs,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Ld=0;class un extends Ii{constructor(){super(),Object.defineProperty(this,"id",{value:Ld++}),this.uuid=Nn(),this.name="",this.type="Material",this.blending=1,this.side=tt,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const i=this[t];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),this.side!==tt&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){const s=i(e.textures),o=i(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}un.prototype.isMaterial=!0,un.fromType=function(){return null};class bi extends un{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new Ze(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}bi.prototype.isMeshBasicMaterial=!0;const fn=new T,Go=new pe;class kt{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=Mr,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new Ze),t[n++]=o.r,t[n++]=o.g,t[n++]=o.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new pe),t[n++]=o.x,t[n++]=o.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new T),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new Bt),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z,t[n++]=o.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)Go.fromBufferAttribute(this,t),Go.applyMatrix3(e),this.setXY(t,Go.x,Go.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)fn.fromBufferAttribute(this,t),fn.applyMatrix3(e),this.setXYZ(t,fn.x,fn.y,fn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)fn.fromBufferAttribute(this,t),fn.applyMatrix4(e),this.setXYZ(t,fn.x,fn.y,fn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)fn.fromBufferAttribute(this,t),fn.applyNormalMatrix(e),this.setXYZ(t,fn.x,fn.y,fn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)fn.fromBufferAttribute(this,t),fn.transformDirection(e),this.setXYZ(t,fn.x,fn.y,fn.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return this.array[0+(e*=this.itemSize)]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return this.array[0+(e*=this.itemSize)]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return this.array[0+(e*=this.itemSize)]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==Mr&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}}kt.prototype.isBufferAttribute=!0;class $c extends kt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Kc extends kt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}(class Id extends kt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}).prototype.isFloat16BufferAttribute=!0;class st extends kt{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Dd=0;const kn=new ot,bl=new Ft,$s=new T,Un=new Fn,Cr=new Fn,_n=new T;class ft extends Ii{constructor(){super(),Object.defineProperty(this,"id",{value:Dd++}),this.uuid=Nn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return this.index=Array.isArray(e)?new(Nc(e)?Kc:$c)(e,1):e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const s=(new gn).getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return kn.makeRotationFromQuaternion(e),this.applyMatrix4(kn),this}rotateX(e){return kn.makeRotationX(e),this.applyMatrix4(kn),this}rotateY(e){return kn.makeRotationY(e),this.applyMatrix4(kn),this}rotateZ(e){return kn.makeRotationZ(e),this.applyMatrix4(kn),this}translate(e,t,n){return kn.makeTranslation(e,t,n),this.applyMatrix4(kn),this}scale(e,t,n){return kn.makeScale(e,t,n),this.applyMatrix4(kn),this}lookAt(e){return bl.lookAt(e),bl.updateMatrix(),this.applyMatrix4(bl.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter($s).negate(),this.translate($s.x,$s.y,$s.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new st(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Fn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new T(-1/0,-1/0,-1/0),new T(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++)Un.setFromBufferAttribute(t[n]),this.morphTargetsRelative?(_n.addVectors(this.boundingBox.min,Un.min),this.boundingBox.expandByPoint(_n),_n.addVectors(this.boundingBox.max,Un.max),this.boundingBox.expandByPoint(_n)):(this.boundingBox.expandByPoint(Un.min),this.boundingBox.expandByPoint(Un.max))}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Ni);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new T,1/0);if(e){const n=this.boundingSphere.center;if(Un.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++)Cr.setFromBufferAttribute(t[s]),this.morphTargetsRelative?(_n.addVectors(Un.min,Cr.min),Un.expandByPoint(_n),_n.addVectors(Un.max,Cr.max),Un.expandByPoint(_n)):(Un.expandByPoint(Cr.min),Un.expandByPoint(Cr.max));Un.getCenter(n);let i=0;for(let s=0,o=e.count;s<o;s++)_n.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(_n));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)_n.fromBufferAttribute(a,c),l&&($s.fromBufferAttribute(e,c),_n.add($s)),i=Math.max(i,n.distanceToSquared(_n))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,i=t.position.array,s=t.normal.array,o=t.uv.array,a=i.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new kt(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let W=0;W<a;W++)c[W]=new T,u[W]=new T;const h=new T,d=new T,f=new T,g=new pe,p=new pe,m=new pe,v=new T,y=new T;function M(W,j,ge){h.fromArray(i,3*W),d.fromArray(i,3*j),f.fromArray(i,3*ge),g.fromArray(o,2*W),p.fromArray(o,2*j),m.fromArray(o,2*ge),d.sub(h),f.sub(h),p.sub(g),m.sub(g);const Oe=1/(p.x*m.y-m.x*p.y);!isFinite(Oe)||(v.copy(d).multiplyScalar(m.y).addScaledVector(f,-p.y).multiplyScalar(Oe),y.copy(f).multiplyScalar(p.x).addScaledVector(d,-m.x).multiplyScalar(Oe),c[W].add(v),c[j].add(v),c[ge].add(v),u[W].add(y),u[j].add(y),u[ge].add(y))}let x=this.groups;0===x.length&&(x=[{start:0,count:n.length}]);for(let W=0,j=x.length;W<j;++W){const ge=x[W],Oe=ge.start;for(let le=Oe,q=Oe+ge.count;le<q;le+=3)M(n[le+0],n[le+1],n[le+2])}const A=new T,R=new T,U=new T,b=new T;function D(W){U.fromArray(s,3*W),b.copy(U);const j=c[W];A.copy(j),A.sub(U.multiplyScalar(U.dot(j))).normalize(),R.crossVectors(b,j);const Oe=R.dot(u[W])<0?-1:1;l[4*W]=A.x,l[4*W+1]=A.y,l[4*W+2]=A.z,l[4*W+3]=Oe}for(let W=0,j=x.length;W<j;++W){const ge=x[W],Oe=ge.start;for(let le=Oe,q=Oe+ge.count;le<q;le+=3)D(n[le+0]),D(n[le+1]),D(n[le+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new kt(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new T,s=new T,o=new T,a=new T,l=new T,c=new T,u=new T,h=new T;if(e)for(let d=0,f=e.count;d<f;d+=3){const g=e.getX(d+0),p=e.getX(d+1),m=e.getX(d+2);i.fromBufferAttribute(t,g),s.fromBufferAttribute(t,p),o.fromBufferAttribute(t,m),u.subVectors(o,s),h.subVectors(i,s),u.cross(h),a.fromBufferAttribute(n,g),l.fromBufferAttribute(n,p),c.fromBufferAttribute(n,m),a.add(u),l.add(u),c.add(u),n.setXYZ(g,a.x,a.y,a.z),n.setXYZ(p,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,s),h.subVectors(i,s),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===e.attributes[i])continue;const o=n[i].array,a=e.attributes[i],l=a.array,c=a.itemSize*t,u=Math.min(l.length,o.length-c);for(let h=0,d=c;h<u;h++,d++)o[d]=l[h]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)_n.fromBufferAttribute(e,t),_n.normalize(),e.setXYZ(t,_n.x,_n.y,_n.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,d=new c.constructor(l.length*u);let f=0,g=0;for(let p=0,m=l.length;p<m;p++){f=a.isInterleavedBufferAttribute?l[p]*a.data.stride+a.offset:l[p]*u;for(let v=0;v<u;v++)d[g++]=c[f++]}return new kt(d,u,h)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ft,n=this.index.array,i=this.attributes;for(const a in i){const c=e(i[a],n);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,h=c.length;u<h;u++){const f=e(c[u],n);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const l=this.parameters;for(const c in l)void 0!==l[c]&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n)e.data.attributes[l]=n[l].toJSON(e.data);const i={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,d=c.length;h<d;h++)u.push(c[h].toJSON(e.data));u.length>0&&(i[l]=u,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return null!==a&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i)this.setAttribute(c,i[c].clone(t));const s=e.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;null!==a&&(this.boundingBox=a.clone());const l=e.boundingSphere;return null!==l&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}ft.prototype.isBufferGeometry=!0;const Yc=new ot,Ks=new ms,Ml=new Ni,zi=new T,Hi=new T,Gi=new T,wl=new T,Sl=new T,El=new T,Wo=new T,ko=new T,Vo=new T,jo=new pe,Xo=new pe,$o=new pe,Tl=new T,Ko=new T;class yn extends Ft{constructor(e=new ft,t=new bi){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(void 0===i||(null===n.boundingSphere&&n.computeBoundingSphere(),Ml.copy(n.boundingSphere),Ml.applyMatrix4(s),!1===e.ray.intersectsSphere(Ml))||(Yc.copy(s).invert(),Ks.copy(e.ray).applyMatrix4(Yc),null!==n.boundingBox&&!1===Ks.intersectsBox(n.boundingBox)))return;let o;if(n.isBufferGeometry){const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,h=n.attributes.uv,d=n.attributes.uv2,f=n.groups,g=n.drawRange;if(null!==a)if(Array.isArray(i))for(let p=0,m=f.length;p<m;p++){const v=f[p],y=i[v.materialIndex];for(let A=Math.max(v.start,g.start),R=Math.min(a.count,Math.min(v.start+v.count,g.start+g.count));A<R;A+=3){const U=a.getX(A),b=a.getX(A+1),D=a.getX(A+2);o=Yo(this,y,e,Ks,l,c,u,h,d,U,b,D),o&&(o.faceIndex=Math.floor(A/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else for(let v=Math.max(0,g.start),y=Math.min(a.count,g.start+g.count);v<y;v+=3){const M=a.getX(v),x=a.getX(v+1),A=a.getX(v+2);o=Yo(this,i,e,Ks,l,c,u,h,d,M,x,A),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}else if(void 0!==l)if(Array.isArray(i))for(let p=0,m=f.length;p<m;p++){const v=f[p],y=i[v.materialIndex];for(let A=Math.max(v.start,g.start),R=Math.min(l.count,Math.min(v.start+v.count,g.start+g.count));A<R;A+=3)o=Yo(this,y,e,Ks,l,c,u,h,d,A,A+1,A+2),o&&(o.faceIndex=Math.floor(A/3),o.face.materialIndex=v.materialIndex,t.push(o))}else for(let v=Math.max(0,g.start),y=Math.min(l.count,g.start+g.count);v<y;v+=3)o=Yo(this,i,e,Ks,l,c,u,h,d,v,v+1,v+2),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function Yo(r,e,t,n,i,s,o,a,l,c,u,h){zi.fromBufferAttribute(i,c),Hi.fromBufferAttribute(i,u),Gi.fromBufferAttribute(i,h);const d=r.morphTargetInfluences;if(s&&d){Wo.set(0,0,0),ko.set(0,0,0),Vo.set(0,0,0);for(let g=0,p=s.length;g<p;g++){const m=d[g],v=s[g];0!==m&&(wl.fromBufferAttribute(v,c),Sl.fromBufferAttribute(v,u),El.fromBufferAttribute(v,h),o?(Wo.addScaledVector(wl,m),ko.addScaledVector(Sl,m),Vo.addScaledVector(El,m)):(Wo.addScaledVector(wl.sub(zi),m),ko.addScaledVector(Sl.sub(Hi),m),Vo.addScaledVector(El.sub(Gi),m)))}zi.add(Wo),Hi.add(ko),Gi.add(Vo)}r.isSkinnedMesh&&(r.boneTransform(c,zi),r.boneTransform(u,Hi),r.boneTransform(h,Gi));const f=function Od(r,e,t,n,i,s,o,a){let l;if(l=e.side===ce?n.intersectTriangle(o,s,i,!0,a):n.intersectTriangle(i,s,o,e.side!==Se,a),null===l)return null;Ko.copy(a),Ko.applyMatrix4(r.matrixWorld);const c=t.ray.origin.distanceTo(Ko);return c<t.near||c>t.far?null:{distance:c,point:Ko.clone(),object:r}}(r,e,t,n,zi,Hi,Gi,Tl);if(f){a&&(jo.fromBufferAttribute(a,c),Xo.fromBufferAttribute(a,u),$o.fromBufferAttribute(a,h),f.uv=dn.getUV(Tl,zi,Hi,Gi,jo,Xo,$o,new pe)),l&&(jo.fromBufferAttribute(l,c),Xo.fromBufferAttribute(l,u),$o.fromBufferAttribute(l,h),f.uv2=dn.getUV(Tl,zi,Hi,Gi,jo,Xo,$o,new pe));const g={a:c,b:u,c:h,normal:new T,materialIndex:0};dn.getNormal(zi,Hi,Gi,g.normal),f.face=g}return f}yn.prototype.isMesh=!0;class Wi extends ft{constructor(e=1,t=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let d=0,f=0;function g(p,m,v,y,M,x,A,R,U,b,D){const W=x/U,j=A/b,ge=x/2,Oe=A/2,V=R/2,le=U+1,q=b+1;let ve=0,_e=0;const ne=new T;for(let ue=0;ue<q;ue++){const Be=ue*j-Oe;for(let Me=0;Me<le;Me++)ne[p]=(Me*W-ge)*y,ne[m]=Be*M,ne[v]=V,c.push(ne.x,ne.y,ne.z),ne[p]=0,ne[m]=0,ne[v]=R>0?1:-1,u.push(ne.x,ne.y,ne.z),h.push(Me/U),h.push(1-ue/b),ve+=1}for(let ue=0;ue<b;ue++)for(let Be=0;Be<U;Be++){const $e=d+Be+le*(ue+1),ct=d+(Be+1)+le*(ue+1),ht=d+(Be+1)+le*ue;l.push(d+Be+le*ue,$e,ht),l.push($e,ct,ht),_e+=6}a.addGroup(f,_e,D),f+=_e,d+=ve}g("z","y","x",-1,-1,n,t,e,o,s,0),g("z","y","x",1,-1,n,t,-e,o,s,1),g("x","z","y",1,1,e,n,t,i,o,2),g("x","z","y",1,-1,e,n,-t,i,o,3),g("x","y","z",1,-1,e,t,n,i,s,4),g("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new st(c,3)),this.setAttribute("normal",new st(u,3)),this.setAttribute("uv",new st(h,2))}static fromJSON(e){return new Wi(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ys(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];e[t][n]=i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.clone():Array.isArray(i)?i.slice():i}}return e}function An(r){const e={};for(let t=0;t<r.length;t++){const n=Ys(r[t]);for(const i in n)e[i]=n[i]}return e}const Jc={clone:Ys,merge:An};class Vn extends un{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ys(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;t.uniforms[i]=o&&o.isTexture?{type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?{type:"c",value:o.getHex()}:o&&o.isVector2?{type:"v2",value:o.toArray()}:o&&o.isVector3?{type:"v3",value:o.toArray()}:o&&o.isVector4?{type:"v4",value:o.toArray()}:o&&o.isMatrix3?{type:"m3",value:o.toArray()}:o&&o.isMatrix4?{type:"m4",value:o.toArray()}:{value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)!0===this.extensions[i]&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}Vn.prototype.isShaderMaterial=!0;class Pr extends Ft{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new ot,this.projectionMatrix=new ot,this.projectionMatrixInverse=new ot}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}Pr.prototype.isCamera=!0;class bn extends Pr{constructor(e=50,t=1,n=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*wr*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*cs*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*wr*Math.atan(Math.tan(.5*cs*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,o){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*cs*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const o=this.view;if(null!==this.view&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*i/l,t-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;0!==a&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}bn.prototype.isPerspectiveCamera=!0;class Jo extends Ft{constructor(e,t,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new bn(90,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new T(1,0,0)),this.add(i);const s=new bn(90,1,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new T(-1,0,0)),this.add(s);const o=new bn(90,1,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new T(0,1,0)),this.add(o);const a=new bn(90,1,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new T(0,-1,0)),this.add(a);const l=new bn(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new T(0,0,1)),this.add(l);const c=new bn(90,1,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new T(0,0,-1)),this.add(c)}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,o,a,l,c]=this.children,u=e.getRenderTarget(),h=e.toneMapping,d=e.xr.enabled;e.toneMapping=qt,e.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=f,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(u),e.toneMapping=h,e.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class Rr extends Cn{constructor(e,t,n,i,s,o,a,l,c,u){super(e=void 0!==e?e:[],t=void 0!==t?t:Gn,n,i,s,o,a,l,c,u),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}Rr.prototype.isCubeTexture=!0;class Al extends Pn{constructor(e,t={}){super(e,e,t);const n={width:e,height:e,depth:1};this.texture=new Rr([n,n,n,n,n,n],t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:Qt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n_uniforms={tEquirect:{value:null}},n_vertexShader="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",n_fragmentShader="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",i=new Wi(5,5,5),s=new Vn({name:"CubemapFromEquirect",uniforms:Ys(n_uniforms),vertexShader:n_vertexShader,fragmentShader:n_fragmentShader,side:ce,blending:se});s.uniforms.tEquirect.value=t;const o=new yn(i,s),a=t.minFilter;return t.minFilter===Qn&&(t.minFilter=Qt),new Jo(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(s)}}Al.prototype.isWebGLCubeRenderTarget=!0;const Cl=new T,Bd=new T,Ud=new gn;class Mi{constructor(e=new T(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Cl.subVectors(n,t).cross(Bd.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Cl),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Ud.getNormalMatrix(e),i=this.coplanarPoint(Cl).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Mi.prototype.isPlane=!0;const qs=new Ni,Zo=new T;class qo{constructor(e=new Mi,t=new Mi,n=new Mi,i=new Mi,s=new Mi,o=new Mi){this.planes=[e,t,n,i,s,o]}set(e,t,n,i,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7],d=n[8],f=n[9],g=n[10],p=n[11],m=n[12],v=n[13],y=n[14],M=n[15];return t[0].setComponents(a-i,h-l,p-d,M-m).normalize(),t[1].setComponents(a+i,h+l,p+d,M+m).normalize(),t[2].setComponents(a+s,h+c,p+f,M+v).normalize(),t[3].setComponents(a-s,h-c,p-f,M-v).normalize(),t[4].setComponents(a-o,h-u,p-g,M-y).normalize(),t[5].setComponents(a+o,h+u,p+g,M+y).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),qs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(qs)}intersectsSprite(e){return qs.center.set(0,0,0),qs.radius=.7071067811865476,qs.applyMatrix4(e.matrixWorld),this.intersectsSphere(qs)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Zo.x=i.normal.x>0?e.max.x:e.min.x,Zo.y=i.normal.y>0?e.max.y:e.min.y,Zo.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Zo)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Zc(){let r=null,e=!1,t=null,n=null;function i(s,o){t(s,o),n=r.requestAnimationFrame(i)}return{start:function(){!0!==e&&null!==t&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function zd(r,e){const t=e.isWebGL2,n=new WeakMap;return{get:function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)},remove:function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(r.deleteBuffer(u.buffer),n.delete(c))},update:function l(c,u){if(c.isGLBufferAttribute){const d=n.get(c);return void((!d||d.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version}))}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);void 0===h?n.set(c,function i(c,u){const h=c.array,d=c.usage,f=r.createBuffer();let g;if(r.bindBuffer(u,f),r.bufferData(u,h,d),c.onUploadCallback(),h instanceof Float32Array)g=5126;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute){if(!t)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");g=5131}else g=5123;else if(h instanceof Int16Array)g=5122;else if(h instanceof Uint32Array)g=5125;else if(h instanceof Int32Array)g=5124;else if(h instanceof Int8Array)g=5120;else if(h instanceof Uint8Array)g=5121;else{if(!(h instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);g=5121}return{buffer:f,type:g,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}(c,u)):h.version<c.version&&(function s(c,u,h){const d=u.array,f=u.updateRange;r.bindBuffer(h,c),-1===f.count?r.bufferSubData(h,0,d):(t?r.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d,f.offset,f.count):r.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d.subarray(f.offset,f.offset+f.count)),f.count=-1)}(h.buffer,c,u),h.version=c.version)}}}class gs extends ft{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,o=t/2,a=Math.floor(n),l=Math.floor(i),c=a+1,u=l+1,h=e/a,d=t/l,f=[],g=[],p=[],m=[];for(let v=0;v<u;v++){const y=v*d-o;for(let M=0;M<c;M++)g.push(M*h-s,-y,0),p.push(0,0,1),m.push(M/a),m.push(1-v/l)}for(let v=0;v<l;v++)for(let y=0;y<a;y++){const x=y+c*(v+1),A=y+1+c*(v+1),R=y+1+c*v;f.push(y+c*v,x,R),f.push(x,A,R)}this.setIndex(f),this.setAttribute("position",new st(g,3)),this.setAttribute("normal",new st(p,3)),this.setAttribute("uv",new st(m,2))}static fromJSON(e){return new gs(e.width,e.height,e.widthSegments,e.heightSegments)}}const Ct={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},je={common:{diffuse:{value:new Ze(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new gn},uv2Transform:{value:new gn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new pe(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ze(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ze(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new gn}},sprite:{diffuse:{value:new Ze(16777215)},opacity:{value:1},center:{value:new pe(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new gn}}},ii={basic:{uniforms:An([je.common,je.specularmap,je.envmap,je.aomap,je.lightmap,je.fog]),vertexShader:Ct.meshbasic_vert,fragmentShader:Ct.meshbasic_frag},lambert:{uniforms:An([je.common,je.specularmap,je.envmap,je.aomap,je.lightmap,je.emissivemap,je.fog,je.lights,{emissive:{value:new Ze(0)}}]),vertexShader:Ct.meshlambert_vert,fragmentShader:Ct.meshlambert_frag},phong:{uniforms:An([je.common,je.specularmap,je.envmap,je.aomap,je.lightmap,je.emissivemap,je.bumpmap,je.normalmap,je.displacementmap,je.fog,je.lights,{emissive:{value:new Ze(0)},specular:{value:new Ze(1118481)},shininess:{value:30}}]),vertexShader:Ct.meshphong_vert,fragmentShader:Ct.meshphong_frag},standard:{uniforms:An([je.common,je.envmap,je.aomap,je.lightmap,je.emissivemap,je.bumpmap,je.normalmap,je.displacementmap,je.roughnessmap,je.metalnessmap,je.fog,je.lights,{emissive:{value:new Ze(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ct.meshphysical_vert,fragmentShader:Ct.meshphysical_frag},toon:{uniforms:An([je.common,je.aomap,je.lightmap,je.emissivemap,je.bumpmap,je.normalmap,je.displacementmap,je.gradientmap,je.fog,je.lights,{emissive:{value:new Ze(0)}}]),vertexShader:Ct.meshtoon_vert,fragmentShader:Ct.meshtoon_frag},matcap:{uniforms:An([je.common,je.bumpmap,je.normalmap,je.displacementmap,je.fog,{matcap:{value:null}}]),vertexShader:Ct.meshmatcap_vert,fragmentShader:Ct.meshmatcap_frag},points:{uniforms:An([je.points,je.fog]),vertexShader:Ct.points_vert,fragmentShader:Ct.points_frag},dashed:{uniforms:An([je.common,je.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ct.linedashed_vert,fragmentShader:Ct.linedashed_frag},depth:{uniforms:An([je.common,je.displacementmap]),vertexShader:Ct.depth_vert,fragmentShader:Ct.depth_frag},normal:{uniforms:An([je.common,je.bumpmap,je.normalmap,je.displacementmap,{opacity:{value:1}}]),vertexShader:Ct.meshnormal_vert,fragmentShader:Ct.meshnormal_frag},sprite:{uniforms:An([je.sprite,je.fog]),vertexShader:Ct.sprite_vert,fragmentShader:Ct.sprite_frag},background:{uniforms:{uvTransform:{value:new gn},t2D:{value:null}},vertexShader:Ct.background_vert,fragmentShader:Ct.background_frag},cube:{uniforms:An([je.envmap,{opacity:{value:1}}]),vertexShader:Ct.cube_vert,fragmentShader:Ct.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ct.equirect_vert,fragmentShader:Ct.equirect_frag},distanceRGBA:{uniforms:An([je.common,je.displacementmap,{referencePosition:{value:new T},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ct.distanceRGBA_vert,fragmentShader:Ct.distanceRGBA_frag},shadow:{uniforms:An([je.lights,je.fog,{color:{value:new Ze(0)},opacity:{value:1}}]),vertexShader:Ct.shadow_vert,fragmentShader:Ct.shadow_frag}};function Fp(r,e,t,n,i,s){const o=new Ze(0);let l,c,a=!0===i?0:1,u=null,h=0,d=null;function g(p,m){t.buffers.color.setClear(p.r,p.g,p.b,m,s)}return{getClearColor:function(){return o},setClearColor:function(p,m=1){o.set(p),a=m,g(o,a)},getClearAlpha:function(){return a},setClearAlpha:function(p){a=p,g(o,a)},render:function f(p,m){let v=!1,y=!0===m.isScene?m.background:null;y&&y.isTexture&&(y=e.get(y));const M=r.xr,x=M.getSession&&M.getSession();x&&"additive"===x.environmentBlendMode&&(y=null),null===y?g(o,a):y&&y.isColor&&(g(y,1),v=!0),(r.autoClear||v)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),y&&(y.isCubeTexture||306===y.mapping)?(void 0===c&&(c=new yn(new Wi(1,1,1),new Vn({name:"BackgroundCubeMaterial",uniforms:Ys(ii.cube.uniforms),vertexShader:ii.cube.vertexShader,fragmentShader:ii.cube.fragmentShader,side:ce,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(A,R,U){this.matrixWorld.copyPosition(U.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),c.material.uniforms.envMap.value=y,c.material.uniforms.flipEnvMap.value=y.isCubeTexture&&!1===y.isRenderTargetTexture?-1:1,(u!==y||h!==y.version||d!==r.toneMapping)&&(c.material.needsUpdate=!0,u=y,h=y.version,d=r.toneMapping),c.layers.enableAll(),p.unshift(c,c.geometry,c.material,0,0,null)):y&&y.isTexture&&(void 0===l&&(l=new yn(new gs(2,2),new Vn({name:"BackgroundMaterial",uniforms:Ys(ii.background.uniforms),vertexShader:ii.background.vertexShader,fragmentShader:ii.background.fragmentShader,side:tt,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(l)),l.material.uniforms.t2D.value=y,!0===y.matrixAutoUpdate&&y.updateMatrix(),l.material.uniforms.uvTransform.value.copy(y.matrix),(u!==y||h!==y.version||d!==r.toneMapping)&&(l.material.needsUpdate=!0,u=y,h=y.version,d=r.toneMapping),l.layers.enableAll(),p.unshift(l,l.geometry,l.material,0,0,null))}}}function Bp(r,e,t,n){const i=r.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||null!==s,a={},l=m(null);let c=l,u=!1;function f(V){return n.isWebGL2?r.bindVertexArray(V):s.bindVertexArrayOES(V)}function g(V){return n.isWebGL2?r.deleteVertexArray(V):s.deleteVertexArrayOES(V)}function m(V){const le=[],q=[],ve=[];for(let _e=0;_e<i;_e++)le[_e]=0,q[_e]=0,ve[_e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:le,enabledAttributes:q,attributeDivisors:ve,object:V,attributes:{},index:null}}function M(){const V=c.newAttributes;for(let le=0,q=V.length;le<q;le++)V[le]=0}function x(V){A(V,0)}function A(V,le){const ve=c.enabledAttributes,_e=c.attributeDivisors;c.newAttributes[V]=1,0===ve[V]&&(r.enableVertexAttribArray(V),ve[V]=1),_e[V]!==le&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](V,le),_e[V]=le)}function R(){const V=c.newAttributes,le=c.enabledAttributes;for(let q=0,ve=le.length;q<ve;q++)le[q]!==V[q]&&(r.disableVertexAttribArray(q),le[q]=0)}function U(V,le,q,ve,_e,ne){!0!==n.isWebGL2||5124!==q&&5125!==q?r.vertexAttribPointer(V,le,q,ve,_e,ne):r.vertexAttribIPointer(V,le,q,_e,ne)}function ge(){Oe(),u=!0,c!==l&&(c=l,f(c.object))}function Oe(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function h(V,le,q,ve,_e){let ne=!1;if(o){const ue=function p(V,le,q){const ve=!0===q.wireframe;let _e=a[V.id];void 0===_e&&(_e={},a[V.id]=_e);let ne=_e[le.id];void 0===ne&&(ne={},_e[le.id]=ne);let ue=ne[ve];return void 0===ue&&(ue=m(function d(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}()),ne[ve]=ue),ue}(ve,q,le);c!==ue&&(c=ue,f(c.object)),ne=function v(V,le,q,ve){const _e=c.attributes,ne=le.attributes;let ue=0;const Be=q.getAttributes();for(const Me in Be)if(Be[Me].location>=0){const ct=_e[Me];let ht=ne[Me];if(void 0===ht&&("instanceMatrix"===Me&&V.instanceMatrix&&(ht=V.instanceMatrix),"instanceColor"===Me&&V.instanceColor&&(ht=V.instanceColor)),void 0===ct||ct.attribute!==ht||ht&&ct.data!==ht.data)return!0;ue++}return c.attributesNum!==ue||c.index!==ve}(V,ve,q,_e),ne&&function y(V,le,q,ve){const _e={},ne=le.attributes;let ue=0;const Be=q.getAttributes();for(const Me in Be)if(Be[Me].location>=0){let ct=ne[Me];void 0===ct&&("instanceMatrix"===Me&&V.instanceMatrix&&(ct=V.instanceMatrix),"instanceColor"===Me&&V.instanceColor&&(ct=V.instanceColor));const ht={};ht.attribute=ct,ct&&ct.data&&(ht.data=ct.data),_e[Me]=ht,ue++}c.attributes=_e,c.attributesNum=ue,c.index=ve}(V,ve,q,_e)}else{const ue=!0===le.wireframe;(c.geometry!==ve.id||c.program!==q.id||c.wireframe!==ue)&&(c.geometry=ve.id,c.program=q.id,c.wireframe=ue,ne=!0)}null!==_e&&t.update(_e,34963),(ne||u)&&(u=!1,function b(V,le,q,ve){if(!1===n.isWebGL2&&(V.isInstancedMesh||ve.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;M();const _e=ve.attributes,ne=q.getAttributes(),ue=le.defaultAttributeValues;for(const Be in ne){const Me=ne[Be];if(Me.location>=0){let $e=_e[Be];if(void 0===$e&&("instanceMatrix"===Be&&V.instanceMatrix&&($e=V.instanceMatrix),"instanceColor"===Be&&V.instanceColor&&($e=V.instanceColor)),void 0!==$e){const ct=$e.normalized,ht=$e.itemSize,de=t.get($e);if(void 0===de)continue;const Ut=de.buffer,xt=de.type,Tt=de.bytesPerElement;if($e.isInterleavedBufferAttribute){const ke=$e.data,It=ke.stride,ye=$e.offset;if(ke.isInstancedInterleavedBuffer){for(let me=0;me<Me.locationSize;me++)A(Me.location+me,ke.meshPerAttribute);!0!==V.isInstancedMesh&&void 0===ve._maxInstanceCount&&(ve._maxInstanceCount=ke.meshPerAttribute*ke.count)}else for(let me=0;me<Me.locationSize;me++)x(Me.location+me);r.bindBuffer(34962,Ut);for(let me=0;me<Me.locationSize;me++)U(Me.location+me,ht/Me.locationSize,xt,ct,It*Tt,(ye+ht/Me.locationSize*me)*Tt)}else{if($e.isInstancedBufferAttribute){for(let ke=0;ke<Me.locationSize;ke++)A(Me.location+ke,$e.meshPerAttribute);!0!==V.isInstancedMesh&&void 0===ve._maxInstanceCount&&(ve._maxInstanceCount=$e.meshPerAttribute*$e.count)}else for(let ke=0;ke<Me.locationSize;ke++)x(Me.location+ke);r.bindBuffer(34962,Ut);for(let ke=0;ke<Me.locationSize;ke++)U(Me.location+ke,ht/Me.locationSize,xt,ct,ht*Tt,ht/Me.locationSize*ke*Tt)}}else if(void 0!==ue){const ct=ue[Be];if(void 0!==ct)switch(ct.length){case 2:r.vertexAttrib2fv(Me.location,ct);break;case 3:r.vertexAttrib3fv(Me.location,ct);break;case 4:r.vertexAttrib4fv(Me.location,ct);break;default:r.vertexAttrib1fv(Me.location,ct)}}}}R()}(V,le,q,ve),null!==_e&&r.bindBuffer(34963,t.get(_e).buffer))},reset:ge,resetDefaultState:Oe,dispose:function D(){ge();for(const V in a){const le=a[V];for(const q in le){const ve=le[q];for(const _e in ve)g(ve[_e].object),delete ve[_e];delete le[q]}delete a[V]}},releaseStatesOfGeometry:function W(V){if(void 0===a[V.id])return;const le=a[V.id];for(const q in le){const ve=le[q];for(const _e in ve)g(ve[_e].object),delete ve[_e];delete le[q]}delete a[V.id]},releaseStatesOfProgram:function j(V){for(const le in a){const q=a[le];if(void 0===q[V.id])continue;const ve=q[V.id];for(const _e in ve)g(ve[_e].object),delete ve[_e];delete q[V.id]}},initAttributes:M,enableAttribute:x,disableUnusedAttributes:R}}function Up(r,e,t,n){const i=n.isWebGL2;let s;this.setMode=function o(c){s=c},this.render=function a(c,u){r.drawArrays(s,c,u),t.update(u,s,1)},this.renderInstances=function l(c,u,h){if(0===h)return;let d,f;if(i)d=r,f="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",null===d)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");d[f](s,c,u,h),t.update(u,s,h)}}function zp(r,e,t){let n;function s(U){if("highp"===U){if(r.getShaderPrecisionFormat(35633,36338).precision>0&&r.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";U="mediump"}return"mediump"===U&&r.getShaderPrecisionFormat(35633,36337).precision>0&&r.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o="undefined"!=typeof WebGL2RenderingContext&&r instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&r instanceof WebGL2ComputeRenderingContext;let a=void 0!==t.precision?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),u=!0===t.logarithmicDepthBuffer,h=r.getParameter(34930),d=r.getParameter(35660),f=r.getParameter(3379),g=r.getParameter(34076),p=r.getParameter(34921),m=r.getParameter(36347),v=r.getParameter(36348),y=r.getParameter(36349),M=d>0,x=o||e.has("OES_texture_float");return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:function i(){if(void 0!==n)return n;if(!0===e.has("EXT_texture_filter_anisotropic")){const U=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(U.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:d,maxTextureSize:f,maxCubemapSize:g,maxAttributes:p,maxVertexUniforms:m,maxVaryings:v,maxFragmentUniforms:y,vertexTextures:M,floatFragmentTextures:x,floatVertexTextures:M&&x,maxSamples:o?r.getParameter(36183):0}}function Hp(r){const e=this;let t=null,n=0,i=!1,s=!1;const o=new Mi,a=new gn,l={value:null,needsUpdate:!1};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,d,f,g){const p=null!==h?h.length:0;let m=null;if(0!==p){if(m=l.value,!0!==g||null===m){const v=f+4*p,y=d.matrixWorldInverse;a.getNormalMatrix(y),(null===m||m.length<v)&&(m=new Float32Array(v));for(let M=0,x=f;M!==p;++M,x+=4)o.copy(h[M]).applyMatrix4(y,a),o.normal.toArray(m,x),m[x+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=p,e.numIntersection=0,m}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d,f){const g=0!==h.length||d||0!==n||i;return i=d,t=u(h,f,0),n=h.length,g},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(h,d,f){const g=h.clippingPlanes,p=h.clipIntersection,m=h.clipShadows,v=r.get(h);if(!i||null===g||0===g.length||s&&!m)s?u(null):c();else{const y=s?0:n,M=4*y;let x=v.clippingState||null;l.value=x,x=u(g,d,M,f);for(let A=0;A!==M;++A)x[A]=t[A];v.clippingState=x,this.numIntersection=p?this.numPlanes:0,this.numPlanes+=y}}}function Gp(r){let e=new WeakMap;function t(o,a){return a===Ls?o.mapping=Gn:304===a&&(o.mapping=302),o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=e.get(a);void 0!==l&&(e.delete(a),l.dispose())}return{get:function n(o){if(o&&o.isTexture&&!1===o.isRenderTargetTexture){const a=o.mapping;if(a===Ls||304===a){if(e.has(o))return t(e.get(o).texture,o.mapping);{const l=o.image;if(l&&l.height>0){const c=new Al(l.height/2);return c.fromEquirectangularTexture(r,o),e.set(o,c),o.addEventListener("dispose",i),t(c.texture,o.mapping)}return null}}}return o},dispose:function s(){e=new WeakMap}}}ii.physical={uniforms:An([ii.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new pe(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new Ze(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new pe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Ze(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Ze(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ct.meshphysical_vert,fragmentShader:Ct.meshphysical_frag};class Lr extends Pr{constructor(e=-1,t=1,n=1,i=-1,s=.1,o=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,o){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=i+t,l=i-t;if(null!==this.view&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}Lr.prototype.isOrthographicCamera=!0;const qc=[.125,.215,.35,.446,.526,.582],Pl=new Lr,Qc=new Ze;let Rl=null;const ys=(1+Math.sqrt(5))/2,er=1/ys,eu=[new T(1,1,1),new T(-1,1,1),new T(1,1,-1),new T(-1,1,-1),new T(0,ys,er),new T(0,ys,-er),new T(er,0,ys),new T(-er,0,ys),new T(ys,er,0),new T(-ys,er,0)];class tu{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Rl=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=su(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=iu(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Rl),e.scissorTest=!1,Qo(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSize(e.mapping===Gn||302===e.mapping?0===e.image.length?16:e.image[0].width||e.image[0].image.width:e.image.width/4),Rl=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Qt,minFilter:Qt,generateMipmaps:!1,type:Pi,format:X,encoding:pi,depthBuffer:!1},i=nu(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=nu(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function Wp(r){const e=[],t=[],n=[];let i=r;const s=r-4+1+qc.length;for(let o=0;o<s;o++){const a=Math.pow(2,i);t.push(a);let l=1/a;o>r-4?l=qc[o-r+4-1]:0===o&&(l=0),n.push(l);const c=1/(a-2),u=-c,h=1+c,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,g=6,p=3,m=2,v=1,y=new Float32Array(p*g*f),M=new Float32Array(m*g*f),x=new Float32Array(v*g*f);for(let R=0;R<f;R++){const U=R%3*2/3-1,b=R>2?0:-1;y.set([U,b,0,U+2/3,b,0,U+2/3,b+1,0,U,b,0,U+2/3,b+1,0,U,b+1,0],p*g*R),M.set(d,m*g*R),x.set([R,R,R,R,R,R],v*g*R)}const A=new ft;A.setAttribute("position",new kt(y,p)),A.setAttribute("uv",new kt(M,m)),A.setAttribute("faceIndex",new kt(x,v)),e.push(A),i>4&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}(s)),this._blurMaterial=function kp(r,e,t){const n=new Float32Array(20),i=new T(0,1,0);return new Vn({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:se,depthTest:!1,depthWrite:!1})}(s,e,t)}return i}_compileMaterial(e){const t=new yn(this._lodPlanes[0],e);this._renderer.compile(t,Pl)}_sceneToCubeUV(e,t,n,i){const a=new bn(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,d=u.toneMapping;u.getClearColor(Qc),u.toneMapping=qt,u.autoClear=!1;const f=new bi({name:"PMREM.Background",side:ce,depthWrite:!1,depthTest:!1}),g=new yn(new Wi,f);let p=!1;const m=e.background;m?m.isColor&&(f.color.copy(m),e.background=null,p=!0):(f.color.copy(Qc),p=!0);for(let v=0;v<6;v++){const y=v%3;0===y?(a.up.set(0,l[v],0),a.lookAt(c[v],0,0)):1===y?(a.up.set(0,0,l[v]),a.lookAt(0,c[v],0)):(a.up.set(0,l[v],0),a.lookAt(0,0,c[v]));const M=this._cubeSize;Qo(i,y*M,v>2?M:0,M,M),u.setRenderTarget(i),p&&u.render(g,a),u.render(e,a)}g.geometry.dispose(),g.material.dispose(),u.toneMapping=d,u.autoClear=h,e.background=m}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Gn||302===e.mapping;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=su()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=iu());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new yn(this._lodPlanes[0],s);s.uniforms.envMap.value=e;const l=this._cubeSize;Qo(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(o,Pl)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]);this._blur(e,i-1,i,s,eu[(i-1)%eu.length])}t.autoClear=n}_blur(e,t,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",s),this._halfBlur(o,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,o,a){const l=this._renderer,c=this._blurMaterial;"latitudinal"!==o&&"longitudinal"!==o&&console.error("blur direction must be either latitudinal or longitudinal!");const h=new yn(this._lodPlanes[i],c),d=c.uniforms,f=this._sizeLods[n]-1,g=isFinite(s)?Math.PI/(2*f):2*Math.PI/39,p=s/g,m=isFinite(s)?1+Math.floor(3*p):20;m>20&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const v=[];let y=0;for(let U=0;U<20;++U){const b=U/p,D=Math.exp(-b*b/2);v.push(D),0===U?y+=D:U<m&&(y+=2*D)}for(let U=0;U<v.length;U++)v[U]=v[U]/y;d.envMap.value=e.texture,d.samples.value=m,d.weights.value=v,d.latitudinal.value="latitudinal"===o,a&&(d.poleAxis.value=a);const{_lodMax:M}=this;d.dTheta.value=g,d.mipInt.value=M-n;const x=this._sizeLods[i];Qo(t,3*x*(i>M-4?i-M+4:0),4*(this._cubeSize-x),3*x,2*x),l.setRenderTarget(t),l.render(h,Pl)}}function nu(r,e,t){const n=new Pn(r,e,t);return n.texture.mapping=306,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Qo(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function iu(){return new Vn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:se,depthTest:!1,depthWrite:!1})}function su(){return new Vn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:se,depthTest:!1,depthWrite:!1})}function Vp(r){let e=new WeakMap,t=null;function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);void 0!==c&&(e.delete(l),c.dispose())}return{get:function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===Ls||304===l,u=l===Gn||302===l;if(c||u){if(a.isRenderTargetTexture&&!0===a.needsPMREMUpdate){a.needsPMREMUpdate=!1;let h=e.get(a);return null===t&&(t=new tu(r)),h=c?t.fromEquirectangular(a,h):t.fromCubemap(a,h),e.set(a,h),h.texture}if(e.has(a))return e.get(a).texture;{const h=a.image;if(c&&h&&h.height>0||u&&h&&function i(a){let l=0;for(let u=0;u<6;u++)void 0!==a[u]&&l++;return 6===l}(h)){null===t&&(t=new tu(r));const d=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,d),a.addEventListener("dispose",s),d.texture}return null}}}return a},dispose:function o(){e=new WeakMap,null!==t&&(t.dispose(),t=null)}}}function jp(r){const e={};function t(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return null!==t(n)},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return null===i&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Xp(r,e,t,n){const i={},s=new WeakMap;function o(h){const d=h.target;null!==d.index&&e.remove(d.index);for(const g in d.attributes)e.remove(d.attributes[g]);d.removeEventListener("dispose",o),delete i[d.id];const f=s.get(d);f&&(e.remove(f),s.delete(d)),n.releaseStatesOfGeometry(d),!0===d.isInstancedBufferGeometry&&delete d._maxInstanceCount,t.memory.geometries--}function c(h){const d=[],f=h.index,g=h.attributes.position;let p=0;if(null!==f){const y=f.array;p=f.version;for(let M=0,x=y.length;M<x;M+=3){const A=y[M+0],R=y[M+1],U=y[M+2];d.push(A,R,R,U,U,A)}}else{p=g.version;for(let M=0,x=g.array.length/3-1;M<x;M+=3){const A=M+0,R=M+1,U=M+2;d.push(A,R,R,U,U,A)}}const m=new(Nc(d)?Kc:$c)(d,1);m.version=p;const v=s.get(h);v&&e.remove(v),s.set(h,m)}return{get:function a(h,d){return!0===i[d.id]||(d.addEventListener("dispose",o),i[d.id]=!0,t.memory.geometries++),d},update:function l(h){const d=h.attributes;for(const g in d)e.update(d[g],34962);const f=h.morphAttributes;for(const g in f){const p=f[g];for(let m=0,v=p.length;m<v;m++)e.update(p[m],34962)}},getWireframeAttribute:function u(h){const d=s.get(h);if(d){const f=h.index;null!==f&&d.version<f.version&&c(h)}else c(h);return s.get(h)}}}function $p(r,e,t,n){const i=n.isWebGL2;let s,a,l;this.setMode=function o(d){s=d},this.setIndex=function c(d){a=d.type,l=d.bytesPerElement},this.render=function u(d,f){r.drawElements(s,f,a,d*l),t.update(f,s,1)},this.renderInstances=function h(d,f,g){if(0===g)return;let p,m;if(i)p=r,m="drawElementsInstanced";else if(p=e.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",null===p)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");p[m](s,f,a,d*l,g),t.update(f,s,g)}}function Kp(r){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function n(s,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(s/3);break;case 1:t.lines+=a*(s/2);break;case 3:t.lines+=a*(s-1);break;case 2:t.lines+=a*s;break;case 0:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o)}}}}function Yp(r,e){return r[0]-e[0]}function Jp(r,e){return Math.abs(e[1])-Math.abs(r[1])}function Il(r,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),r.divideScalar(t)}function Zp(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,o=new Bt,a=[];for(let c=0;c<8;c++)a[c]=[c,0];return{update:function l(c,u,h,d){const f=c.morphTargetInfluences;if(!0===e.isWebGL2){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,p=void 0!==g?g.length:0;let m=s.get(u);if(void 0===m||m.count!==p){let le=function(){Oe.dispose(),s.delete(u),u.removeEventListener("dispose",le)};void 0!==m&&m.texture.dispose();const M=void 0!==u.morphAttributes.position,x=void 0!==u.morphAttributes.normal,A=void 0!==u.morphAttributes.color,R=u.morphAttributes.position||[],U=u.morphAttributes.normal||[],b=u.morphAttributes.color||[];let D=0;!0===M&&(D=1),!0===x&&(D=2),!0===A&&(D=3);let W=u.attributes.position.count*D,j=1;W>e.maxTextureSize&&(j=Math.ceil(W/e.maxTextureSize),W=e.maxTextureSize);const ge=new Float32Array(W*j*4*p),Oe=new Io(ge,W,j,p);Oe.type=ti,Oe.needsUpdate=!0;const V=4*D;for(let q=0;q<p;q++){const ve=R[q],_e=U[q],ne=b[q],ue=W*j*4*q;for(let Be=0;Be<ve.count;Be++){const Me=Be*V;!0===M&&(o.fromBufferAttribute(ve,Be),!0===ve.normalized&&Il(o,ve),ge[ue+Me+0]=o.x,ge[ue+Me+1]=o.y,ge[ue+Me+2]=o.z,ge[ue+Me+3]=0),!0===x&&(o.fromBufferAttribute(_e,Be),!0===_e.normalized&&Il(o,_e),ge[ue+Me+4]=o.x,ge[ue+Me+5]=o.y,ge[ue+Me+6]=o.z,ge[ue+Me+7]=0),!0===A&&(o.fromBufferAttribute(ne,Be),!0===ne.normalized&&Il(o,ne),ge[ue+Me+8]=o.x,ge[ue+Me+9]=o.y,ge[ue+Me+10]=o.z,ge[ue+Me+11]=4===ne.itemSize?o.w:1)}}m={count:p,texture:Oe,size:new pe(W,j)},s.set(u,m),u.addEventListener("dispose",le)}let v=0;for(let M=0;M<f.length;M++)v+=f[M];const y=u.morphTargetsRelative?1:1-v;d.getUniforms().setValue(r,"morphTargetBaseInfluence",y),d.getUniforms().setValue(r,"morphTargetInfluences",f),d.getUniforms().setValue(r,"morphTargetsTexture",m.texture,t),d.getUniforms().setValue(r,"morphTargetsTextureSize",m.size)}else{const g=void 0===f?0:f.length;let p=n[u.id];if(void 0===p||p.length!==g){p=[];for(let x=0;x<g;x++)p[x]=[x,0];n[u.id]=p}for(let x=0;x<g;x++){const A=p[x];A[0]=x,A[1]=f[x]}p.sort(Jp);for(let x=0;x<8;x++)x<g&&p[x][1]?(a[x][0]=p[x][0],a[x][1]=p[x][1]):(a[x][0]=Number.MAX_SAFE_INTEGER,a[x][1]=0);a.sort(Yp);const m=u.morphAttributes.position,v=u.morphAttributes.normal;let y=0;for(let x=0;x<8;x++){const A=a[x],R=A[0],U=A[1];R!==Number.MAX_SAFE_INTEGER&&U?(m&&u.getAttribute("morphTarget"+x)!==m[R]&&u.setAttribute("morphTarget"+x,m[R]),v&&u.getAttribute("morphNormal"+x)!==v[R]&&u.setAttribute("morphNormal"+x,v[R]),i[x]=U,y+=U):(m&&!0===u.hasAttribute("morphTarget"+x)&&u.deleteAttribute("morphTarget"+x),v&&!0===u.hasAttribute("morphNormal"+x)&&u.deleteAttribute("morphNormal"+x),i[x]=0)}const M=u.morphTargetsRelative?1:1-y;d.getUniforms().setValue(r,"morphTargetBaseInfluence",M),d.getUniforms().setValue(r,"morphTargetInfluences",i)}}}}function qp(r,e,t,n){let i=new WeakMap;function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),null!==c.instanceColor&&t.remove(c.instanceColor)}return{update:function s(l){const c=n.render.frame,h=e.get(l,l.geometry);return i.get(h)!==c&&(e.update(h),i.set(h,c)),l.isInstancedMesh&&(!1===l.hasEventListener("dispose",a)&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),null!==l.instanceColor&&t.update(l.instanceColor,34962)),h},dispose:function o(){i=new WeakMap}}}const ru=new Cn,ou=new Io,au=new cl,lu=new Rr,cu=[],uu=[],hu=new Float32Array(16),du=new Float32Array(9),fu=new Float32Array(4);function tr(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=cu[i];if(void 0===s&&(s=new Float32Array(i),cu[i]=s),0!==e){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,r[o].toArray(s,a)}return s}function Rn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function Ln(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function ea(r,e){let t=uu[e];void 0===t&&(t=new Int32Array(e),uu[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function Qp(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function em(r,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Rn(t,e))return;r.uniform2fv(this.addr,e),Ln(t,e)}}function tm(r,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(void 0!==e.r)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Rn(t,e))return;r.uniform3fv(this.addr,e),Ln(t,e)}}function nm(r,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Rn(t,e))return;r.uniform4fv(this.addr,e),Ln(t,e)}}function im(r,e){const t=this.cache,n=e.elements;if(void 0===n){if(Rn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Ln(t,e)}else{if(Rn(t,n))return;fu.set(n),r.uniformMatrix2fv(this.addr,!1,fu),Ln(t,n)}}function sm(r,e){const t=this.cache,n=e.elements;if(void 0===n){if(Rn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Ln(t,e)}else{if(Rn(t,n))return;du.set(n),r.uniformMatrix3fv(this.addr,!1,du),Ln(t,n)}}function rm(r,e){const t=this.cache,n=e.elements;if(void 0===n){if(Rn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Ln(t,e)}else{if(Rn(t,n))return;hu.set(n),r.uniformMatrix4fv(this.addr,!1,hu),Ln(t,n)}}function om(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function am(r,e){const t=this.cache;Rn(t,e)||(r.uniform2iv(this.addr,e),Ln(t,e))}function lm(r,e){const t=this.cache;Rn(t,e)||(r.uniform3iv(this.addr,e),Ln(t,e))}function cm(r,e){const t=this.cache;Rn(t,e)||(r.uniform4iv(this.addr,e),Ln(t,e))}function um(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function hm(r,e){const t=this.cache;Rn(t,e)||(r.uniform2uiv(this.addr,e),Ln(t,e))}function dm(r,e){const t=this.cache;Rn(t,e)||(r.uniform3uiv(this.addr,e),Ln(t,e))}function fm(r,e){const t=this.cache;Rn(t,e)||(r.uniform4uiv(this.addr,e),Ln(t,e))}function pm(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||ru,i)}function mm(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||au,i)}function gm(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||lu,i)}function vm(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||ou,i)}function xm(r,e){r.uniform1fv(this.addr,e)}function _m(r,e){const t=tr(e,this.size,2);r.uniform2fv(this.addr,t)}function bm(r,e){const t=tr(e,this.size,3);r.uniform3fv(this.addr,t)}function Mm(r,e){const t=tr(e,this.size,4);r.uniform4fv(this.addr,t)}function wm(r,e){const t=tr(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function Sm(r,e){const t=tr(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function Em(r,e){const t=tr(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function Tm(r,e){r.uniform1iv(this.addr,e)}function Am(r,e){r.uniform2iv(this.addr,e)}function Cm(r,e){r.uniform3iv(this.addr,e)}function Pm(r,e){r.uniform4iv(this.addr,e)}function Rm(r,e){r.uniform1uiv(this.addr,e)}function Lm(r,e){r.uniform2uiv(this.addr,e)}function Im(r,e){r.uniform3uiv(this.addr,e)}function Dm(r,e){r.uniform4uiv(this.addr,e)}function Om(r,e,t){const n=e.length,i=ea(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2D(e[s]||ru,i[s])}function Nm(r,e,t){const n=e.length,i=ea(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture3D(e[s]||au,i[s])}function Fm(r,e,t){const n=e.length,i=ea(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTextureCube(e[s]||lu,i[s])}function Bm(r,e,t){const n=e.length,i=ea(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2DArray(e[s]||ou,i[s])}function zm(r,e,t){this.id=r,this.addr=t,this.cache=[],this.setValue=function ym(r){switch(r){case 5126:return Qp;case 35664:return em;case 35665:return tm;case 35666:return nm;case 35674:return im;case 35675:return sm;case 35676:return rm;case 5124:case 35670:return om;case 35667:case 35671:return am;case 35668:case 35672:return lm;case 35669:case 35673:return cm;case 5125:return um;case 36294:return hm;case 36295:return dm;case 36296:return fm;case 35678:case 36198:case 36298:case 36306:case 35682:return pm;case 35679:case 36299:case 36307:return mm;case 35680:case 36300:case 36308:case 36293:return gm;case 36289:case 36303:case 36311:case 36292:return vm}}(e.type)}function Hm(r,e,t){this.id=r,this.addr=t,this.cache=[],this.size=e.size,this.setValue=function Um(r){switch(r){case 5126:return xm;case 35664:return _m;case 35665:return bm;case 35666:return Mm;case 35674:return wm;case 35675:return Sm;case 35676:return Em;case 5124:case 35670:return Tm;case 35667:case 35671:return Am;case 35668:case 35672:return Cm;case 35669:case 35673:return Pm;case 5125:return Rm;case 36294:return Lm;case 36295:return Im;case 36296:return Dm;case 35678:case 36198:case 36298:case 36306:case 35682:return Om;case 35679:case 36299:case 36307:return Nm;case 35680:case 36300:case 36308:case 36293:return Fm;case 36289:case 36303:case 36311:case 36292:return Bm}}(e.type)}function pu(r){this.id=r,this.seq=[],this.map={}}pu.prototype.setValue=function(r,e,t){const n=this.seq;for(let i=0,s=n.length;i!==s;++i){const o=n[i];o.setValue(r,e[o.id],t)}};const Dl=/(\w+)(\])?(\[|\.)?/g;function mu(r,e){r.seq.push(e),r.map[e.id]=e}function Gm(r,e,t){const n=r.name,i=n.length;for(Dl.lastIndex=0;;){const s=Dl.exec(n),o=Dl.lastIndex;let a=s[1];const c=s[3];if("]"===s[2]&&(a|=0),void 0===c||"["===c&&o+2===i){mu(t,void 0===c?new zm(a,r,e):new Hm(a,r,e));break}{let h=t.map[a];void 0===h&&(h=new pu(a),mu(t,h)),t=h}}}function ki(r,e){this.seq=[],this.map={};const t=r.getProgramParameter(e,35718);for(let n=0;n<t;++n){const i=r.getActiveUniform(e,n);Gm(i,r.getUniformLocation(e,i.name),this)}}function gu(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}ki.prototype.setValue=function(r,e,t,n){const i=this.map[e];void 0!==i&&i.setValue(r,t,n)},ki.prototype.setOptional=function(r,e,t){const n=e[t];void 0!==n&&this.setValue(r,t,n)},ki.upload=function(r,e,t,n){for(let i=0,s=e.length;i!==s;++i){const o=e[i],a=t[o.id];!1!==a.needsUpdate&&o.setValue(r,a.value,n)}},ki.seqWithValue=function(r,e){const t=[];for(let n=0,i=r.length;n!==i;++n){const s=r[n];s.id in e&&t.push(s)}return t};let Wm=0;function vu(r,e,t){const n=r.getShaderParameter(e,35713),i=r.getShaderInfoLog(e).trim();if(n&&""===i)return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const o=parseInt(s[0]);return t.toUpperCase()+"\n\n"+i+"\n\n"+function km(r,e){const t=r.split("\n"),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=i;o<s;o++)n.push(o+1+": "+t[o]);return n.join("\n")}(r.getShaderSource(e),o)}return i}function jm(r,e){const t=function Vm(r){switch(r){case pi:return["Linear","( value )"];case Xt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function Xm(r,e){let t;switch(e){case 1:t="Linear";break;case 2:t="Reinhard";break;case 3:t="OptimizedCineon";break;case gr:t="ACESFilmic";break;case 5:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Ir(r){return""!==r}function yu(r,e){return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function xu(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Jm=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ol(r){return r.replace(Jm,Zm)}function Zm(r,e){const t=Ct[e];if(void 0===t)throw new Error("Can not resolve #include <"+e+">");return Ol(t)}const qm=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Qm=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function _u(r){return r.replace(Qm,bu).replace(qm,eg)}function eg(r,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),bu(0,e,t,n)}function bu(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Mu(r){let e="precision "+r.precision+" float;\nprecision "+r.precision+" int;";return"highp"===r.precision?e+="\n#define HIGH_PRECISION":"mediump"===r.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===r.precision&&(e+="\n#define LOW_PRECISION"),e}function og(r,e,t,n){const i=r.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=function tg(r){let e="SHADOWMAP_TYPE_BASIC";return 1===r.shadowMapType?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===Ie?e="SHADOWMAP_TYPE_PCF_SOFT":3===r.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(t),c=function ng(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case Gn:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:e="ENVMAP_TYPE_CUBE_UV"}return e}(t),u=function ig(r){let e="ENVMAP_MODE_REFLECTION";return r.envMap&&302===r.envMapMode&&(e="ENVMAP_MODE_REFRACTION"),e}(t),h=function sg(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(t),d=function rg(r){const e=r.envMapCubeUVHeight;if(null===e)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:n,maxMip:t}}(t),f=t.isWebGL2?"":function $m(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||"physical"===r.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ir).join("\n")}(t),g=function Km(r){const e=[];for(const t in r){const n=r[t];!1!==n&&e.push("#define "+t+" "+n)}return e.join("\n")}(s),p=i.createProgram();let m,v,y=t.glslVersion?"#version "+t.glslVersion+"\n":"";t.isRawShaderMaterial?(m=[g].filter(Ir).join("\n"),m.length>0&&(m+="\n"),v=[f,g].filter(Ir).join("\n"),v.length>0&&(v+="\n")):(m=[Mu(t),"#define SHADER_NAME "+t.shaderName,g,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&!1===t.flatShading?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ir).join("\n"),v=[f,Mu(t),"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==qt?"#define TONE_MAPPING":"",t.toneMapping!==qt?Ct.tonemapping_pars_fragment:"",t.toneMapping!==qt?Xm("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ct.encodings_pars_fragment,jm("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"","\n"].filter(Ir).join("\n")),o=Ol(o),o=yu(o,t),o=xu(o,t),a=Ol(a),a=yu(a,t),a=xu(a,t),o=_u(o),a=_u(a),t.isWebGL2&&!0!==t.isRawShaderMaterial&&(y="#version 300 es\n",m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+m,v=["#define varying in","300 es"===t.glslVersion?"":"layout(location = 0) out highp vec4 pc_fragColor;","300 es"===t.glslVersion?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const x=y+v+a,A=gu(i,35633,y+m+o),R=gu(i,35632,x);if(i.attachShader(p,A),i.attachShader(p,R),void 0!==t.index0AttributeName?i.bindAttribLocation(p,0,t.index0AttributeName):!0===t.morphTargets&&i.bindAttribLocation(p,0,"position"),i.linkProgram(p),r.debug.checkShaderErrors){const D=i.getProgramInfoLog(p).trim(),W=i.getShaderInfoLog(A).trim(),j=i.getShaderInfoLog(R).trim();let ge=!0,Oe=!0;if(!1===i.getProgramParameter(p,35714)){ge=!1;const V=vu(i,A,"vertex"),le=vu(i,R,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(p,35715)+"\n\nProgram Info Log: "+D+"\n"+V+"\n"+le)}else""!==D?console.warn("THREE.WebGLProgram: Program Info Log:",D):(""===W||""===j)&&(Oe=!1);Oe&&(this.diagnostics={runnable:ge,programLog:D,vertexShader:{log:W,prefix:m},fragmentShader:{log:j,prefix:v}})}let U,b;return i.deleteShader(A),i.deleteShader(R),this.getUniforms=function(){return void 0===U&&(U=new ki(i,p)),U},this.getAttributes=function(){return void 0===b&&(b=function Ym(r,e){const t={},n=r.getProgramParameter(e,35721);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),o=s.name;let a=1;35674===s.type&&(a=2),35675===s.type&&(a=3),35676===s.type&&(a=4),t[o]={type:s.type,location:r.getAttribLocation(e,o),locationSize:a}}return t}(i,p)),b},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(p),this.program=void 0},this.name=t.shaderName,this.id=Wm++,this.cacheKey=e,this.usedTimes=1,this.program=p,this.vertexShader=A,this.fragmentShader=R,this}let ag=0;class lg{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const n=e.fragmentShader,i=this._getShaderStage(e.vertexShader),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return!1===o.has(i)&&(o.add(i),i.usedTimes++),!1===o.has(s)&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,0===n.usedTimes&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return!1===t.has(e)&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(!1===t.has(e)){const n=new cg(e);t.set(e,n)}return t.get(e)}}class cg{constructor(e){this.id=ag++,this.code=e,this.usedTimes=0}}function ug(r,e,t,n,i,s,o){const a=new zo,l=new lg,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function p(b,D,W,j,ge){const Oe=j.fog,V=ge.geometry,q=(b.isMeshStandardMaterial?t:e).get(b.envMap||(b.isMeshStandardMaterial?j.environment:null)),ve=q&&306===q.mapping?q.image.height:null,_e=g[b.type];null!==b.precision&&(f=i.getMaxPrecision(b.precision),f!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",f,"instead."));const ne=V.morphAttributes.position||V.morphAttributes.normal||V.morphAttributes.color,ue=void 0!==ne?ne.length:0;let Me,$e,ct,ht,Be=0;if(void 0!==V.morphAttributes.position&&(Be=1),void 0!==V.morphAttributes.normal&&(Be=2),void 0!==V.morphAttributes.color&&(Be=3),_e){const ke=ii[_e];Me=ke.vertexShader,$e=ke.fragmentShader}else Me=b.vertexShader,$e=b.fragmentShader,l.update(b),ct=l.getVertexShaderID(b),ht=l.getFragmentShaderID(b);const de=r.getRenderTarget(),xt=b.clearcoat>0;return{isWebGL2:u,shaderID:_e,shaderName:b.type,vertexShader:Me,fragmentShader:$e,defines:b.defines,customVertexShaderID:ct,customFragmentShaderID:ht,isRawShaderMaterial:!0===b.isRawShaderMaterial,glslVersion:b.glslVersion,precision:f,instancing:!0===ge.isInstancedMesh,instancingColor:!0===ge.isInstancedMesh&&null!==ge.instanceColor,supportsVertexTextures:d,outputEncoding:null===de?r.outputEncoding:!0===de.isXRRenderTarget?de.texture.encoding:pi,map:!!b.map,matcap:!!b.matcap,envMap:!!q,envMapMode:q&&q.mapping,envMapCubeUVHeight:ve,lightMap:!!b.lightMap,aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,objectSpaceNormalMap:1===b.normalMapType,tangentSpaceNormalMap:b.normalMapType===as,decodeVideoTexture:!!b.map&&!0===b.map.isVideoTexture&&b.map.encoding===Xt,clearcoat:xt,clearcoatMap:xt&&!!b.clearcoatMap,clearcoatRoughnessMap:xt&&!!b.clearcoatRoughnessMap,clearcoatNormalMap:xt&&!!b.clearcoatNormalMap,displacementMap:!!b.displacementMap,roughnessMap:!!b.roughnessMap,metalnessMap:!!b.metalnessMap,specularMap:!!b.specularMap,specularIntensityMap:!!b.specularIntensityMap,specularColorMap:!!b.specularColorMap,opaque:!1===b.transparent&&1===b.blending,alphaMap:!!b.alphaMap,alphaTest:b.alphaTest>0,gradientMap:!!b.gradientMap,sheen:b.sheen>0,sheenColorMap:!!b.sheenColorMap,sheenRoughnessMap:!!b.sheenRoughnessMap,transmission:b.transmission>0,transmissionMap:!!b.transmissionMap,thicknessMap:!!b.thicknessMap,combine:b.combine,vertexTangents:!!b.normalMap&&!!V.attributes.tangent,vertexColors:b.vertexColors,vertexAlphas:!0===b.vertexColors&&!!V.attributes.color&&4===V.attributes.color.itemSize,vertexUvs:!!(b.map||b.bumpMap||b.normalMap||b.specularMap||b.alphaMap||b.emissiveMap||b.roughnessMap||b.metalnessMap||b.clearcoatMap||b.clearcoatRoughnessMap||b.clearcoatNormalMap||b.displacementMap||b.transmissionMap||b.thicknessMap||b.specularIntensityMap||b.specularColorMap||b.sheenColorMap||b.sheenRoughnessMap),uvsVertexOnly:!(b.map||b.bumpMap||b.normalMap||b.specularMap||b.alphaMap||b.emissiveMap||b.roughnessMap||b.metalnessMap||b.clearcoatNormalMap||b.transmission>0||b.transmissionMap||b.thicknessMap||b.specularIntensityMap||b.specularColorMap||b.sheen>0||b.sheenColorMap||b.sheenRoughnessMap||!b.displacementMap),fog:!!Oe,useFog:!0===b.fog,fogExp2:Oe&&Oe.isFogExp2,flatShading:!!b.flatShading,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:h,skinning:!0===ge.isSkinnedMesh,morphTargets:void 0!==V.morphAttributes.position,morphNormals:void 0!==V.morphAttributes.normal,morphColors:void 0!==V.morphAttributes.color,morphTargetsCount:ue,morphTextureStride:Be,numDirLights:D.directional.length,numPointLights:D.point.length,numSpotLights:D.spot.length,numRectAreaLights:D.rectArea.length,numHemiLights:D.hemi.length,numDirLightShadows:D.directionalShadowMap.length,numPointLightShadows:D.pointShadowMap.length,numSpotLightShadows:D.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:b.dithering,shadowMapEnabled:r.shadowMap.enabled&&W.length>0,shadowMapType:r.shadowMap.type,toneMapping:b.toneMapped?r.toneMapping:qt,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===Se,flipSided:b.side===ce,useDepthPacking:!!b.depthPacking,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:b.extensions&&b.extensions.derivatives,extensionFragDepth:b.extensions&&b.extensions.fragDepth,extensionDrawBuffers:b.extensions&&b.extensions.drawBuffers,extensionShaderTextureLOD:b.extensions&&b.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}},getProgramCacheKey:function m(b){const D=[];if(b.shaderID?D.push(b.shaderID):(D.push(b.customVertexShaderID),D.push(b.customFragmentShaderID)),void 0!==b.defines)for(const W in b.defines)D.push(W),D.push(b.defines[W]);return!1===b.isRawShaderMaterial&&(function v(b,D){b.push(D.precision),b.push(D.outputEncoding),b.push(D.envMapMode),b.push(D.envMapCubeUVHeight),b.push(D.combine),b.push(D.vertexUvs),b.push(D.fogExp2),b.push(D.sizeAttenuation),b.push(D.morphTargetsCount),b.push(D.morphAttributeCount),b.push(D.numDirLights),b.push(D.numPointLights),b.push(D.numSpotLights),b.push(D.numHemiLights),b.push(D.numRectAreaLights),b.push(D.numDirLightShadows),b.push(D.numPointLightShadows),b.push(D.numSpotLightShadows),b.push(D.shadowMapType),b.push(D.toneMapping),b.push(D.numClippingPlanes),b.push(D.numClipIntersection),b.push(D.depthPacking)}(D,b),function y(b,D){a.disableAll(),D.isWebGL2&&a.enable(0),D.supportsVertexTextures&&a.enable(1),D.instancing&&a.enable(2),D.instancingColor&&a.enable(3),D.map&&a.enable(4),D.matcap&&a.enable(5),D.envMap&&a.enable(6),D.lightMap&&a.enable(7),D.aoMap&&a.enable(8),D.emissiveMap&&a.enable(9),D.bumpMap&&a.enable(10),D.normalMap&&a.enable(11),D.objectSpaceNormalMap&&a.enable(12),D.tangentSpaceNormalMap&&a.enable(13),D.clearcoat&&a.enable(14),D.clearcoatMap&&a.enable(15),D.clearcoatRoughnessMap&&a.enable(16),D.clearcoatNormalMap&&a.enable(17),D.displacementMap&&a.enable(18),D.specularMap&&a.enable(19),D.roughnessMap&&a.enable(20),D.metalnessMap&&a.enable(21),D.gradientMap&&a.enable(22),D.alphaMap&&a.enable(23),D.alphaTest&&a.enable(24),D.vertexColors&&a.enable(25),D.vertexAlphas&&a.enable(26),D.vertexUvs&&a.enable(27),D.vertexTangents&&a.enable(28),D.uvsVertexOnly&&a.enable(29),D.fog&&a.enable(30),b.push(a.mask),a.disableAll(),D.useFog&&a.enable(0),D.flatShading&&a.enable(1),D.logarithmicDepthBuffer&&a.enable(2),D.skinning&&a.enable(3),D.morphTargets&&a.enable(4),D.morphNormals&&a.enable(5),D.morphColors&&a.enable(6),D.premultipliedAlpha&&a.enable(7),D.shadowMapEnabled&&a.enable(8),D.physicallyCorrectLights&&a.enable(9),D.doubleSided&&a.enable(10),D.flipSided&&a.enable(11),D.useDepthPacking&&a.enable(12),D.dithering&&a.enable(13),D.specularIntensityMap&&a.enable(14),D.specularColorMap&&a.enable(15),D.transmission&&a.enable(16),D.transmissionMap&&a.enable(17),D.thicknessMap&&a.enable(18),D.sheen&&a.enable(19),D.sheenColorMap&&a.enable(20),D.sheenRoughnessMap&&a.enable(21),D.decodeVideoTexture&&a.enable(22),D.opaque&&a.enable(23),b.push(a.mask)}(D,b),D.push(r.outputEncoding)),D.push(b.customProgramCacheKey),D.join()},getUniforms:function M(b){const D=g[b.type];let W;return W=D?Jc.clone(ii[D].uniforms):b.uniforms,W},acquireProgram:function x(b,D){let W;for(let j=0,ge=c.length;j<ge;j++){const Oe=c[j];if(Oe.cacheKey===D){W=Oe,++W.usedTimes;break}}return void 0===W&&(W=new og(r,D,b,s),c.push(W)),W},releaseProgram:function A(b){if(0==--b.usedTimes){const D=c.indexOf(b);c[D]=c[c.length-1],c.pop(),b.destroy()}},releaseShaderCache:function R(b){l.remove(b)},programs:c,dispose:function U(){l.dispose()}}}function hg(){let r=new WeakMap;return{get:function e(s){let o=r.get(s);return void 0===o&&(o={},r.set(s,o)),o},remove:function t(s){r.delete(s)},update:function n(s,o,a){r.get(s)[o]=a},dispose:function i(){r=new WeakMap}}}function dg(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function wu(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Su(){const r=[];let e=0;const t=[],n=[],i=[];function o(h,d,f,g,p,m){let v=r[e];return void 0===v?(v={id:h.id,object:h,geometry:d,material:f,groupOrder:g,renderOrder:h.renderOrder,z:p,group:m},r[e]=v):(v.id=h.id,v.object=h,v.geometry=d,v.material=f,v.groupOrder=g,v.renderOrder=h.renderOrder,v.z=p,v.group=m),e++,v}return{opaque:t,transmissive:n,transparent:i,init:function s(){e=0,t.length=0,n.length=0,i.length=0},push:function a(h,d,f,g,p,m){const v=o(h,d,f,g,p,m);f.transmission>0?n.push(v):!0===f.transparent?i.push(v):t.push(v)},unshift:function l(h,d,f,g,p,m){const v=o(h,d,f,g,p,m);f.transmission>0?n.unshift(v):!0===f.transparent?i.unshift(v):t.unshift(v)},finish:function u(){for(let h=e,d=r.length;h<d;h++){const f=r[h];if(null===f.id)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}},sort:function c(h,d){t.length>1&&t.sort(h||dg),n.length>1&&n.sort(d||wu),i.length>1&&i.sort(d||wu)}}}function fg(){let r=new WeakMap;return{get:function e(n,i){let s;return!1===r.has(n)?(s=new Su,r.set(n,[s])):i>=r.get(n).length?(s=new Su,r.get(n).push(s)):s=r.get(n)[i],s},dispose:function t(){r=new WeakMap}}}function pg(){const r={};return{get:function(e){if(void 0!==r[e.id])return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new T,color:new Ze};break;case"SpotLight":t={position:new T,direction:new T,color:new Ze,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new T,color:new Ze,distance:0,decay:0};break;case"HemisphereLight":t={direction:new T,skyColor:new Ze,groundColor:new Ze};break;case"RectAreaLight":t={color:new Ze,position:new T,halfWidth:new T,halfHeight:new T}}return r[e.id]=t,t}}}let gg=0;function vg(r,e){return(e.castShadow?1:0)-(r.castShadow?1:0)}function yg(r,e){const t=new pg,n=function mg(){const r={};return{get:function(e){if(void 0!==r[e.id])return r[e.id];let t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pe};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pe,shadowCameraNear:1,shadowCameraFar:1e3}}return r[e.id]=t,t}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)i.probe.push(new T);const s=new T,o=new ot,a=new ot;return{setup:function l(u,h){let d=0,f=0,g=0;for(let D=0;D<9;D++)i.probe[D].set(0,0,0);let p=0,m=0,v=0,y=0,M=0,x=0,A=0,R=0;u.sort(vg);const U=!0!==h?Math.PI:1;for(let D=0,W=u.length;D<W;D++){const j=u[D],ge=j.color,Oe=j.intensity,V=j.distance,le=j.shadow&&j.shadow.map?j.shadow.map.texture:null;if(j.isAmbientLight)d+=ge.r*Oe*U,f+=ge.g*Oe*U,g+=ge.b*Oe*U;else if(j.isLightProbe)for(let q=0;q<9;q++)i.probe[q].addScaledVector(j.sh.coefficients[q],Oe);else if(j.isDirectionalLight){const q=t.get(j);if(q.color.copy(j.color).multiplyScalar(j.intensity*U),j.castShadow){const ve=j.shadow,_e=n.get(j);_e.shadowBias=ve.bias,_e.shadowNormalBias=ve.normalBias,_e.shadowRadius=ve.radius,_e.shadowMapSize=ve.mapSize,i.directionalShadow[p]=_e,i.directionalShadowMap[p]=le,i.directionalShadowMatrix[p]=j.shadow.matrix,x++}i.directional[p]=q,p++}else if(j.isSpotLight){const q=t.get(j);if(q.position.setFromMatrixPosition(j.matrixWorld),q.color.copy(ge).multiplyScalar(Oe*U),q.distance=V,q.coneCos=Math.cos(j.angle),q.penumbraCos=Math.cos(j.angle*(1-j.penumbra)),q.decay=j.decay,j.castShadow){const ve=j.shadow,_e=n.get(j);_e.shadowBias=ve.bias,_e.shadowNormalBias=ve.normalBias,_e.shadowRadius=ve.radius,_e.shadowMapSize=ve.mapSize,i.spotShadow[v]=_e,i.spotShadowMap[v]=le,i.spotShadowMatrix[v]=j.shadow.matrix,R++}i.spot[v]=q,v++}else if(j.isRectAreaLight){const q=t.get(j);q.color.copy(ge).multiplyScalar(Oe),q.halfWidth.set(.5*j.width,0,0),q.halfHeight.set(0,.5*j.height,0),i.rectArea[y]=q,y++}else if(j.isPointLight){const q=t.get(j);if(q.color.copy(j.color).multiplyScalar(j.intensity*U),q.distance=j.distance,q.decay=j.decay,j.castShadow){const ve=j.shadow,_e=n.get(j);_e.shadowBias=ve.bias,_e.shadowNormalBias=ve.normalBias,_e.shadowRadius=ve.radius,_e.shadowMapSize=ve.mapSize,_e.shadowCameraNear=ve.camera.near,_e.shadowCameraFar=ve.camera.far,i.pointShadow[m]=_e,i.pointShadowMap[m]=le,i.pointShadowMatrix[m]=j.shadow.matrix,A++}i.point[m]=q,m++}else if(j.isHemisphereLight){const q=t.get(j);q.skyColor.copy(j.color).multiplyScalar(Oe*U),q.groundColor.copy(j.groundColor).multiplyScalar(Oe*U),i.hemi[M]=q,M++}}y>0&&(e.isWebGL2||!0===r.has("OES_texture_float_linear")?(i.rectAreaLTC1=je.LTC_FLOAT_1,i.rectAreaLTC2=je.LTC_FLOAT_2):!0===r.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=je.LTC_HALF_1,i.rectAreaLTC2=je.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=f,i.ambient[2]=g;const b=i.hash;(b.directionalLength!==p||b.pointLength!==m||b.spotLength!==v||b.rectAreaLength!==y||b.hemiLength!==M||b.numDirectionalShadows!==x||b.numPointShadows!==A||b.numSpotShadows!==R)&&(i.directional.length=p,i.spot.length=v,i.rectArea.length=y,i.point.length=m,i.hemi.length=M,i.directionalShadow.length=x,i.directionalShadowMap.length=x,i.pointShadow.length=A,i.pointShadowMap.length=A,i.spotShadow.length=R,i.spotShadowMap.length=R,i.directionalShadowMatrix.length=x,i.pointShadowMatrix.length=A,i.spotShadowMatrix.length=R,b.directionalLength=p,b.pointLength=m,b.spotLength=v,b.rectAreaLength=y,b.hemiLength=M,b.numDirectionalShadows=x,b.numPointShadows=A,b.numSpotShadows=R,i.version=gg++)},setupView:function c(u,h){let d=0,f=0,g=0,p=0,m=0;const v=h.matrixWorldInverse;for(let y=0,M=u.length;y<M;y++){const x=u[y];if(x.isDirectionalLight){const A=i.directional[d];A.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),A.direction.sub(s),A.direction.transformDirection(v),d++}else if(x.isSpotLight){const A=i.spot[g];A.position.setFromMatrixPosition(x.matrixWorld),A.position.applyMatrix4(v),A.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),A.direction.sub(s),A.direction.transformDirection(v),g++}else if(x.isRectAreaLight){const A=i.rectArea[p];A.position.setFromMatrixPosition(x.matrixWorld),A.position.applyMatrix4(v),a.identity(),o.copy(x.matrixWorld),o.premultiply(v),a.extractRotation(o),A.halfWidth.set(.5*x.width,0,0),A.halfHeight.set(0,.5*x.height,0),A.halfWidth.applyMatrix4(a),A.halfHeight.applyMatrix4(a),p++}else if(x.isPointLight){const A=i.point[f];A.position.setFromMatrixPosition(x.matrixWorld),A.position.applyMatrix4(v),f++}else if(x.isHemisphereLight){const A=i.hemi[m];A.direction.setFromMatrixPosition(x.matrixWorld),A.direction.transformDirection(v),m++}}},state:i}}function Eu(r,e){const t=new yg(r,e),n=[],i=[];return{init:function s(){n.length=0,i.length=0},state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:function l(h){t.setup(n,h)},setupLightsView:function c(h){t.setupView(n,h)},pushLight:function o(h){n.push(h)},pushShadow:function a(h){i.push(h)}}}function xg(r,e){let t=new WeakMap;return{get:function n(s,o=0){let a;return!1===t.has(s)?(a=new Eu(r,e),t.set(s,[a])):o>=t.get(s).length?(a=new Eu(r,e),t.get(s).push(a)):a=t.get(s)[o],a},dispose:function i(){t=new WeakMap}}}class ta extends un{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=Rc,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}ta.prototype.isMeshDepthMaterial=!0;class na extends un{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new T,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function Tu(r,e,t){let n=new qo;const i=new pe,s=new pe,o=new Bt,a=new ta({depthPacking:Lc}),l=new na,c={},u=t.maxTextureSize,h={0:ce,1:tt,2:Se},d=new Vn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new pe},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const g=new ft;g.setAttribute("position",new kt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new yn(g,d),m=this;function v(x,A){const R=e.update(p);d.defines.VSM_SAMPLES!==x.blurSamples&&(d.defines.VSM_SAMPLES=x.blurSamples,f.defines.VSM_SAMPLES=x.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),d.uniforms.shadow_pass.value=x.map.texture,d.uniforms.resolution.value=x.mapSize,d.uniforms.radius.value=x.radius,r.setRenderTarget(x.mapPass),r.clear(),r.renderBufferDirect(A,null,R,d,p,null),f.uniforms.shadow_pass.value=x.mapPass.texture,f.uniforms.resolution.value=x.mapSize,f.uniforms.radius.value=x.radius,r.setRenderTarget(x.map),r.clear(),r.renderBufferDirect(A,null,R,f,p,null)}function y(x,A,R,U,b,D){let W=null;const j=!0===R.isPointLight?x.customDistanceMaterial:x.customDepthMaterial;if(W=void 0!==j?j:!0===R.isPointLight?l:a,r.localClippingEnabled&&!0===A.clipShadows&&0!==A.clippingPlanes.length||A.displacementMap&&0!==A.displacementScale||A.alphaMap&&A.alphaTest>0){const ge=W.uuid,Oe=A.uuid;let V=c[ge];void 0===V&&(V={},c[ge]=V);let le=V[Oe];void 0===le&&(le=W.clone(),V[Oe]=le),W=le}return W.visible=A.visible,W.wireframe=A.wireframe,W.side=3===D?null!==A.shadowSide?A.shadowSide:A.side:null!==A.shadowSide?A.shadowSide:h[A.side],W.alphaMap=A.alphaMap,W.alphaTest=A.alphaTest,W.clipShadows=A.clipShadows,W.clippingPlanes=A.clippingPlanes,W.clipIntersection=A.clipIntersection,W.displacementMap=A.displacementMap,W.displacementScale=A.displacementScale,W.displacementBias=A.displacementBias,W.wireframeLinewidth=A.wireframeLinewidth,W.linewidth=A.linewidth,!0===R.isPointLight&&!0===W.isMeshDistanceMaterial&&(W.referencePosition.setFromMatrixPosition(R.matrixWorld),W.nearDistance=U,W.farDistance=b),W}function M(x,A,R,U,b){if(!1===x.visible)return;if(x.layers.test(A.layers)&&(x.isMesh||x.isLine||x.isPoints)&&(x.castShadow||x.receiveShadow&&3===b)&&(!x.frustumCulled||n.intersectsObject(x))){x.modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,x.matrixWorld);const j=e.update(x),ge=x.material;if(Array.isArray(ge)){const Oe=j.groups;for(let V=0,le=Oe.length;V<le;V++){const q=Oe[V],ve=ge[q.materialIndex];if(ve&&ve.visible){const _e=y(x,ve,U,R.near,R.far,b);r.renderBufferDirect(R,null,j,_e,x,q)}}}else if(ge.visible){const Oe=y(x,ge,U,R.near,R.far,b);r.renderBufferDirect(R,null,j,Oe,x,null)}}const W=x.children;for(let j=0,ge=W.length;j<ge;j++)M(W[j],A,R,U,b)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(x,A,R){if(!1===m.enabled||!1===m.autoUpdate&&!1===m.needsUpdate||0===x.length)return;const U=r.getRenderTarget(),b=r.getActiveCubeFace(),D=r.getActiveMipmapLevel(),W=r.state;W.setBlending(se),W.buffers.color.setClear(1,1,1,1),W.buffers.depth.setTest(!0),W.setScissorTest(!1);for(let j=0,ge=x.length;j<ge;j++){const Oe=x[j],V=Oe.shadow;if(void 0===V){console.warn("THREE.WebGLShadowMap:",Oe,"has no shadow.");continue}if(!1===V.autoUpdate&&!1===V.needsUpdate)continue;i.copy(V.mapSize);const le=V.getFrameExtents();i.multiply(le),s.copy(V.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/le.x),i.x=s.x*le.x,V.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/le.y),i.y=s.y*le.y,V.mapSize.y=s.y)),null===V.map&&!V.isPointLightShadow&&3===this.type&&(V.map=new Pn(i.x,i.y),V.map.texture.name=Oe.name+".shadowMap",V.mapPass=new Pn(i.x,i.y),V.camera.updateProjectionMatrix()),null===V.map&&(V.map=new Pn(i.x,i.y,{minFilter:nn,magFilter:nn,format:X}),V.map.texture.name=Oe.name+".shadowMap",V.camera.updateProjectionMatrix()),r.setRenderTarget(V.map),r.clear();const q=V.getViewportCount();for(let ve=0;ve<q;ve++){const _e=V.getViewport(ve);o.set(s.x*_e.x,s.y*_e.y,s.x*_e.z,s.y*_e.w),W.viewport(o),V.updateMatrices(Oe,ve),n=V.getFrustum(),M(A,R,V.camera,Oe,this.type)}!V.isPointLightShadow&&3===this.type&&v(V,R),V.needsUpdate=!1}m.needsUpdate=!1,r.setRenderTarget(U,b,D)}}function Mg(r,e,t){const n=t.isWebGL2,a=new function i(){let H=!1;const Ye=new Bt;let Xe=null;const _t=new Bt(0,0,0,0);return{setMask:function(it){Xe!==it&&!H&&(r.colorMask(it,it,it,it),Xe=it)},setLocked:function(it){H=it},setClear:function(it,vt,Ge,bt,Gt){!0===Gt&&(it*=bt,vt*=bt,Ge*=bt),Ye.set(it,vt,Ge,bt),!1===_t.equals(Ye)&&(r.clearColor(it,vt,Ge,bt),_t.copy(Ye))},reset:function(){H=!1,Xe=null,_t.set(-1,0,0,0)}}},l=new function s(){let H=!1,Ye=null,Xe=null,_t=null;return{setTest:function(it){it?ht(2929):de(2929)},setMask:function(it){Ye!==it&&!H&&(r.depthMask(it),Ye=it)},setFunc:function(it){if(Xe!==it){if(it)switch(it){case 0:r.depthFunc(512);break;case 1:r.depthFunc(519);break;case 2:r.depthFunc(513);break;case 3:default:r.depthFunc(515);break;case 4:r.depthFunc(514);break;case 5:r.depthFunc(518);break;case 6:r.depthFunc(516);break;case 7:r.depthFunc(517)}else r.depthFunc(515);Xe=it}},setLocked:function(it){H=it},setClear:function(it){_t!==it&&(r.clearDepth(it),_t=it)},reset:function(){H=!1,Ye=null,Xe=null,_t=null}}},c=new function o(){let H=!1,Ye=null,Xe=null,_t=null,it=null,vt=null,Ge=null,bt=null,Gt=null;return{setTest:function(Dt){H||(Dt?ht(2960):de(2960))},setMask:function(Dt){Ye!==Dt&&!H&&(r.stencilMask(Dt),Ye=Dt)},setFunc:function(Dt,ai,li){(Xe!==Dt||_t!==ai||it!==li)&&(r.stencilFunc(Dt,ai,li),Xe=Dt,_t=ai,it=li)},setOp:function(Dt,ai,li){(vt!==Dt||Ge!==ai||bt!==li)&&(r.stencilOp(Dt,ai,li),vt=Dt,Ge=ai,bt=li)},setLocked:function(Dt){H=Dt},setClear:function(Dt){Gt!==Dt&&(r.clearStencil(Dt),Gt=Dt)},reset:function(){H=!1,Ye=null,Xe=null,_t=null,it=null,vt=null,Ge=null,bt=null,Gt=null}}};let u={},h={},d=new WeakMap,f=[],g=null,p=!1,m=null,v=null,y=null,M=null,x=null,A=null,R=null,U=!1,b=null,D=null,W=null,j=null,ge=null;const Oe=r.getParameter(35661);let V=!1,le=0;const q=r.getParameter(7938);-1!==q.indexOf("WebGL")?(le=parseFloat(/^WebGL (\d)/.exec(q)[1]),V=le>=1):-1!==q.indexOf("OpenGL ES")&&(le=parseFloat(/^OpenGL ES (\d)/.exec(q)[1]),V=le>=2);let ve=null,_e={};const ne=r.getParameter(3088),ue=r.getParameter(2978),Be=(new Bt).fromArray(ne),Me=(new Bt).fromArray(ue);function $e(H,Ye,Xe){const _t=new Uint8Array(4),it=r.createTexture();r.bindTexture(H,it),r.texParameteri(H,10241,9728),r.texParameteri(H,10240,9728);for(let vt=0;vt<Xe;vt++)r.texImage2D(Ye+vt,0,6408,1,1,0,6408,5121,_t);return it}const ct={};function ht(H){!0!==u[H]&&(r.enable(H),u[H]=!0)}function de(H){!1!==u[H]&&(r.disable(H),u[H]=!1)}ct[3553]=$e(3553,3553,1),ct[34067]=$e(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ht(2929),l.setFunc(3),He(!1),at(1),ht(2884),ye(se);const ke={100:32774,101:32778,102:32779};if(n)ke[103]=32775,ke[104]=32776;else{const H=e.get("EXT_blend_minmax");null!==H&&(ke[103]=H.MIN_EXT,ke[104]=H.MAX_EXT)}const It={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function ye(H,Ye,Xe,_t,it,vt,Ge,bt){if(H!==se){if(!1===p&&(ht(3042),p=!0),5===H)it=it||Ye,vt=vt||Xe,Ge=Ge||_t,(Ye!==v||it!==x)&&(r.blendEquationSeparate(ke[Ye],ke[it]),v=Ye,x=it),(Xe!==y||_t!==M||vt!==A||Ge!==R)&&(r.blendFuncSeparate(It[Xe],It[_t],It[vt],It[Ge]),y=Xe,M=_t,A=vt,R=Ge),m=H,U=null;else if(H!==m||bt!==U){if((100!==v||100!==x)&&(r.blendEquation(32774),v=100,x=100),bt)switch(H){case 1:r.blendFuncSeparate(1,771,1,771);break;case 2:r.blendFunc(1,1);break;case 3:r.blendFuncSeparate(0,769,0,1);break;case 4:r.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",H)}else switch(H){case 1:r.blendFuncSeparate(770,771,1,771);break;case 2:r.blendFunc(770,1);break;case 3:r.blendFuncSeparate(0,769,0,1);break;case 4:r.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",H)}y=null,M=null,A=null,R=null,m=H,U=bt}}else!0===p&&(de(3042),p=!1)}function He(H){b!==H&&(r.frontFace(H?2304:2305),b=H)}function at(H){0!==H?(ht(2884),H!==D&&r.cullFace(1===H?1029:2===H?1028:1032)):de(2884),D=H}function wt(H,Ye,Xe){H?(ht(32823),(j!==Ye||ge!==Xe)&&(r.polygonOffset(Ye,Xe),j=Ye,ge=Xe)):de(32823)}function dt(H){void 0===H&&(H=33984+Oe-1),ve!==H&&(r.activeTexture(H),ve=H)}return{buffers:{color:a,depth:l,stencil:c},enable:ht,disable:de,bindFramebuffer:function Ut(H,Ye){return h[H]!==Ye&&(r.bindFramebuffer(H,Ye),h[H]=Ye,n&&(36009===H&&(h[36160]=Ye),36160===H&&(h[36009]=Ye)),!0)},drawBuffers:function xt(H,Ye){let Xe=f,_t=!1;if(H)if(Xe=d.get(Ye),void 0===Xe&&(Xe=[],d.set(Ye,Xe)),H.isWebGLMultipleRenderTargets){const it=H.texture;if(Xe.length!==it.length||36064!==Xe[0]){for(let vt=0,Ge=it.length;vt<Ge;vt++)Xe[vt]=36064+vt;Xe.length=it.length,_t=!0}}else 36064!==Xe[0]&&(Xe[0]=36064,_t=!0);else 1029!==Xe[0]&&(Xe[0]=1029,_t=!0);_t&&(t.isWebGL2?r.drawBuffers(Xe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Xe))},useProgram:function Tt(H){return g!==H&&(r.useProgram(H),g=H,!0)},setBlending:ye,setMaterial:function me(H,Ye){H.side===Se?de(2884):ht(2884);let Xe=H.side===ce;Ye&&(Xe=!Xe),He(Xe),1===H.blending&&!1===H.transparent?ye(se):ye(H.blending,H.blendEquation,H.blendSrc,H.blendDst,H.blendEquationAlpha,H.blendSrcAlpha,H.blendDstAlpha,H.premultipliedAlpha),l.setFunc(H.depthFunc),l.setTest(H.depthTest),l.setMask(H.depthWrite),a.setMask(H.colorWrite);const _t=H.stencilWrite;c.setTest(_t),_t&&(c.setMask(H.stencilWriteMask),c.setFunc(H.stencilFunc,H.stencilRef,H.stencilFuncMask),c.setOp(H.stencilFail,H.stencilZFail,H.stencilZPass)),wt(H.polygonOffset,H.polygonOffsetFactor,H.polygonOffsetUnits),!0===H.alphaToCoverage?ht(32926):de(32926)},setFlipSided:He,setCullFace:at,setLineWidth:function qe(H){H!==W&&(V&&r.lineWidth(H),W=H)},setPolygonOffset:wt,setScissorTest:function gt(H){H?ht(3089):de(3089)},activeTexture:dt,bindTexture:function $t(H,Ye){null===ve&&dt();let Xe=_e[ve];void 0===Xe&&(Xe={type:void 0,texture:void 0},_e[ve]=Xe),(Xe.type!==H||Xe.texture!==Ye)&&(r.bindTexture(H,Ye||ct[H]),Xe.type=H,Xe.texture=Ye)},unbindTexture:function Vt(){const H=_e[ve];void 0!==H&&void 0!==H.type&&(r.bindTexture(H.type,null),H.type=void 0,H.texture=void 0)},compressedTexImage2D:function I(){try{r.compressedTexImage2D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}},texImage2D:function pt(){try{r.texImage2D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}},texImage3D:function oe(){try{r.texImage3D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}},texStorage2D:function Je(){try{r.texStorage2D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}},texStorage3D:function nt(){try{r.texStorage3D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}},texSubImage2D:function E(){try{r.texSubImage2D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}},texSubImage3D:function ie(){try{r.texSubImage3D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}},compressedTexSubImage2D:function Pe(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}},scissor:function Et(H){!1===Be.equals(H)&&(r.scissor(H.x,H.y,H.z,H.w),Be.copy(H))},viewport:function Pt(H){!1===Me.equals(H)&&(r.viewport(H.x,H.y,H.z,H.w),Me.copy(H))},reset:function lt(){r.disable(3042),r.disable(2884),r.disable(2929),r.disable(32823),r.disable(3089),r.disable(2960),r.disable(32926),r.blendEquation(32774),r.blendFunc(1,0),r.blendFuncSeparate(1,0,1,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(513),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(519,0,4294967295),r.stencilOp(7680,7680,7680),r.clearStencil(0),r.cullFace(1029),r.frontFace(2305),r.polygonOffset(0,0),r.activeTexture(33984),r.bindFramebuffer(36160,null),!0===n&&(r.bindFramebuffer(36009,null),r.bindFramebuffer(36008,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),u={},ve=null,_e={},h={},d=new WeakMap,f=[],g=null,p=!1,m=null,v=null,y=null,M=null,x=null,A=null,R=null,U=!1,b=null,D=null,W=null,j=null,ge=null,Be.set(0,0,r.canvas.width,r.canvas.height),Me.set(0,0,r.canvas.width,r.canvas.height),a.reset(),l.reset(),c.reset()}}}function wg(r,e,t,n,i,s,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,f=/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let p;const m=new WeakMap;let v=!1;try{v="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(I){}function y(I,E){return v?new OffscreenCanvas(I,E):Er("canvas")}function M(I,E,ie,Pe){let Je=1;if((I.width>Pe||I.height>Pe)&&(Je=Pe/Math.max(I.width,I.height)),Je<1||!0===E){if("undefined"!=typeof HTMLImageElement&&I instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&I instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&I instanceof ImageBitmap){const nt=E?Co:Math.floor,pt=nt(Je*I.width),oe=nt(Je*I.height);void 0===p&&(p=y(pt,oe));const Et=ie?y(pt,oe):p;return Et.width=pt,Et.height=oe,Et.getContext("2d").drawImage(I,0,0,pt,oe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+I.width+"x"+I.height+") to ("+pt+"x"+oe+")."),Et}return"data"in I&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+I.width+"x"+I.height+")."),I}return I}function x(I){return rl(I.width)&&rl(I.height)}function R(I,E){return I.generateMipmaps&&E&&I.minFilter!==nn&&I.minFilter!==Qt}function U(I){r.generateMipmap(I)}function b(I,E,ie,Pe,Je=!1){if(!1===a)return E;if(null!==I){if(void 0!==r[I])return r[I];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+I+"'")}let nt=E;return 6403===E&&(5126===ie&&(nt=33326),5131===ie&&(nt=33325),5121===ie&&(nt=33321)),33319===E&&(5126===ie&&(nt=33328),5131===ie&&(nt=33327),5121===ie&&(nt=33323)),6408===E&&(5126===ie&&(nt=34836),5131===ie&&(nt=34842),5121===ie&&(nt=Pe===Xt&&!1===Je?35907:32856),32819===ie&&(nt=32854),32820===ie&&(nt=32855)),(33325===nt||33326===nt||33327===nt||33328===nt||34842===nt||34836===nt)&&e.get("EXT_color_buffer_float"),nt}function D(I,E,ie){return!0===R(I,ie)||I.isFramebufferTexture&&I.minFilter!==nn&&I.minFilter!==Qt?Math.log2(Math.max(E.width,E.height))+1:void 0!==I.mipmaps&&I.mipmaps.length>0?I.mipmaps.length:I.isCompressedTexture&&Array.isArray(I.image)?E.mipmaps.length:1}function W(I){return I===nn||I===Ds||I===Os?9728:9729}function j(I){const E=I.target;E.removeEventListener("dispose",j),function Oe(I){const E=n.get(I);if(void 0===E.__webglInit)return;const ie=I.source,Pe=m.get(ie);if(Pe){const Je=Pe[E.__cacheKey];Je.usedTimes--,0===Je.usedTimes&&V(I),0===Object.keys(Pe).length&&m.delete(ie)}n.remove(I)}(E),E.isVideoTexture&&g.delete(E)}function ge(I){const E=I.target;E.removeEventListener("dispose",ge),function le(I){const E=I.texture,ie=n.get(I),Pe=n.get(E);if(void 0!==Pe.__webglTexture&&(r.deleteTexture(Pe.__webglTexture),o.memory.textures--),I.depthTexture&&I.depthTexture.dispose(),I.isWebGLCubeRenderTarget)for(let Je=0;Je<6;Je++)r.deleteFramebuffer(ie.__webglFramebuffer[Je]),ie.__webglDepthbuffer&&r.deleteRenderbuffer(ie.__webglDepthbuffer[Je]);else r.deleteFramebuffer(ie.__webglFramebuffer),ie.__webglDepthbuffer&&r.deleteRenderbuffer(ie.__webglDepthbuffer),ie.__webglMultisampledFramebuffer&&r.deleteFramebuffer(ie.__webglMultisampledFramebuffer),ie.__webglColorRenderbuffer&&r.deleteRenderbuffer(ie.__webglColorRenderbuffer),ie.__webglDepthRenderbuffer&&r.deleteRenderbuffer(ie.__webglDepthRenderbuffer);if(I.isWebGLMultipleRenderTargets)for(let Je=0,nt=E.length;Je<nt;Je++){const pt=n.get(E[Je]);pt.__webglTexture&&(r.deleteTexture(pt.__webglTexture),o.memory.textures--),n.remove(E[Je])}n.remove(E),n.remove(I)}(E)}function V(I){const E=n.get(I);r.deleteTexture(E.__webglTexture),delete m.get(I.source)[E.__cacheKey],o.memory.textures--}let q=0;function ue(I,E){const ie=n.get(I);if(I.isVideoTexture&&function $t(I){const E=o.render.frame;g.get(I)!==E&&(g.set(I,E),I.update())}(I),!1===I.isRenderTargetTexture&&I.version>0&&ie.__version!==I.version){const Pe=I.image;if(null===Pe)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==Pe.complete)return void xt(ie,I,E);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}t.activeTexture(33984+E),t.bindTexture(3553,ie.__webglTexture)}const ct={[Qi]:10497,[wn]:33071,[es]:33648},ht={[nn]:9728,[Ds]:9984,[Os]:9986,[Qt]:9729,[yr]:9985,[Qn]:9987};function de(I,E,ie){if(ie?(r.texParameteri(I,10242,ct[E.wrapS]),r.texParameteri(I,10243,ct[E.wrapT]),(32879===I||35866===I)&&r.texParameteri(I,32882,ct[E.wrapR]),r.texParameteri(I,10240,ht[E.magFilter]),r.texParameteri(I,10241,ht[E.minFilter])):(r.texParameteri(I,10242,33071),r.texParameteri(I,10243,33071),(32879===I||35866===I)&&r.texParameteri(I,32882,33071),(E.wrapS!==wn||E.wrapT!==wn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(I,10240,W(E.magFilter)),r.texParameteri(I,10241,W(E.minFilter)),E.minFilter!==nn&&E.minFilter!==Qt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const Pe=e.get("EXT_texture_filter_anisotropic");if(E.type===ti&&!1===e.has("OES_texture_float_linear")||!1===a&&E.type===Pi&&!1===e.has("OES_texture_half_float_linear"))return;(E.anisotropy>1||n.get(E).__currentAnisotropy)&&(r.texParameterf(I,Pe.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(E.anisotropy,i.getMaxAnisotropy())),n.get(E).__currentAnisotropy=E.anisotropy)}}function Ut(I,E){let ie=!1;void 0===I.__webglInit&&(I.__webglInit=!0,E.addEventListener("dispose",j));const Pe=E.source;let Je=m.get(Pe);void 0===Je&&(Je={},m.set(Pe,Je));const nt=function ne(I){const E=[];return E.push(I.wrapS),E.push(I.wrapT),E.push(I.magFilter),E.push(I.minFilter),E.push(I.anisotropy),E.push(I.internalFormat),E.push(I.format),E.push(I.type),E.push(I.generateMipmaps),E.push(I.premultiplyAlpha),E.push(I.flipY),E.push(I.unpackAlignment),E.push(I.encoding),E.join()}(E);if(nt!==I.__cacheKey){void 0===Je[nt]&&(Je[nt]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,ie=!0),Je[nt].usedTimes++;const pt=Je[I.__cacheKey];void 0!==pt&&(Je[I.__cacheKey].usedTimes--,0===pt.usedTimes&&V(E)),I.__cacheKey=nt,I.__webglTexture=Je[nt].texture}return ie}function xt(I,E,ie){let Pe=3553;E.isDataArrayTexture&&(Pe=35866),E.isData3DTexture&&(Pe=32879);const Je=Ut(I,E),nt=E.source;if(t.activeTexture(33984+ie),t.bindTexture(Pe,I.__webglTexture),nt.version!==nt.__currentVersion||!0===Je){r.pixelStorei(37440,E.flipY),r.pixelStorei(37441,E.premultiplyAlpha),r.pixelStorei(3317,E.unpackAlignment),r.pixelStorei(37443,0);const pt=function A(I){return!a&&(I.wrapS!==wn||I.wrapT!==wn||I.minFilter!==nn&&I.minFilter!==Qt)}(E)&&!1===x(E.image);let oe=M(E.image,pt,!1,u);oe=Vt(E,oe);const Et=x(oe)||a,Pt=s.convert(E.format,E.encoding);let Ye,lt=s.convert(E.type),H=b(E.internalFormat,Pt,lt,E.encoding,E.isVideoTexture);de(Pe,E,Et);const Xe=E.mipmaps,_t=a&&!0!==E.isVideoTexture,it=void 0===I.__version||!0===Je,vt=D(E,oe,Et);if(E.isDepthTexture)H=6402,a?H=E.type===ti?36012:E.type===ns?33190:E.type===ni?35056:33189:E.type===ti&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),E.format===rt&&6402===H&&E.type!==ts&&E.type!==ns&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),E.type=ts,lt=s.convert(E.type)),E.format===yt&&6402===H&&(H=34041,E.type!==ni&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),E.type=ni,lt=s.convert(E.type))),it&&(_t?t.texStorage2D(3553,1,H,oe.width,oe.height):t.texImage2D(3553,0,H,oe.width,oe.height,0,Pt,lt,null));else if(E.isDataTexture)if(Xe.length>0&&Et){_t&&it&&t.texStorage2D(3553,vt,H,Xe[0].width,Xe[0].height);for(let Ge=0,bt=Xe.length;Ge<bt;Ge++)Ye=Xe[Ge],_t?t.texSubImage2D(3553,Ge,0,0,Ye.width,Ye.height,Pt,lt,Ye.data):t.texImage2D(3553,Ge,H,Ye.width,Ye.height,0,Pt,lt,Ye.data);E.generateMipmaps=!1}else _t?(it&&t.texStorage2D(3553,vt,H,oe.width,oe.height),t.texSubImage2D(3553,0,0,0,oe.width,oe.height,Pt,lt,oe.data)):t.texImage2D(3553,0,H,oe.width,oe.height,0,Pt,lt,oe.data);else if(E.isCompressedTexture){_t&&it&&t.texStorage2D(3553,vt,H,Xe[0].width,Xe[0].height);for(let Ge=0,bt=Xe.length;Ge<bt;Ge++)Ye=Xe[Ge],E.format!==X?null!==Pt?_t?t.compressedTexSubImage2D(3553,Ge,0,0,Ye.width,Ye.height,Pt,Ye.data):t.compressedTexImage2D(3553,Ge,H,Ye.width,Ye.height,0,Ye.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):_t?t.texSubImage2D(3553,Ge,0,0,Ye.width,Ye.height,Pt,lt,Ye.data):t.texImage2D(3553,Ge,H,Ye.width,Ye.height,0,Pt,lt,Ye.data)}else if(E.isDataArrayTexture)_t?(it&&t.texStorage3D(35866,vt,H,oe.width,oe.height,oe.depth),t.texSubImage3D(35866,0,0,0,0,oe.width,oe.height,oe.depth,Pt,lt,oe.data)):t.texImage3D(35866,0,H,oe.width,oe.height,oe.depth,0,Pt,lt,oe.data);else if(E.isData3DTexture)_t?(it&&t.texStorage3D(32879,vt,H,oe.width,oe.height,oe.depth),t.texSubImage3D(32879,0,0,0,0,oe.width,oe.height,oe.depth,Pt,lt,oe.data)):t.texImage3D(32879,0,H,oe.width,oe.height,oe.depth,0,Pt,lt,oe.data);else if(E.isFramebufferTexture){if(it)if(_t)t.texStorage2D(3553,vt,H,oe.width,oe.height);else{let Ge=oe.width,bt=oe.height;for(let Gt=0;Gt<vt;Gt++)t.texImage2D(3553,Gt,H,Ge,bt,0,Pt,lt,null),Ge>>=1,bt>>=1}}else if(Xe.length>0&&Et){_t&&it&&t.texStorage2D(3553,vt,H,Xe[0].width,Xe[0].height);for(let Ge=0,bt=Xe.length;Ge<bt;Ge++)Ye=Xe[Ge],_t?t.texSubImage2D(3553,Ge,0,0,Pt,lt,Ye):t.texImage2D(3553,Ge,H,Pt,lt,Ye);E.generateMipmaps=!1}else _t?(it&&t.texStorage2D(3553,vt,H,oe.width,oe.height),t.texSubImage2D(3553,0,0,0,Pt,lt,oe)):t.texImage2D(3553,0,H,Pt,lt,oe);R(E,Et)&&U(Pe),nt.__currentVersion=nt.version,E.onUpdate&&E.onUpdate(E)}I.__version=E.version}function ke(I,E,ie,Pe,Je){const nt=s.convert(ie.format,ie.encoding),pt=s.convert(ie.type),oe=b(ie.internalFormat,nt,pt,ie.encoding);n.get(E).__hasExternalTextures||(32879===Je||35866===Je?t.texImage3D(Je,0,oe,E.width,E.height,E.depth,0,nt,pt,null):t.texImage2D(Je,0,oe,E.width,E.height,0,nt,pt,null)),t.bindFramebuffer(36160,I),dt(E)?d.framebufferTexture2DMultisampleEXT(36160,Pe,Je,n.get(ie).__webglTexture,0,gt(E)):r.framebufferTexture2D(36160,Pe,Je,n.get(ie).__webglTexture,0),t.bindFramebuffer(36160,null)}function It(I,E,ie){if(r.bindRenderbuffer(36161,I),E.depthBuffer&&!E.stencilBuffer){let Pe=33189;if(ie||dt(E)){const Je=E.depthTexture;Je&&Je.isDepthTexture&&(Je.type===ti?Pe=36012:Je.type===ns&&(Pe=33190));const nt=gt(E);dt(E)?d.renderbufferStorageMultisampleEXT(36161,nt,Pe,E.width,E.height):r.renderbufferStorageMultisample(36161,nt,Pe,E.width,E.height)}else r.renderbufferStorage(36161,Pe,E.width,E.height);r.framebufferRenderbuffer(36160,36096,36161,I)}else if(E.depthBuffer&&E.stencilBuffer){const Pe=gt(E);ie&&!1===dt(E)?r.renderbufferStorageMultisample(36161,Pe,35056,E.width,E.height):dt(E)?d.renderbufferStorageMultisampleEXT(36161,Pe,35056,E.width,E.height):r.renderbufferStorage(36161,34041,E.width,E.height),r.framebufferRenderbuffer(36160,33306,36161,I)}else{const Pe=!0===E.isWebGLMultipleRenderTargets?E.texture[0]:E.texture,Je=s.convert(Pe.format,Pe.encoding),nt=s.convert(Pe.type),pt=b(Pe.internalFormat,Je,nt,Pe.encoding),oe=gt(E);ie&&!1===dt(E)?r.renderbufferStorageMultisample(36161,oe,pt,E.width,E.height):dt(E)?d.renderbufferStorageMultisampleEXT(36161,oe,pt,E.width,E.height):r.renderbufferStorage(36161,pt,E.width,E.height)}r.bindRenderbuffer(36161,null)}function me(I){const E=n.get(I),ie=!0===I.isWebGLCubeRenderTarget;if(I.depthTexture&&!E.__autoAllocateDepthBuffer){if(ie)throw new Error("target.depthTexture not supported in Cube render targets");!function ye(I,E){if(E&&E.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,I),!E.depthTexture||!E.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(E.depthTexture).__webglTexture||E.depthTexture.image.width!==E.width||E.depthTexture.image.height!==E.height)&&(E.depthTexture.image.width=E.width,E.depthTexture.image.height=E.height,E.depthTexture.needsUpdate=!0),ue(E.depthTexture,0);const Pe=n.get(E.depthTexture).__webglTexture,Je=gt(E);if(E.depthTexture.format===rt)dt(E)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,Pe,0,Je):r.framebufferTexture2D(36160,36096,3553,Pe,0);else{if(E.depthTexture.format!==yt)throw new Error("Unknown depthTexture format");dt(E)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,Pe,0,Je):r.framebufferTexture2D(36160,33306,3553,Pe,0)}}(E.__webglFramebuffer,I)}else if(ie){E.__webglDepthbuffer=[];for(let Pe=0;Pe<6;Pe++)t.bindFramebuffer(36160,E.__webglFramebuffer[Pe]),E.__webglDepthbuffer[Pe]=r.createRenderbuffer(),It(E.__webglDepthbuffer[Pe],I,!1)}else t.bindFramebuffer(36160,E.__webglFramebuffer),E.__webglDepthbuffer=r.createRenderbuffer(),It(E.__webglDepthbuffer,I,!1);t.bindFramebuffer(36160,null)}function gt(I){return Math.min(h,I.samples)}function dt(I){const E=n.get(I);return a&&I.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==E.__useRenderToTexture}function Vt(I,E){const ie=I.encoding,Pe=I.format,Je=I.type;return!0===I.isCompressedTexture||!0===I.isVideoTexture||1035===I.format||ie!==pi&&(ie===Xt?!1===a?!0===e.has("EXT_sRGB")&&Pe===X?(I.format=1035,I.minFilter=Qt,I.generateMipmaps=!1):E=hs.sRGBToLinear(E):(Pe!==X||Je!==ei)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ie)),E}this.allocateTextureUnit=function _e(){const I=q;return I>=l&&console.warn("THREE.WebGLTextures: Trying to use "+I+" texture units while this GPU supports only "+l),q+=1,I},this.resetTextureUnits=function ve(){q=0},this.setTexture2D=ue,this.setTexture2DArray=function Be(I,E){const ie=n.get(I);I.version>0&&ie.__version!==I.version?xt(ie,I,E):(t.activeTexture(33984+E),t.bindTexture(35866,ie.__webglTexture))},this.setTexture3D=function Me(I,E){const ie=n.get(I);I.version>0&&ie.__version!==I.version?xt(ie,I,E):(t.activeTexture(33984+E),t.bindTexture(32879,ie.__webglTexture))},this.setTextureCube=function $e(I,E){const ie=n.get(I);I.version>0&&ie.__version!==I.version?function Tt(I,E,ie){if(6!==E.image.length)return;const Pe=Ut(I,E),Je=E.source;if(t.activeTexture(33984+ie),t.bindTexture(34067,I.__webglTexture),Je.version!==Je.__currentVersion||!0===Pe){r.pixelStorei(37440,E.flipY),r.pixelStorei(37441,E.premultiplyAlpha),r.pixelStorei(3317,E.unpackAlignment),r.pixelStorei(37443,0);const nt=E.isCompressedTexture||E.image[0].isCompressedTexture,pt=E.image[0]&&E.image[0].isDataTexture,oe=[];for(let Ge=0;Ge<6;Ge++)oe[Ge]=nt||pt?pt?E.image[Ge].image:E.image[Ge]:M(E.image[Ge],!1,!0,c),oe[Ge]=Vt(E,oe[Ge]);const Et=oe[0],Pt=x(Et)||a,lt=s.convert(E.format,E.encoding),H=s.convert(E.type),Ye=b(E.internalFormat,lt,H,E.encoding),Xe=a&&!0!==E.isVideoTexture,_t=void 0===I.__version;let vt,it=D(E,Et,Pt);if(de(34067,E,Pt),nt){Xe&&_t&&t.texStorage2D(34067,it,Ye,Et.width,Et.height);for(let Ge=0;Ge<6;Ge++){vt=oe[Ge].mipmaps;for(let bt=0;bt<vt.length;bt++){const Gt=vt[bt];E.format!==X?null!==lt?Xe?t.compressedTexSubImage2D(34069+Ge,bt,0,0,Gt.width,Gt.height,lt,Gt.data):t.compressedTexImage2D(34069+Ge,bt,Ye,Gt.width,Gt.height,0,Gt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Xe?t.texSubImage2D(34069+Ge,bt,0,0,Gt.width,Gt.height,lt,H,Gt.data):t.texImage2D(34069+Ge,bt,Ye,Gt.width,Gt.height,0,lt,H,Gt.data)}}}else{vt=E.mipmaps,Xe&&_t&&(vt.length>0&&it++,t.texStorage2D(34067,it,Ye,oe[0].width,oe[0].height));for(let Ge=0;Ge<6;Ge++)if(pt){Xe?t.texSubImage2D(34069+Ge,0,0,0,oe[Ge].width,oe[Ge].height,lt,H,oe[Ge].data):t.texImage2D(34069+Ge,0,Ye,oe[Ge].width,oe[Ge].height,0,lt,H,oe[Ge].data);for(let bt=0;bt<vt.length;bt++){const Dt=vt[bt].image[Ge].image;Xe?t.texSubImage2D(34069+Ge,bt+1,0,0,Dt.width,Dt.height,lt,H,Dt.data):t.texImage2D(34069+Ge,bt+1,Ye,Dt.width,Dt.height,0,lt,H,Dt.data)}}else{Xe?t.texSubImage2D(34069+Ge,0,0,0,lt,H,oe[Ge]):t.texImage2D(34069+Ge,0,Ye,lt,H,oe[Ge]);for(let bt=0;bt<vt.length;bt++){const Gt=vt[bt];Xe?t.texSubImage2D(34069+Ge,bt+1,0,0,lt,H,Gt.image[Ge]):t.texImage2D(34069+Ge,bt+1,Ye,lt,H,Gt.image[Ge])}}}R(E,Pt)&&U(34067),Je.__currentVersion=Je.version,E.onUpdate&&E.onUpdate(E)}I.__version=E.version}(ie,I,E):(t.activeTexture(33984+E),t.bindTexture(34067,ie.__webglTexture))},this.rebindTextures=function He(I,E,ie){const Pe=n.get(I);void 0!==E&&ke(Pe.__webglFramebuffer,I,I.texture,36064,3553),void 0!==ie&&me(I)},this.setupRenderTarget=function at(I){const E=I.texture,ie=n.get(I),Pe=n.get(E);I.addEventListener("dispose",ge),!0!==I.isWebGLMultipleRenderTargets&&(void 0===Pe.__webglTexture&&(Pe.__webglTexture=r.createTexture()),Pe.__version=E.version,o.memory.textures++);const Je=!0===I.isWebGLCubeRenderTarget,nt=!0===I.isWebGLMultipleRenderTargets,pt=x(I)||a;if(Je){ie.__webglFramebuffer=[];for(let oe=0;oe<6;oe++)ie.__webglFramebuffer[oe]=r.createFramebuffer()}else if(ie.__webglFramebuffer=r.createFramebuffer(),nt)if(i.drawBuffers){const oe=I.texture;for(let Et=0,Pt=oe.length;Et<Pt;Et++){const lt=n.get(oe[Et]);void 0===lt.__webglTexture&&(lt.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(a&&I.samples>0&&!1===dt(I)){ie.__webglMultisampledFramebuffer=r.createFramebuffer(),ie.__webglColorRenderbuffer=r.createRenderbuffer(),r.bindRenderbuffer(36161,ie.__webglColorRenderbuffer);const oe=s.convert(E.format,E.encoding),Et=s.convert(E.type),Pt=b(E.internalFormat,oe,Et,E.encoding),lt=gt(I);r.renderbufferStorageMultisample(36161,lt,Pt,I.width,I.height),t.bindFramebuffer(36160,ie.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064,36161,ie.__webglColorRenderbuffer),r.bindRenderbuffer(36161,null),I.depthBuffer&&(ie.__webglDepthRenderbuffer=r.createRenderbuffer(),It(ie.__webglDepthRenderbuffer,I,!0)),t.bindFramebuffer(36160,null)}if(Je){t.bindTexture(34067,Pe.__webglTexture),de(34067,E,pt);for(let oe=0;oe<6;oe++)ke(ie.__webglFramebuffer[oe],I,E,36064,34069+oe);R(E,pt)&&U(34067),t.unbindTexture()}else if(nt){const oe=I.texture;for(let Et=0,Pt=oe.length;Et<Pt;Et++){const lt=oe[Et],H=n.get(lt);t.bindTexture(3553,H.__webglTexture),de(3553,lt,pt),ke(ie.__webglFramebuffer,I,lt,36064+Et,3553),R(lt,pt)&&U(3553)}t.unbindTexture()}else{let oe=3553;(I.isWebGL3DRenderTarget||I.isWebGLArrayRenderTarget)&&(a?oe=I.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(oe,Pe.__webglTexture),de(oe,E,pt),ke(ie.__webglFramebuffer,I,E,36064,oe),R(E,pt)&&U(oe),t.unbindTexture()}I.depthBuffer&&me(I)},this.updateRenderTargetMipmap=function qe(I){const E=x(I)||a,ie=!0===I.isWebGLMultipleRenderTargets?I.texture:[I.texture];for(let Pe=0,Je=ie.length;Pe<Je;Pe++){const nt=ie[Pe];if(R(nt,E)){const pt=I.isWebGLCubeRenderTarget?34067:3553,oe=n.get(nt).__webglTexture;t.bindTexture(pt,oe),U(pt),t.unbindTexture()}}},this.updateMultisampleRenderTarget=function wt(I){if(a&&I.samples>0&&!1===dt(I)){const E=I.width,ie=I.height;let Pe=16384;const Je=[36064],nt=I.stencilBuffer?33306:36096;I.depthBuffer&&Je.push(nt);const pt=n.get(I),oe=void 0!==pt.__ignoreDepthValues&&pt.__ignoreDepthValues;!1===oe&&(I.depthBuffer&&(Pe|=256),I.stencilBuffer&&(Pe|=1024)),t.bindFramebuffer(36008,pt.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,pt.__webglFramebuffer),!0===oe&&(r.invalidateFramebuffer(36008,[nt]),r.invalidateFramebuffer(36009,[nt])),r.blitFramebuffer(0,0,E,ie,0,0,E,ie,Pe,9728),f&&r.invalidateFramebuffer(36008,Je),t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,pt.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=me,this.setupFrameBufferTexture=ke,this.useMultisampledRTT=dt}function Sg(r,e,t){const n=t.isWebGL2;return{convert:function i(s,o=null){let a;if(s===ei)return 5121;if(1017===s)return 32819;if(1018===s)return 32820;if(1010===s)return 5120;if(1011===s)return 5122;if(s===ts)return 5123;if(1013===s)return 5124;if(s===ns)return 5125;if(s===ti)return 5126;if(s===Pi)return n?5131:(a=e.get("OES_texture_half_float"),null!==a?a.HALF_FLOAT_OES:null);if(1021===s)return 6406;if(s===X)return 6408;if(s===Y)return 6409;if(1025===s)return 6410;if(s===rt)return 6402;if(s===yt)return 34041;if(s===Lt)return 6403;if(1022===s)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(1035===s)return a=e.get("EXT_sRGB"),null!==a?a.SRGB_ALPHA_EXT:null;if(1029===s)return 36244;if(s===sn)return 33319;if(1031===s)return 33320;if(1033===s)return 36249;if(33776===s||33777===s||33778===s||33779===s)if(o===Xt){if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===a)return null;if(33776===s)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(33777===s)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(33778===s)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(33779===s)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(a=e.get("WEBGL_compressed_texture_s3tc"),null===a)return null;if(33776===s)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===s)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===s)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===s)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===s||35841===s||35842===s||35843===s){if(a=e.get("WEBGL_compressed_texture_pvrtc"),null===a)return null;if(35840===s)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===s)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===s)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===s)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===s)return a=e.get("WEBGL_compressed_texture_etc1"),null!==a?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===s||37496===s){if(a=e.get("WEBGL_compressed_texture_etc"),null===a)return null;if(37492===s)return o===Xt?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(37496===s)return o===Xt?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(37808===s||37809===s||37810===s||37811===s||37812===s||37813===s||37814===s||37815===s||37816===s||37817===s||37818===s||37819===s||37820===s||37821===s){if(a=e.get("WEBGL_compressed_texture_astc"),null===a)return null;if(37808===s)return o===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===s)return o===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===s)return o===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===s)return o===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===s)return o===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===s)return o===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===s)return o===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===s)return o===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===s)return o===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===s)return o===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===s)return o===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===s)return o===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===s)return o===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===s)return o===Xt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===s){if(a=e.get("EXT_texture_compression_bptc"),null===a)return null;if(36492===s)return o===Xt?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}return s===ni?n?34042:(a=e.get("WEBGL_depth_texture"),null!==a?a.UNSIGNED_INT_24_8_WEBGL:null):void 0!==r[s]?r[s]:null}}}na.prototype.isMeshDistanceMaterial=!0;class Au extends bn{constructor(e=[]){super(),this.cameras=e}}Au.prototype.isArrayCamera=!0;class xs extends Ft{constructor(){super(),this.type="Group"}}xs.prototype.isGroup=!0;const Eg={type:"move"};class Nl{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new xs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new xs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new T,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new T),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new xs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new T,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new T),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==a&&(i=t.getPose(e.targetRaySpace,n),null!==i&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Eg))),c&&e.hand){o=!0;for(const p of e.hand.values()){const m=t.getJointPose(p,n);if(void 0===c.joints[p.jointName]){const y=new xs;y.matrixAutoUpdate=!1,y.visible=!1,c.joints[p.jointName]=y,c.add(y)}const v=c.joints[p.jointName];null!==m&&(v.matrix.fromArray(m.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=m.radius),v.visible=null!==m}const d=c.joints["index-finger-tip"].position.distanceTo(c.joints["thumb-tip"].position),f=.02,g=.005;c.inputState.pinching&&d>f+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=f-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==l&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),null!==s&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));return null!==a&&(a.visible=null!==i),null!==l&&(l.visible=null!==s),null!==c&&(c.visible=null!==o),this}}class Fl extends Cn{constructor(e,t,n,i,s,o,a,l,c,u){if((u=void 0!==u?u:rt)!==rt&&u!==yt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&u===rt&&(n=ts),void 0===n&&u===yt&&(n=ni),super(null,i,s,o,a,l,u,n,c),this.image={width:e,height:t},this.magFilter=void 0!==a?a:nn,this.minFilter=void 0!==l?l:nn,this.flipY=!1,this.generateMipmaps=!1}}Fl.prototype.isDepthTexture=!0;class Tg extends Ii{constructor(e,t){super();const n=this;let i=null,s=1,o=null,a="local-floor",l=null,c=null,u=null,h=null,d=null,f=null;const g=t.getContextAttributes();let p=null,m=null;const v=[],y=new Map,M=new bn;M.layers.enable(1),M.viewport=new Bt;const x=new bn;x.layers.enable(2),x.viewport=new Bt;const A=[M,x],R=new Au;R.layers.enable(1),R.layers.enable(2);let U=null,b=null;function D(ne){const ue=y.get(ne.inputSource);ue&&ue.dispatchEvent({type:ne.type,data:ne.inputSource})}function W(){y.forEach(function(ne,ue){ne.disconnect(ue)}),y.clear(),U=null,b=null,e.setRenderTarget(p),d=null,h=null,u=null,i=null,m=null,_e.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function j(ne){const ue=i.inputSources;for(let Be=0;Be<ue.length;Be++)y.set(ue[Be],v["right"===ue[Be].handedness?1:0]);for(let Be=0;Be<ne.removed.length;Be++){const Me=ne.removed[Be],$e=y.get(Me);$e&&($e.dispatchEvent({type:"disconnected",data:Me}),y.delete(Me))}for(let Be=0;Be<ne.added.length;Be++){const Me=ne.added[Be],$e=y.get(Me);$e&&$e.dispatchEvent({type:"connected",data:Me})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ne){let ue=v[ne];return void 0===ue&&(ue=new Nl,v[ne]=ue),ue.getTargetRaySpace()},this.getControllerGrip=function(ne){let ue=v[ne];return void 0===ue&&(ue=new Nl,v[ne]=ue),ue.getGripSpace()},this.getHand=function(ne){let ue=v[ne];return void 0===ue&&(ue=new Nl,v[ne]=ue),ue.getHandSpace()},this.setFramebufferScaleFactor=function(ne){s=ne,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ne){a=ne,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(ne){l=ne},this.getBaseLayer=function(){return null!==h?h:d},this.getBinding=function(){return u},this.getFrame=function(){return f},this.getSession=function(){return i},this.setSession=function(){var ne=function z(r){return function(){var e=this,t=arguments;return new Promise(function(n,i){var s=r.apply(e,t);function o(l){N(s,n,i,o,a,"next",l)}function a(l){N(s,n,i,o,a,"throw",l)}o(void 0)})}}(function*(ue){if(i=ue,null!==i){if(p=e.getRenderTarget(),i.addEventListener("select",D),i.addEventListener("selectstart",D),i.addEventListener("selectend",D),i.addEventListener("squeeze",D),i.addEventListener("squeezestart",D),i.addEventListener("squeezeend",D),i.addEventListener("end",W),i.addEventListener("inputsourceschange",j),!0!==g.xrCompatible&&(yield t.makeXRCompatible()),void 0===i.renderState.layers||!1===e.capabilities.isWebGL2)d=new XRWebGLLayer(i,t,{antialias:void 0!==i.renderState.layers||g.antialias,alpha:g.alpha,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s}),i.updateRenderState({baseLayer:d}),m=new Pn(d.framebufferWidth,d.framebufferHeight,{format:X,type:ei,encoding:e.outputEncoding});else{let Be=null,Me=null,$e=null;g.depth&&($e=g.stencil?35056:33190,Be=g.stencil?yt:rt,Me=g.stencil?ni:ts);const ct={colorFormat:e.outputEncoding===Xt?35907:32856,depthFormat:$e,scaleFactor:s};u=new XRWebGLBinding(i,t),h=u.createProjectionLayer(ct),i.updateRenderState({layers:[h]}),m=new Pn(h.textureWidth,h.textureHeight,{format:X,type:ei,depthTexture:new Fl(h.textureWidth,h.textureHeight,Me,void 0,void 0,void 0,void 0,void 0,void 0,Be),stencilBuffer:g.stencil,encoding:e.outputEncoding,samples:g.antialias?4:0}),e.properties.get(m).__ignoreDepthValues=h.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),o=yield i.requestReferenceSpace(a),_e.setContext(i),_e.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}});return function(ue){return ne.apply(this,arguments)}}();const ge=new T,Oe=new T;function le(ne,ue){null===ue?ne.matrixWorld.copy(ne.matrix):ne.matrixWorld.multiplyMatrices(ue.matrixWorld,ne.matrix),ne.matrixWorldInverse.copy(ne.matrixWorld).invert()}this.updateCamera=function(ne){if(null===i)return;R.near=x.near=M.near=ne.near,R.far=x.far=M.far=ne.far,(U!==R.near||b!==R.far)&&(i.updateRenderState({depthNear:R.near,depthFar:R.far}),U=R.near,b=R.far);const ue=ne.parent,Be=R.cameras;le(R,ue);for(let $e=0;$e<Be.length;$e++)le(Be[$e],ue);R.matrixWorld.decompose(R.position,R.quaternion,R.scale),ne.position.copy(R.position),ne.quaternion.copy(R.quaternion),ne.scale.copy(R.scale),ne.matrix.copy(R.matrix),ne.matrixWorld.copy(R.matrixWorld);const Me=ne.children;for(let $e=0,ct=Me.length;$e<ct;$e++)Me[$e].updateMatrixWorld(!0);2===Be.length?function V(ne,ue,Be){ge.setFromMatrixPosition(ue.matrixWorld),Oe.setFromMatrixPosition(Be.matrixWorld);const Me=ge.distanceTo(Oe),$e=ue.projectionMatrix.elements,ct=Be.projectionMatrix.elements,ht=$e[14]/($e[10]-1),de=$e[14]/($e[10]+1),Ut=($e[9]+1)/$e[5],xt=($e[9]-1)/$e[5],Tt=($e[8]-1)/$e[0],ke=(ct[8]+1)/ct[0],It=ht*Tt,ye=ht*ke,me=Me/(-Tt+ke),He=me*-Tt;ue.matrixWorld.decompose(ne.position,ne.quaternion,ne.scale),ne.translateX(He),ne.translateZ(me),ne.matrixWorld.compose(ne.position,ne.quaternion,ne.scale),ne.matrixWorldInverse.copy(ne.matrixWorld).invert();const at=ht+me,qe=de+me;ne.projectionMatrix.makePerspective(It-He,ye+(Me-He),Ut*de/qe*at,xt*de/qe*at,at,qe)}(R,M,x):R.projectionMatrix.copy(M.projectionMatrix)},this.getCamera=function(){return R},this.getFoveation=function(){return null!==h?h.fixedFoveation:null!==d?d.fixedFoveation:void 0},this.setFoveation=function(ne){null!==h&&(h.fixedFoveation=ne),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=ne)};let q=null;const _e=new Zc;_e.setAnimationLoop(function ve(ne,ue){if(c=ue.getViewerPose(l||o),f=ue,null!==c){const Me=c.views;null!==d&&(e.setRenderTargetFramebuffer(m,d.framebuffer),e.setRenderTarget(m));let $e=!1;Me.length!==R.cameras.length&&(R.cameras.length=0,$e=!0);for(let ct=0;ct<Me.length;ct++){const ht=Me[ct];let de=null;if(null!==d)de=d.getViewport(ht);else{const xt=u.getViewSubImage(h,ht);de=xt.viewport,0===ct&&(e.setRenderTargetTextures(m,xt.colorTexture,h.ignoreDepthValues?void 0:xt.depthStencilTexture),e.setRenderTarget(m))}const Ut=A[ct];Ut.matrix.fromArray(ht.transform.matrix),Ut.projectionMatrix.fromArray(ht.projectionMatrix),Ut.viewport.set(de.x,de.y,de.width,de.height),0===ct&&R.matrix.copy(Ut.matrix),!0===$e&&R.cameras.push(Ut)}}const Be=i.inputSources;for(let Me=0;Me<v.length;Me++){const $e=Be[Me],ct=y.get($e);void 0!==ct&&ct.update($e,ue,l||o)}q&&q(ne,ue),f=null}),this.setAnimationLoop=function(ne){q=ne},this.dispose=function(){}}}function Ag(r,e){function i(p,m){p.opacity.value=m.opacity,m.color&&p.diffuse.value.copy(m.color),m.emissive&&p.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(p.map.value=m.map),m.alphaMap&&(p.alphaMap.value=m.alphaMap),m.bumpMap&&(p.bumpMap.value=m.bumpMap,p.bumpScale.value=m.bumpScale,m.side===ce&&(p.bumpScale.value*=-1)),m.displacementMap&&(p.displacementMap.value=m.displacementMap,p.displacementScale.value=m.displacementScale,p.displacementBias.value=m.displacementBias),m.emissiveMap&&(p.emissiveMap.value=m.emissiveMap),m.normalMap&&(p.normalMap.value=m.normalMap,p.normalScale.value.copy(m.normalScale),m.side===ce&&p.normalScale.value.negate()),m.specularMap&&(p.specularMap.value=m.specularMap),m.alphaTest>0&&(p.alphaTest.value=m.alphaTest);const v=e.get(m).envMap;if(v&&(p.envMap.value=v,p.flipEnvMap.value=v.isCubeTexture&&!1===v.isRenderTargetTexture?-1:1,p.reflectivity.value=m.reflectivity,p.ior.value=m.ior,p.refractionRatio.value=m.refractionRatio),m.lightMap){p.lightMap.value=m.lightMap;const x=!0!==r.physicallyCorrectLights?Math.PI:1;p.lightMapIntensity.value=m.lightMapIntensity*x}let y,M;m.aoMap&&(p.aoMap.value=m.aoMap,p.aoMapIntensity.value=m.aoMapIntensity),m.map?y=m.map:m.specularMap?y=m.specularMap:m.displacementMap?y=m.displacementMap:m.normalMap?y=m.normalMap:m.bumpMap?y=m.bumpMap:m.roughnessMap?y=m.roughnessMap:m.metalnessMap?y=m.metalnessMap:m.alphaMap?y=m.alphaMap:m.emissiveMap?y=m.emissiveMap:m.clearcoatMap?y=m.clearcoatMap:m.clearcoatNormalMap?y=m.clearcoatNormalMap:m.clearcoatRoughnessMap?y=m.clearcoatRoughnessMap:m.specularIntensityMap?y=m.specularIntensityMap:m.specularColorMap?y=m.specularColorMap:m.transmissionMap?y=m.transmissionMap:m.thicknessMap?y=m.thicknessMap:m.sheenColorMap?y=m.sheenColorMap:m.sheenRoughnessMap&&(y=m.sheenRoughnessMap),void 0!==y&&(y.isWebGLRenderTarget&&(y=y.texture),!0===y.matrixAutoUpdate&&y.updateMatrix(),p.uvTransform.value.copy(y.matrix)),m.aoMap?M=m.aoMap:m.lightMap&&(M=m.lightMap),void 0!==M&&(M.isWebGLRenderTarget&&(M=M.texture),!0===M.matrixAutoUpdate&&M.updateMatrix(),p.uv2Transform.value.copy(M.matrix))}return{refreshFogUniforms:function t(p,m){p.fogColor.value.copy(m.color),m.isFog?(p.fogNear.value=m.near,p.fogFar.value=m.far):m.isFogExp2&&(p.fogDensity.value=m.density)},refreshMaterialUniforms:function n(p,m,v,y,M){m.isMeshBasicMaterial||m.isMeshLambertMaterial?i(p,m):m.isMeshToonMaterial?(i(p,m),function u(p,m){m.gradientMap&&(p.gradientMap.value=m.gradientMap)}(p,m)):m.isMeshPhongMaterial?(i(p,m),function c(p,m){p.specular.value.copy(m.specular),p.shininess.value=Math.max(m.shininess,1e-4)}(p,m)):m.isMeshStandardMaterial?(i(p,m),function h(p,m){p.roughness.value=m.roughness,p.metalness.value=m.metalness,m.roughnessMap&&(p.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(p.metalnessMap.value=m.metalnessMap),e.get(m).envMap&&(p.envMapIntensity.value=m.envMapIntensity)}(p,m),m.isMeshPhysicalMaterial&&function d(p,m,v){p.ior.value=m.ior,m.sheen>0&&(p.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),p.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(p.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(p.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(p.clearcoat.value=m.clearcoat,p.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(p.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(p.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),p.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===ce&&p.clearcoatNormalScale.value.negate())),m.transmission>0&&(p.transmission.value=m.transmission,p.transmissionSamplerMap.value=v.texture,p.transmissionSamplerSize.value.set(v.width,v.height),m.transmissionMap&&(p.transmissionMap.value=m.transmissionMap),p.thickness.value=m.thickness,m.thicknessMap&&(p.thicknessMap.value=m.thicknessMap),p.attenuationDistance.value=m.attenuationDistance,p.attenuationColor.value.copy(m.attenuationColor)),p.specularIntensity.value=m.specularIntensity,p.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(p.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(p.specularColorMap.value=m.specularColorMap)}(p,m,M)):m.isMeshMatcapMaterial?(i(p,m),function f(p,m){m.matcap&&(p.matcap.value=m.matcap)}(p,m)):m.isMeshDepthMaterial?i(p,m):m.isMeshDistanceMaterial?(i(p,m),function g(p,m){p.referencePosition.value.copy(m.referencePosition),p.nearDistance.value=m.nearDistance,p.farDistance.value=m.farDistance}(p,m)):m.isMeshNormalMaterial?i(p,m):m.isLineBasicMaterial?(function s(p,m){p.diffuse.value.copy(m.color),p.opacity.value=m.opacity}(p,m),m.isLineDashedMaterial&&function o(p,m){p.dashSize.value=m.dashSize,p.totalSize.value=m.dashSize+m.gapSize,p.scale.value=m.scale}(p,m)):m.isPointsMaterial?function a(p,m,v,y){let M;p.diffuse.value.copy(m.color),p.opacity.value=m.opacity,p.size.value=m.size*v,p.scale.value=.5*y,m.map&&(p.map.value=m.map),m.alphaMap&&(p.alphaMap.value=m.alphaMap),m.alphaTest>0&&(p.alphaTest.value=m.alphaTest),m.map?M=m.map:m.alphaMap&&(M=m.alphaMap),void 0!==M&&(!0===M.matrixAutoUpdate&&M.updateMatrix(),p.uvTransform.value.copy(M.matrix))}(p,m,v,y):m.isSpriteMaterial?function l(p,m){let v;p.diffuse.value.copy(m.color),p.opacity.value=m.opacity,p.rotation.value=m.rotation,m.map&&(p.map.value=m.map),m.alphaMap&&(p.alphaMap.value=m.alphaMap),m.alphaTest>0&&(p.alphaTest.value=m.alphaTest),m.map?v=m.map:m.alphaMap&&(v=m.alphaMap),void 0!==v&&(!0===v.matrixAutoUpdate&&v.updateMatrix(),p.uvTransform.value.copy(v.matrix))}(p,m):m.isShadowMaterial?(p.color.value.copy(m.color),p.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}}}function Ht(r={}){const e=void 0!==r.canvas?r.canvas:function Cg(){const r=Er("canvas");return r.style.display="block",r}(),t=void 0!==r.context?r.context:null,n=void 0===r.depth||r.depth,i=void 0===r.stencil||r.stencil,s=void 0!==r.antialias&&r.antialias,o=void 0===r.premultipliedAlpha||r.premultipliedAlpha,a=void 0!==r.preserveDrawingBuffer&&r.preserveDrawingBuffer,l=void 0!==r.powerPreference?r.powerPreference:"default",c=void 0!==r.failIfMajorPerformanceCaveat&&r.failIfMajorPerformanceCaveat;let u;u=null!==t?t.getContextAttributes().alpha:void 0!==r.alpha&&r.alpha;let h=null,d=null;const f=[],g=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=pi,this.physicallyCorrectLights=!1,this.toneMapping=qt,this.toneMappingExposure=1;const p=this;let m=!1,v=0,y=0,M=null,x=-1,A=null;const R=new Bt,U=new Bt;let b=null,D=e.width,W=e.height,j=1,ge=null,Oe=null;const V=new Bt(0,0,D,W),le=new Bt(0,0,D,W);let q=!1;const ve=new qo;let _e=!1,ne=!1,ue=null;const Be=new ot,Me=new pe,$e=new T,ct={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ht(){return null===M?j:1}let xt,Tt,ke,It,ye,me,He,at,qe,wt,gt,dt,$t,Vt,I,E,ie,Pe,Je,nt,pt,oe,Et,de=t;function Ut(C,J){for(let te=0;te<C.length;te++){const fe=e.getContext(C[te],J);if(null!==fe)return fe}return null}try{const C={alpha:!0,depth:n,stencil:i,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${k}`),e.addEventListener("webglcontextlost",H,!1),e.addEventListener("webglcontextrestored",Ye,!1),null===de){const J=["webgl2","webgl","experimental-webgl"];if(!0===p.isWebGL1Renderer&&J.shift(),de=Ut(J,C),null===de)throw Ut(J)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===de.getShaderPrecisionFormat&&(de.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}function Pt(){xt=new jp(de),Tt=new zp(de,xt,r),xt.init(Tt),oe=new Sg(de,xt,Tt),ke=new Mg(de,xt,Tt),It=new Kp(de),ye=new hg,me=new wg(de,xt,ke,ye,Tt,oe,It),He=new Gp(p),at=new Vp(p),qe=new zd(de,Tt),Et=new Bp(de,xt,qe,Tt),wt=new Xp(de,qe,It,Et),gt=new qp(de,wt,qe,It),Je=new Zp(de,Tt,me),E=new Hp(ye),dt=new ug(p,He,at,xt,Tt,Et,E),$t=new Ag(p,ye),Vt=new fg,I=new xg(xt,Tt),Pe=new Fp(p,He,ke,gt,u,o),ie=new Tu(p,gt,Tt),nt=new Up(de,xt,It,Tt),pt=new $p(de,xt,It,Tt),It.programs=dt.programs,p.capabilities=Tt,p.extensions=xt,p.properties=ye,p.renderLists=Vt,p.shadowMap=ie,p.state=ke,p.info=It}Pt();const lt=new Tg(p,de);function H(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function Ye(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const C=It.autoReset,J=ie.enabled,te=ie.autoUpdate,Z=ie.needsUpdate,fe=ie.type;Pt(),It.autoReset=C,ie.enabled=J,ie.autoUpdate=te,ie.needsUpdate=Z,ie.type=fe}function Xe(C){const J=C.target;J.removeEventListener("dispose",Xe),function _t(C){(function it(C){const J=ye.get(C).programs;void 0!==J&&(J.forEach(function(te){dt.releaseProgram(te)}),C.isShaderMaterial&&dt.releaseShaderCache(C))})(C),ye.remove(C)}(J)}this.xr=lt,this.getContext=function(){return de},this.getContextAttributes=function(){return de.getContextAttributes()},this.forceContextLoss=function(){const C=xt.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=xt.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return j},this.setPixelRatio=function(C){void 0!==C&&(j=C,this.setSize(D,W,!1))},this.getSize=function(C){return C.set(D,W)},this.setSize=function(C,J,te){lt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(D=C,W=J,e.width=Math.floor(C*j),e.height=Math.floor(J*j),!1!==te&&(e.style.width=C+"px",e.style.height=J+"px"),this.setViewport(0,0,C,J))},this.getDrawingBufferSize=function(C){return C.set(D*j,W*j).floor()},this.setDrawingBufferSize=function(C,J,te){D=C,W=J,j=te,e.width=Math.floor(C*te),e.height=Math.floor(J*te),this.setViewport(0,0,C,J)},this.getCurrentViewport=function(C){return C.copy(R)},this.getViewport=function(C){return C.copy(V)},this.setViewport=function(C,J,te,Z){C.isVector4?V.set(C.x,C.y,C.z,C.w):V.set(C,J,te,Z),ke.viewport(R.copy(V).multiplyScalar(j).floor())},this.getScissor=function(C){return C.copy(le)},this.setScissor=function(C,J,te,Z){C.isVector4?le.set(C.x,C.y,C.z,C.w):le.set(C,J,te,Z),ke.scissor(U.copy(le).multiplyScalar(j).floor())},this.getScissorTest=function(){return q},this.setScissorTest=function(C){ke.setScissorTest(q=C)},this.setOpaqueSort=function(C){ge=C},this.setTransparentSort=function(C){Oe=C},this.getClearColor=function(C){return C.copy(Pe.getClearColor())},this.setClearColor=function(){Pe.setClearColor.apply(Pe,arguments)},this.getClearAlpha=function(){return Pe.getClearAlpha()},this.setClearAlpha=function(){Pe.setClearAlpha.apply(Pe,arguments)},this.clear=function(C=!0,J=!0,te=!0){let Z=0;C&&(Z|=16384),J&&(Z|=256),te&&(Z|=1024),de.clear(Z)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",H,!1),e.removeEventListener("webglcontextrestored",Ye,!1),Vt.dispose(),I.dispose(),ye.dispose(),He.dispose(),at.dispose(),gt.dispose(),Et.dispose(),dt.dispose(),lt.dispose(),lt.removeEventListener("sessionstart",bt),lt.removeEventListener("sessionend",Gt),ue&&(ue.dispose(),ue=null),Dt.stop()},this.renderBufferDirect=function(C,J,te,Z,fe,Mt){null===J&&(J=ct);const St=fe.isMesh&&fe.matrixWorld.determinant()<0,Rt=function Q0(C,J,te,Z,fe){!0!==J.isScene&&(J=ct),me.resetTextureUnits();const Mt=J.fog,Rt=null===M?p.outputEncoding:!0===M.isXRRenderTarget?M.texture.encoding:pi,At=(Z.isMeshStandardMaterial?at:He).get(Z.envMap||(Z.isMeshStandardMaterial?J.environment:null)),Wt=!0===Z.vertexColors&&!!te.attributes.color&&4===te.attributes.color.itemSize,Ot=!!Z.normalMap&&!!te.attributes.tangent,Nt=!!te.morphAttributes.position,an=!!te.morphAttributes.normal,Rs=!!te.morphAttributes.color,fr=Z.toneMapped?p.toneMapping:qt,pr=te.morphAttributes.position||te.morphAttributes.normal||te.morphAttributes.color,ci=void 0!==pr?pr.length:0,zt=ye.get(Z),mr=d.state.lights;!0!==_e||!0!==ne&&C===A||E.setState(Z,C,C===A&&Z.id===x);let pn=!1;Z.version===zt.__version?(zt.needsLights&&zt.lightsStateVersion!==mr.state.version||zt.outputEncoding!==Rt||fe.isInstancedMesh&&!1===zt.instancing||!fe.isInstancedMesh&&!0===zt.instancing||fe.isSkinnedMesh&&!1===zt.skinning||!fe.isSkinnedMesh&&!0===zt.skinning||zt.envMap!==At||!0===Z.fog&&zt.fog!==Mt||void 0!==zt.numClippingPlanes&&(zt.numClippingPlanes!==E.numPlanes||zt.numIntersection!==E.numIntersection)||zt.vertexAlphas!==Wt||zt.vertexTangents!==Ot||zt.morphTargets!==Nt||zt.morphNormals!==an||zt.morphColors!==Rs||zt.toneMapping!==fr||!0===Tt.isWebGL2&&zt.morphTargetsCount!==ci)&&(pn=!0):(pn=!0,zt.__version=Z.version);let ui=zt.currentProgram;!0===pn&&(ui=Mc(Z,J,fe));let Ji=!1,eo=!1,wc=!1;const Dn=ui.getUniforms(),to=zt.uniforms;if(ke.useProgram(ui.program)&&(Ji=!0,eo=!0,wc=!0),Z.id!==x&&(x=Z.id,eo=!0),Ji||A!==C){if(Dn.setValue(de,"projectionMatrix",C.projectionMatrix),Tt.logarithmicDepthBuffer&&Dn.setValue(de,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),A!==C&&(A=C,eo=!0,wc=!0),Z.isShaderMaterial||Z.isMeshPhongMaterial||Z.isMeshToonMaterial||Z.isMeshStandardMaterial||Z.envMap){const hi=Dn.map.cameraPosition;void 0!==hi&&hi.setValue(de,$e.setFromMatrixPosition(C.matrixWorld))}(Z.isMeshPhongMaterial||Z.isMeshToonMaterial||Z.isMeshLambertMaterial||Z.isMeshBasicMaterial||Z.isMeshStandardMaterial||Z.isShaderMaterial)&&Dn.setValue(de,"isOrthographic",!0===C.isOrthographicCamera),(Z.isMeshPhongMaterial||Z.isMeshToonMaterial||Z.isMeshLambertMaterial||Z.isMeshBasicMaterial||Z.isMeshStandardMaterial||Z.isShaderMaterial||Z.isShadowMaterial||fe.isSkinnedMesh)&&Dn.setValue(de,"viewMatrix",C.matrixWorldInverse)}if(fe.isSkinnedMesh){Dn.setOptional(de,fe,"bindMatrix"),Dn.setOptional(de,fe,"bindMatrixInverse");const hi=fe.skeleton;hi&&(Tt.floatVertexTextures?(null===hi.boneTexture&&hi.computeBoneTexture(),Dn.setValue(de,"boneTexture",hi.boneTexture,me),Dn.setValue(de,"boneTextureSize",hi.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Sc=te.morphAttributes;return(void 0!==Sc.position||void 0!==Sc.normal||void 0!==Sc.color&&!0===Tt.isWebGL2)&&Je.update(fe,te,Z,ui),(eo||zt.receiveShadow!==fe.receiveShadow)&&(zt.receiveShadow=fe.receiveShadow,Dn.setValue(de,"receiveShadow",fe.receiveShadow)),eo&&(Dn.setValue(de,"toneMappingExposure",p.toneMappingExposure),zt.needsLights&&function ev(C,J){C.ambientLightColor.needsUpdate=J,C.lightProbe.needsUpdate=J,C.directionalLights.needsUpdate=J,C.directionalLightShadows.needsUpdate=J,C.pointLights.needsUpdate=J,C.pointLightShadows.needsUpdate=J,C.spotLights.needsUpdate=J,C.spotLightShadows.needsUpdate=J,C.rectAreaLights.needsUpdate=J,C.hemisphereLights.needsUpdate=J}(to,wc),Mt&&!0===Z.fog&&$t.refreshFogUniforms(to,Mt),$t.refreshMaterialUniforms(to,Z,j,W,ue),ki.upload(de,zt.uniformsList,to,me)),Z.isShaderMaterial&&!0===Z.uniformsNeedUpdate&&(ki.upload(de,zt.uniformsList,to,me),Z.uniformsNeedUpdate=!1),Z.isSpriteMaterial&&Dn.setValue(de,"center",fe.center),Dn.setValue(de,"modelViewMatrix",fe.modelViewMatrix),Dn.setValue(de,"normalMatrix",fe.normalMatrix),Dn.setValue(de,"modelMatrix",fe.matrixWorld),ui}(C,J,te,Z,fe);ke.setMaterial(Z,St);let At=te.index;const Wt=te.attributes.position;if(null===At){if(void 0===Wt||0===Wt.count)return}else if(0===At.count)return;let Ot=1;!0===Z.wireframe&&(At=wt.getWireframeAttribute(te),Ot=2),Et.setup(fe,Z,Rt,te,At);let Nt,an=nt;null!==At&&(Nt=qe.get(At),an=pt,an.setIndex(Nt));const Rs=null!==At?At.count:Wt.count,fr=te.drawRange.start*Ot,pr=te.drawRange.count*Ot,ci=null!==Mt?Mt.start*Ot:0,zt=null!==Mt?Mt.count*Ot:1/0,mr=Math.max(fr,ci),pn=Math.min(Rs,fr+pr,ci+zt)-1,ui=Math.max(0,pn-mr+1);if(0!==ui){if(fe.isMesh)!0===Z.wireframe?(ke.setLineWidth(Z.wireframeLinewidth*ht()),an.setMode(1)):an.setMode(4);else if(fe.isLine){let Ji=Z.linewidth;void 0===Ji&&(Ji=1),ke.setLineWidth(Ji*ht()),an.setMode(fe.isLineSegments?1:fe.isLineLoop?2:3)}else fe.isPoints?an.setMode(0):fe.isSprite&&an.setMode(4);if(fe.isInstancedMesh)an.renderInstances(mr,ui,fe.count);else if(te.isInstancedBufferGeometry){const Ji=Math.min(te.instanceCount,te._maxInstanceCount);an.renderInstances(mr,ui,Ji)}else an.render(mr,ui)}},this.compile=function(C,J){d=I.get(C),d.init(),g.push(d),C.traverseVisible(function(te){te.isLight&&te.layers.test(J.layers)&&(d.pushLight(te),te.castShadow&&d.pushShadow(te))}),d.setupLights(p.physicallyCorrectLights),C.traverse(function(te){const Z=te.material;if(Z)if(Array.isArray(Z))for(let fe=0;fe<Z.length;fe++)Mc(Z[fe],C,te);else Mc(Z,C,te)}),g.pop(),d=null};let vt=null;function bt(){Dt.stop()}function Gt(){Dt.start()}const Dt=new Zc;function ai(C,J,te,Z){if(!1===C.visible)return;if(C.layers.test(J.layers))if(C.isGroup)te=C.renderOrder;else if(C.isLOD)!0===C.autoUpdate&&C.update(J);else if(C.isLight)d.pushLight(C),C.castShadow&&d.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||ve.intersectsSprite(C)){Z&&$e.setFromMatrixPosition(C.matrixWorld).applyMatrix4(Be);const St=gt.update(C),Rt=C.material;Rt.visible&&h.push(C,St,Rt,te,$e.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==It.render.frame&&(C.skeleton.update(),C.skeleton.frame=It.render.frame),!C.frustumCulled||ve.intersectsObject(C))){Z&&$e.setFromMatrixPosition(C.matrixWorld).applyMatrix4(Be);const St=gt.update(C),Rt=C.material;if(Array.isArray(Rt)){const At=St.groups;for(let Wt=0,Ot=At.length;Wt<Ot;Wt++){const Nt=At[Wt],an=Rt[Nt.materialIndex];an&&an.visible&&h.push(C,St,an,te,$e.z,Nt)}}else Rt.visible&&h.push(C,St,Rt,te,$e.z,null)}const Mt=C.children;for(let St=0,Rt=Mt.length;St<Rt;St++)ai(Mt[St],J,te,Z)}function li(C,J,te,Z){const fe=C.opaque,Mt=C.transmissive,St=C.transparent;d.setupLightsView(te),Mt.length>0&&function Z0(C,J,te){const Z=Tt.isWebGL2;null===ue&&(ue=new Pn(1,1,{generateMipmaps:!0,type:xt.has("EXT_color_buffer_half_float")?Pi:ei,minFilter:Qn,samples:Z&&!0===s?4:0})),p.getDrawingBufferSize(Me),Z?ue.setSize(Me.x,Me.y):ue.setSize(Co(Me.x),Co(Me.y));const fe=p.getRenderTarget();p.setRenderTarget(ue),p.clear();const Mt=p.toneMapping;p.toneMapping=qt,Xa(C,J,te),p.toneMapping=Mt,me.updateMultisampleRenderTarget(ue),me.updateRenderTargetMipmap(ue),p.setRenderTarget(fe)}(fe,J,te),Z&&ke.viewport(R.copy(Z)),fe.length>0&&Xa(fe,J,te),Mt.length>0&&Xa(Mt,J,te),St.length>0&&Xa(St,J,te),ke.buffers.depth.setTest(!0),ke.buffers.depth.setMask(!0),ke.buffers.color.setMask(!0),ke.setPolygonOffset(!1)}function Xa(C,J,te){const Z=!0===J.isScene?J.overrideMaterial:null;for(let fe=0,Mt=C.length;fe<Mt;fe++){const St=C[fe],Rt=St.object,At=St.geometry,Wt=null===Z?St.material:Z,Ot=St.group;Rt.layers.test(te.layers)&&q0(Rt,J,te,At,Wt,Ot)}}function q0(C,J,te,Z,fe,Mt){C.onBeforeRender(p,J,te,Z,fe,Mt),C.modelViewMatrix.multiplyMatrices(te.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),fe.onBeforeRender(p,J,te,Z,C,Mt),!0===fe.transparent&&fe.side===Se?(fe.side=ce,fe.needsUpdate=!0,p.renderBufferDirect(te,J,Z,fe,C,Mt),fe.side=tt,fe.needsUpdate=!0,p.renderBufferDirect(te,J,Z,fe,C,Mt),fe.side=Se):p.renderBufferDirect(te,J,Z,fe,C,Mt),C.onAfterRender(p,J,te,Z,fe,Mt)}function Mc(C,J,te){!0!==J.isScene&&(J=ct);const Z=ye.get(C),fe=d.state.lights,St=fe.state.version,Rt=dt.getParameters(C,fe.state,d.state.shadowsArray,J,te),At=dt.getProgramCacheKey(Rt);let Wt=Z.programs;Z.environment=C.isMeshStandardMaterial?J.environment:null,Z.fog=J.fog,Z.envMap=(C.isMeshStandardMaterial?at:He).get(C.envMap||Z.environment),void 0===Wt&&(C.addEventListener("dispose",Xe),Wt=new Map,Z.programs=Wt);let Ot=Wt.get(At);if(void 0!==Ot){if(Z.currentProgram===Ot&&Z.lightsStateVersion===St)return Zh(C,Rt),Ot}else Rt.uniforms=dt.getUniforms(C),C.onBuild(te,Rt,p),C.onBeforeCompile(Rt,p),Ot=dt.acquireProgram(Rt,At),Wt.set(At,Ot),Z.uniforms=Rt.uniforms;const Nt=Z.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||!0===C.clipping)&&(Nt.clippingPlanes=E.uniform),Zh(C,Rt),Z.needsLights=function tv(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&!0===C.lights}(C),Z.lightsStateVersion=St,Z.needsLights&&(Nt.ambientLightColor.value=fe.state.ambient,Nt.lightProbe.value=fe.state.probe,Nt.directionalLights.value=fe.state.directional,Nt.directionalLightShadows.value=fe.state.directionalShadow,Nt.spotLights.value=fe.state.spot,Nt.spotLightShadows.value=fe.state.spotShadow,Nt.rectAreaLights.value=fe.state.rectArea,Nt.ltc_1.value=fe.state.rectAreaLTC1,Nt.ltc_2.value=fe.state.rectAreaLTC2,Nt.pointLights.value=fe.state.point,Nt.pointLightShadows.value=fe.state.pointShadow,Nt.hemisphereLights.value=fe.state.hemi,Nt.directionalShadowMap.value=fe.state.directionalShadowMap,Nt.directionalShadowMatrix.value=fe.state.directionalShadowMatrix,Nt.spotShadowMap.value=fe.state.spotShadowMap,Nt.spotShadowMatrix.value=fe.state.spotShadowMatrix,Nt.pointShadowMap.value=fe.state.pointShadowMap,Nt.pointShadowMatrix.value=fe.state.pointShadowMatrix);const an=Ot.getUniforms(),Rs=ki.seqWithValue(an.seq,Nt);return Z.currentProgram=Ot,Z.uniformsList=Rs,Ot}function Zh(C,J){const te=ye.get(C);te.outputEncoding=J.outputEncoding,te.instancing=J.instancing,te.skinning=J.skinning,te.morphTargets=J.morphTargets,te.morphNormals=J.morphNormals,te.morphColors=J.morphColors,te.morphTargetsCount=J.morphTargetsCount,te.numClippingPlanes=J.numClippingPlanes,te.numIntersection=J.numClipIntersection,te.vertexAlphas=J.vertexAlphas,te.vertexTangents=J.vertexTangents,te.toneMapping=J.toneMapping}Dt.setAnimationLoop(function Ge(C){vt&&vt(C)}),"undefined"!=typeof self&&Dt.setContext(self),this.setAnimationLoop=function(C){vt=C,lt.setAnimationLoop(C),null===C?Dt.stop():Dt.start()},lt.addEventListener("sessionstart",bt),lt.addEventListener("sessionend",Gt),this.render=function(C,J){if(void 0===J||!0===J.isCamera){if(!0!==m){if(!0===C.autoUpdate&&C.updateMatrixWorld(),null===J.parent&&J.updateMatrixWorld(),!0===lt.enabled&&!0===lt.isPresenting&&(!0===lt.cameraAutoUpdate&&lt.updateCamera(J),J=lt.getCamera()),!0===C.isScene&&C.onBeforeRender(p,C,J,M),d=I.get(C,g.length),d.init(),g.push(d),Be.multiplyMatrices(J.projectionMatrix,J.matrixWorldInverse),ve.setFromProjectionMatrix(Be),ne=this.localClippingEnabled,_e=E.init(this.clippingPlanes,ne,J),h=Vt.get(C,f.length),h.init(),f.push(h),ai(C,J,0,p.sortObjects),h.finish(),!0===p.sortObjects&&h.sort(ge,Oe),!0===_e&&E.beginShadows(),ie.render(d.state.shadowsArray,C,J),!0===_e&&E.endShadows(),!0===this.info.autoReset&&this.info.reset(),Pe.render(h,C),d.setupLights(p.physicallyCorrectLights),J.isArrayCamera){const Z=J.cameras;for(let fe=0,Mt=Z.length;fe<Mt;fe++){const St=Z[fe];li(h,C,St,St.viewport)}}else li(h,C,J);null!==M&&(me.updateMultisampleRenderTarget(M),me.updateRenderTargetMipmap(M)),!0===C.isScene&&C.onAfterRender(p,C,J),Et.resetDefaultState(),x=-1,A=null,g.pop(),d=g.length>0?g[g.length-1]:null,f.pop(),h=f.length>0?f[f.length-1]:null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return M},this.setRenderTargetTextures=function(C,J,te){ye.get(C.texture).__webglTexture=J,ye.get(C.depthTexture).__webglTexture=te;const Z=ye.get(C);Z.__hasExternalTextures=!0,Z.__hasExternalTextures&&(Z.__autoAllocateDepthBuffer=void 0===te,Z.__autoAllocateDepthBuffer||!0===xt.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Z.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,J){const te=ye.get(C);te.__webglFramebuffer=J,te.__useDefaultFramebuffer=void 0===J},this.setRenderTarget=function(C,J=0,te=0){M=C,v=J,y=te;let Z=!0;if(C){const At=ye.get(C);void 0!==At.__useDefaultFramebuffer?(ke.bindFramebuffer(36160,null),Z=!1):void 0===At.__webglFramebuffer?me.setupRenderTarget(C):At.__hasExternalTextures&&me.rebindTextures(C,ye.get(C.texture).__webglTexture,ye.get(C.depthTexture).__webglTexture)}let fe=null,Mt=!1,St=!1;if(C){const At=C.texture;(At.isData3DTexture||At.isDataArrayTexture)&&(St=!0);const Wt=ye.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(fe=Wt[J],Mt=!0):fe=Tt.isWebGL2&&C.samples>0&&!1===me.useMultisampledRTT(C)?ye.get(C).__webglMultisampledFramebuffer:Wt,R.copy(C.viewport),U.copy(C.scissor),b=C.scissorTest}else R.copy(V).multiplyScalar(j).floor(),U.copy(le).multiplyScalar(j).floor(),b=q;if(ke.bindFramebuffer(36160,fe)&&Tt.drawBuffers&&Z&&ke.drawBuffers(C,fe),ke.viewport(R),ke.scissor(U),ke.setScissorTest(b),Mt){const At=ye.get(C.texture);de.framebufferTexture2D(36160,36064,34069+J,At.__webglTexture,te)}else if(St){const At=ye.get(C.texture);de.framebufferTextureLayer(36160,36064,At.__webglTexture,te||0,J||0)}x=-1},this.readRenderTargetPixels=function(C,J,te,Z,fe,Mt,St){if(!C||!C.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Rt=ye.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&void 0!==St&&(Rt=Rt[St]),Rt){ke.bindFramebuffer(36160,Rt);try{const At=C.texture,Wt=At.format,Ot=At.type;if(Wt!==X&&oe.convert(Wt)!==de.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const Nt=Ot===Pi&&(xt.has("EXT_color_buffer_half_float")||Tt.isWebGL2&&xt.has("EXT_color_buffer_float"));if(!(Ot===ei||oe.convert(Ot)===de.getParameter(35738)||Ot===ti&&(Tt.isWebGL2||xt.has("OES_texture_float")||xt.has("WEBGL_color_buffer_float"))||Nt))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");J>=0&&J<=C.width-Z&&te>=0&&te<=C.height-fe&&de.readPixels(J,te,Z,fe,oe.convert(Wt),oe.convert(Ot),Mt)}finally{const At=null!==M?ye.get(M).__webglFramebuffer:null;ke.bindFramebuffer(36160,At)}}},this.copyFramebufferToTexture=function(C,J,te=0){if(!0!==J.isFramebufferTexture)return void console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");const Z=Math.pow(2,-te),fe=Math.floor(J.image.width*Z),Mt=Math.floor(J.image.height*Z);me.setTexture2D(J,0),de.copyTexSubImage2D(3553,te,0,0,C.x,C.y,fe,Mt),ke.unbindTexture()},this.copyTextureToTexture=function(C,J,te,Z=0){const fe=J.image.width,Mt=J.image.height,St=oe.convert(te.format),Rt=oe.convert(te.type);me.setTexture2D(te,0),de.pixelStorei(37440,te.flipY),de.pixelStorei(37441,te.premultiplyAlpha),de.pixelStorei(3317,te.unpackAlignment),J.isDataTexture?de.texSubImage2D(3553,Z,C.x,C.y,fe,Mt,St,Rt,J.image.data):J.isCompressedTexture?de.compressedTexSubImage2D(3553,Z,C.x,C.y,J.mipmaps[0].width,J.mipmaps[0].height,St,J.mipmaps[0].data):de.texSubImage2D(3553,Z,C.x,C.y,St,Rt,J.image),0===Z&&te.generateMipmaps&&de.generateMipmap(3553),ke.unbindTexture()},this.copyTextureToTexture3D=function(C,J,te,Z,fe=0){if(p.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const Mt=C.max.x-C.min.x+1,St=C.max.y-C.min.y+1,Rt=C.max.z-C.min.z+1,At=oe.convert(Z.format),Wt=oe.convert(Z.type);let Ot;if(Z.isData3DTexture)me.setTexture3D(Z,0),Ot=32879;else{if(!Z.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");me.setTexture2DArray(Z,0),Ot=35866}de.pixelStorei(37440,Z.flipY),de.pixelStorei(37441,Z.premultiplyAlpha),de.pixelStorei(3317,Z.unpackAlignment);const Nt=de.getParameter(3314),an=de.getParameter(32878),Rs=de.getParameter(3316),fr=de.getParameter(3315),pr=de.getParameter(32877),ci=te.isCompressedTexture?te.mipmaps[0]:te.image;de.pixelStorei(3314,ci.width),de.pixelStorei(32878,ci.height),de.pixelStorei(3316,C.min.x),de.pixelStorei(3315,C.min.y),de.pixelStorei(32877,C.min.z),te.isDataTexture||te.isData3DTexture?de.texSubImage3D(Ot,fe,J.x,J.y,J.z,Mt,St,Rt,At,Wt,ci.data):te.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),de.compressedTexSubImage3D(Ot,fe,J.x,J.y,J.z,Mt,St,Rt,At,ci.data)):de.texSubImage3D(Ot,fe,J.x,J.y,J.z,Mt,St,Rt,At,Wt,ci),de.pixelStorei(3314,Nt),de.pixelStorei(32878,an),de.pixelStorei(3316,Rs),de.pixelStorei(3315,fr),de.pixelStorei(32877,pr),0===fe&&Z.generateMipmaps&&de.generateMipmap(Ot),ke.unbindTexture()},this.initTexture=function(C){me.setTexture2D(C,0),ke.unbindTexture()},this.resetState=function(){v=0,y=0,M=null,ke.reset(),Et.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Ht.prototype.isWebGLRenderer=!0,class Pg extends Ht{}.prototype.isWebGL1Renderer=!0;class ia{constructor(e,t=25e-5){this.name="",this.color=new Ze(e),this.density=t}clone(){return new ia(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}ia.prototype.isFogExp2=!0;class Dr{constructor(e,t=1,n=1e3){this.name="",this.color=new Ze(e),this.near=t,this.far=n}clone(){return new Dr(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Dr.prototype.isFog=!0;class sa extends Ft{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}sa.prototype.isScene=!0;class _s{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=Mr,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Nn()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Nn()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Nn()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}_s.prototype.isInterleavedBuffer=!0;const In=new T;class Vi{constructor(e,t,n,i=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)In.fromBufferAttribute(this,t),In.applyMatrix4(e),this.setXYZ(t,In.x,In.y,In.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)In.fromBufferAttribute(this,t),In.applyNormalMatrix(e),this.setXYZ(t,In.x,In.y,In.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)In.fromBufferAttribute(this,t),In.transformDirection(e),this.setXYZ(t,In.x,In.y,In.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return this.data.array[(e=e*this.data.stride+this.offset)+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return this.data.array[(e=e*this.data.stride+this.offset)+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return this.data.array[(e=e*this.data.stride+this.offset)+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new kt(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Vi(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}Vi.prototype.isInterleavedBufferAttribute=!0;class Bl extends un{constructor(e){super(),this.type="SpriteMaterial",this.color=new Ze(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let nr;Bl.prototype.isSpriteMaterial=!0;const Or=new T,ir=new T,sr=new T,rr=new pe,Nr=new pe,Cu=new ot,ra=new T,Fr=new T,oa=new T,Pu=new pe,Ul=new pe,Ru=new pe;function aa(r,e,t,n,i,s){rr.subVectors(r,t).addScalar(.5).multiply(n),void 0!==i?(Nr.x=s*rr.x-i*rr.y,Nr.y=i*rr.x+s*rr.y):Nr.copy(rr),r.copy(e),r.x+=Nr.x,r.y+=Nr.y,r.applyMatrix4(Cu)}(class Lu extends Ft{constructor(e){if(super(),this.type="Sprite",void 0===nr){nr=new ft;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new _s(t,5);nr.setIndex([0,1,2,0,2,3]),nr.setAttribute("position",new Vi(n,3,0,!1)),nr.setAttribute("uv",new Vi(n,2,3,!1))}this.geometry=nr,this.material=void 0!==e?e:new Bl,this.center=new pe(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ir.setFromMatrixScale(this.matrixWorld),Cu.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),sr.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&ir.multiplyScalar(-sr.z);const n=this.material.rotation;let i,s;0!==n&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;aa(ra.set(-.5,-.5,0),sr,o,ir,i,s),aa(Fr.set(.5,-.5,0),sr,o,ir,i,s),aa(oa.set(.5,.5,0),sr,o,ir,i,s),Pu.set(0,0),Ul.set(1,0),Ru.set(1,1);let a=e.ray.intersectTriangle(ra,Fr,oa,!1,Or);if(null===a&&(aa(Fr.set(-.5,.5,0),sr,o,ir,i,s),Ul.set(0,1),a=e.ray.intersectTriangle(ra,oa,Fr,!1,Or),null===a))return;const l=e.ray.origin.distanceTo(Or);l<e.near||l>e.far||t.push({distance:l,point:Or.clone(),uv:dn.getUV(Or,ra,Fr,oa,Pu,Ul,Ru,new pe),face:null,object:this})}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}).prototype.isSprite=!0;const Du=new T,Ou=new Bt,Nu=new Bt,Lg=new T,Fu=new ot;class ca extends yn{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ot,this.bindMatrixInverse=new ot}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Bt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;Ou.fromBufferAttribute(i.attributes.skinIndex,e),Nu.fromBufferAttribute(i.attributes.skinWeight,e),Du.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=Nu.getComponent(s);if(0!==o){const a=Ou.getComponent(s);Fu.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(Lg.copy(Du).applyMatrix4(Fu),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}ca.prototype.isSkinnedMesh=!0;class ua extends Ft{constructor(){super(),this.type="Bone"}}ua.prototype.isBone=!0;class bs extends Cn{constructor(e=null,t=1,n=1,i,s,o,a,l,c=nn,u=nn,h,d){super(null,o,a,l,c,u,i,s,h,d),this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}bs.prototype.isDataTexture=!0;const Bu=new ot,Ig=new ot;class ha{constructor(e=[],t=[]){this.uuid=Nn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new ot)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new ot;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,o=e.length;s<o;s++)Bu.multiplyMatrices(e[s]?e[s].matrixWorld:Ig,t[s]),Bu.toArray(n,16*s);null!==i&&(i.needsUpdate=!0)}clone(){return new ha(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=Oc(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new bs(t,e,e,X,ti);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let o=t[s];void 0===o&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new ua),this.bones.push(o),this.boneInverses.push((new ot).fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++)e.bones.push(t[i].uuid),e.boneInverses.push(n[i].toArray());return e}}class Ms extends kt{constructor(e,t,n,i=1){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}Ms.prototype.isInstancedBufferAttribute=!0;const Uu=new ot,zu=new ot,da=[],Br=new yn;class zl extends yn{constructor(e,t,n){super(e,t),this.instanceMatrix=new Ms(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Br.geometry=this.geometry,Br.material=this.material,void 0!==Br.material)for(let s=0;s<i;s++){this.getMatrixAt(s,Uu),zu.multiplyMatrices(n,Uu),Br.matrixWorld=zu,Br.raycast(e,da);for(let o=0,a=da.length;o<a;o++){const l=da[o];l.instanceId=s,l.object=this,t.push(l)}da.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new Ms(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}zl.prototype.isInstancedMesh=!0;class Mn extends un{constructor(e){super(),this.type="LineBasicMaterial",this.color=new Ze(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}Mn.prototype.isLineBasicMaterial=!0;const Hu=new T,Gu=new T,Wu=new ot,Hl=new ms,fa=new Ni;class ji extends Ft{constructor(e=new ft,t=new Mn){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)Hu.fromBufferAttribute(t,i-1),Gu.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Hu.distanceTo(Gu);e.setAttribute("lineDistance",new st(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),fa.copy(n.boundingSphere),fa.applyMatrix4(i),fa.radius+=s,!1===e.ray.intersectsSphere(fa))return;Wu.copy(i).invert(),Hl.copy(e.ray).applyMatrix4(Wu);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new T,u=new T,h=new T,d=new T,f=this.isLineSegments?2:1;if(n.isBufferGeometry){const g=n.index,m=n.attributes.position;if(null!==g)for(let M=Math.max(0,o.start),x=Math.min(g.count,o.start+o.count)-1;M<x;M+=f){const A=g.getX(M),R=g.getX(M+1);if(c.fromBufferAttribute(m,A),u.fromBufferAttribute(m,R),Hl.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const b=e.ray.origin.distanceTo(d);b<e.near||b>e.far||t.push({distance:b,point:h.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}else for(let M=Math.max(0,o.start),x=Math.min(m.count,o.start+o.count)-1;M<x;M+=f){if(c.fromBufferAttribute(m,M),u.fromBufferAttribute(m,M+1),Hl.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const R=e.ray.origin.distanceTo(d);R<e.near||R>e.far||t.push({distance:R,point:h.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}ji.prototype.isLine=!0;const ku=new T,Vu=new T;class ws extends ji{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)ku.fromBufferAttribute(t,i),Vu.fromBufferAttribute(t,i+1),n[i]=0===i?0:n[i-1],n[i+1]=n[i]+ku.distanceTo(Vu);e.setAttribute("lineDistance",new st(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}ws.prototype.isLineSegments=!0;class Gl extends ji{constructor(e,t){super(e,t),this.type="LineLoop"}}Gl.prototype.isLineLoop=!0;class pa extends un{constructor(e){super(),this.type="PointsMaterial",this.color=new Ze(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}pa.prototype.isPointsMaterial=!0;const ju=new ot,Wl=new ms,ma=new Ni,ga=new T;class kl extends Ft{constructor(e=new ft,t=new pa){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),ma.copy(n.boundingSphere),ma.applyMatrix4(i),ma.radius+=s,!1===e.ray.intersectsSphere(ma))return;ju.copy(i).invert(),Wl.copy(e.ray).applyMatrix4(ju);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a;if(n.isBufferGeometry){const c=n.index,h=n.attributes.position;if(null!==c)for(let g=Math.max(0,o.start),p=Math.min(c.count,o.start+o.count);g<p;g++){const m=c.getX(g);ga.fromBufferAttribute(h,m),Xu(ga,m,l,i,e,t,this)}else for(let g=Math.max(0,o.start),p=Math.min(h.count,o.start+o.count);g<p;g++)ga.fromBufferAttribute(h,g),Xu(ga,g,l,i,e,t,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function Xu(r,e,t,n,i,s,o){const a=Wl.distanceSqToPoint(r);if(a<t){const l=new T;Wl.closestPointToPoint(r,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}kl.prototype.isPoints=!0,class Dg extends Cn{constructor(e,t,n,i,s,o,a,l,c){super(e,t,n,i,s,o,a,l,c),this.minFilter=void 0!==o?o:Qt,this.magFilter=void 0!==s?s:Qt,this.generateMipmaps=!1;const u=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)})}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e==0&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}.prototype.isVideoTexture=!0,class Og extends Cn{constructor(e,t,n){super({width:e,height:t}),this.format=n,this.magFilter=nn,this.minFilter=nn,this.generateMipmaps=!1,this.needsUpdate=!0}}.prototype.isFramebufferTexture=!0;(class $u extends Cn{constructor(e,t,n,i,s,o,a,l,c,u,h,d){super(null,o,a,l,c,u,i,s,h,d),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}).prototype.isCompressedTexture=!0;class Ku extends Cn{constructor(e,t,n,i,s,o,a,l,c){super(e,t,n,i,s,o,a,l,c),this.needsUpdate=!0}}Ku.prototype.isCanvasTexture=!0;class jn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let o;o=t||e*n[s-1];let c,a=0,l=s-1;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else{if(!(c>0)){l=i;break}l=i-1}if(i=l,n[i]===o)return i/(s-1);const u=n[i];return(i+(o-u)/(n[i+1]-u))/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),l=t||(o.isVector2?new pe:new T);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new T,i=[],s=[],o=[],a=new T,l=new ot;for(let f=0;f<=e;f++)i[f]=this.getTangentAt(f/e,new T);s[0]=new T,o[0]=new T;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),d<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let f=1;f<=e;f++){if(s[f]=s[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const g=Math.acos(cn(i[f-1].dot(i[f]),-1,1));s[f].applyMatrix4(l.makeRotationAxis(a,g))}o[f].crossVectors(i[f],s[f])}if(!0===t){let f=Math.acos(cn(s[0].dot(s[e]),-1,1));f/=e,i[0].dot(a.crossVectors(s[0],s[e]))>0&&(f=-f);for(let g=1;g<=e;g++)s[g].applyMatrix4(l.makeRotationAxis(i[g],f*g)),o[g].crossVectors(i[g],s[g])}return{tangents:i,normals:s,binormals:o}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class va extends jn{constructor(e=0,t=0,n=1,i=1,s=0,o=2*Math.PI,a=!1,l=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t){const n=t||new pe,i=2*Math.PI;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(s=o?0:i),!0===this.aClockwise&&!o&&(s===i?s=-i:s-=i);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*u-f*h+this.aX,c=d*h+f*u+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}va.prototype.isEllipseCurve=!0;class Yu extends va{constructor(e,t,n,i,s,o){super(e,t,n,n,i,s,o),this.type="ArcCurve"}}function Vl(){let r=0,e=0,t=0,n=0;function i(s,o,a,l){r=s,e=a,t=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){i(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,h){let d=(o-s)/c-(a-s)/(c+u)+(a-o)/u,f=(a-o)/u-(l-o)/(u+h)+(l-a)/h;d*=u,f*=u,i(o,a,d,f)},calc:function(s){const o=s*s;return r+e*s+t*o+n*(o*s)}}}Yu.prototype.isArcCurve=!0;const ya=new T,jl=new Vl,Xl=new Vl,$l=new Vl;class Ju extends jn{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new T){const n=t,i=this.points,s=i.length,o=(s-(this.closed?0:1))*e;let c,u,a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:0===l&&a===s-1&&(a=s-2,l=1),this.closed||a>0?c=i[(a-1)%s]:(ya.subVectors(i[0],i[1]).add(i[0]),c=ya);const h=i[a%s],d=i[(a+1)%s];if(this.closed||a+2<s?u=i[(a+2)%s]:(ya.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=ya),"centripetal"===this.curveType||"chordal"===this.curveType){const f="chordal"===this.curveType?.5:.25;let g=Math.pow(c.distanceToSquared(h),f),p=Math.pow(h.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(u),f);p<1e-4&&(p=1),g<1e-4&&(g=p),m<1e-4&&(m=p),jl.initNonuniformCatmullRom(c.x,h.x,d.x,u.x,g,p,m),Xl.initNonuniformCatmullRom(c.y,h.y,d.y,u.y,g,p,m),$l.initNonuniformCatmullRom(c.z,h.z,d.z,u.z,g,p,m)}else"catmullrom"===this.curveType&&(jl.initCatmullRom(c.x,h.x,d.x,u.x,this.tension),Xl.initCatmullRom(c.y,h.y,d.y,u.y,this.tension),$l.initCatmullRom(c.z,h.z,d.z,u.z,this.tension));return n.set(jl.calc(l),Xl.calc(l),$l.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++)this.points.push(e.points[t].clone());return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++)e.points.push(this.points[t].toArray());return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push((new T).fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Zu(r,e,t,n,i){const s=.5*(n-e),o=.5*(i-t),a=r*r;return(2*t-2*n+s+o)*(r*a)+(-3*t+3*n-2*s-o)*a+s*r+t}function Ur(r,e,t,n){return function Ng(r,e){const t=1-r;return t*t*e}(r,e)+function Fg(r,e){return 2*(1-r)*r*e}(r,t)+function Bg(r,e){return r*r*e}(r,n)}function zr(r,e,t,n,i){return function Ug(r,e){const t=1-r;return t*t*t*e}(r,e)+function zg(r,e){const t=1-r;return 3*t*t*r*e}(r,t)+function Hg(r,e){return 3*(1-r)*r*r*e}(r,n)+function Gg(r,e){return r*r*r*e}(r,i)}Ju.prototype.isCatmullRomCurve3=!0;class Kl extends jn{constructor(e=new pe,t=new pe,n=new pe,i=new pe){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new pe){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(zr(e,i.x,s.x,o.x,a.x),zr(e,i.y,s.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Kl.prototype.isCubicBezierCurve=!0;class qu extends jn{constructor(e=new T,t=new T,n=new T,i=new T){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new T){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(zr(e,i.x,s.x,o.x,a.x),zr(e,i.y,s.y,o.y,a.y),zr(e,i.z,s.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}qu.prototype.isCubicBezierCurve3=!0;class xa extends jn{constructor(e=new pe,t=new pe){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new pe){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new pe;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}xa.prototype.isLineCurve=!0;class Yl extends jn{constructor(e=new pe,t=new pe,n=new pe){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new pe){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(Ur(e,i.x,s.x,o.x),Ur(e,i.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Yl.prototype.isQuadraticBezierCurve=!0;class Jl extends jn{constructor(e=new T,t=new T,n=new T){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new T){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(Ur(e,i.x,s.x,o.x),Ur(e,i.y,s.y,o.y),Ur(e,i.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Jl.prototype.isQuadraticBezierCurve3=!0;class Zl extends jn{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new pe){const n=t,i=this.points,s=(i.length-1)*e,o=Math.floor(s),a=s-o,l=i[0===o?o:o-1],c=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(Zu(a,l.x,c.x,u.x,h.x),Zu(a,l.y,c.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++)this.points.push(e.points[t].clone());return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++)e.points.push(this.points[t].toArray());return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push((new pe).fromArray(i))}return this}}Zl.prototype.isSplineCurve=!0;var ql=Object.freeze({__proto__:null,ArcCurve:Yu,CatmullRomCurve3:Ju,CubicBezierCurve:Kl,CubicBezierCurve3:qu,EllipseCurve:va,LineCurve:xa,LineCurve3:class Wg extends jn{constructor(e=new T,t=new T){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new T){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},QuadraticBezierCurve:Yl,QuadraticBezierCurve3:Jl,SplineCurve:Zl});class kg extends jn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new xa(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,a=this.curves[s],l=a.getLength();return a.getPointAt(0===l?0:1-o/l,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],l=o.getPoints(o.isEllipseCurve?2*e:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++)this.curves.push(e.curves[t].clone());return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++)e.curves.push(this.curves[t].toJSON());return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push((new ql[i.type]).fromJSON(i))}return this}}class Hr extends kg{constructor(e){super(),this.type="Path",this.currentPoint=new pe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new xa(this.currentPoint.clone(),new pe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new Yl(this.currentPoint.clone(),new pe(e,t),new pe(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,o){const a=new Kl(this.currentPoint.clone(),new pe(e,t),new pe(n,i),new pe(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Zl(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,o){return this.absarc(e+this.currentPoint.x,t+this.currentPoint.y,n,i,s,o),this}absarc(e,t,n,i,s,o){return this.absellipse(e,t,n,n,i,s,o),this}ellipse(e,t,n,i,s,o,a,l){return this.absellipse(e+this.currentPoint.x,t+this.currentPoint.y,n,i,s,o,a,l),this}absellipse(e,t,n,i,s,o,a,l){const c=new va(e,t,n,i,s,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Ss extends ft{constructor(e=1,t=1,n=1,i=8,s=1,o=!1,a=0,l=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),s=Math.floor(s);const u=[],h=[],d=[],f=[];let g=0;const p=[],m=n/2;let v=0;function M(x){const A=g,R=new pe,U=new T;let b=0;const D=!0===x?e:t,W=!0===x?1:-1;for(let ge=1;ge<=i;ge++)h.push(0,m*W,0),d.push(0,W,0),f.push(.5,.5),g++;const j=g;for(let ge=0;ge<=i;ge++){const V=ge/i*l+a,le=Math.cos(V),q=Math.sin(V);U.x=D*q,U.y=m*W,U.z=D*le,h.push(U.x,U.y,U.z),d.push(0,W,0),R.x=.5*le+.5,R.y=.5*q*W+.5,f.push(R.x,R.y),g++}for(let ge=0;ge<i;ge++){const Oe=A+ge,V=j+ge;!0===x?u.push(V,V+1,Oe):u.push(V+1,V,Oe),b+=3}c.addGroup(v,b,!0===x?1:2),v+=b}(function y(){const x=new T,A=new T;let R=0;const U=(t-e)/n;for(let b=0;b<=s;b++){const D=[],W=b/s,j=W*(t-e)+e;for(let ge=0;ge<=i;ge++){const Oe=ge/i,V=Oe*l+a,le=Math.sin(V),q=Math.cos(V);A.x=j*le,A.y=-W*n+m,A.z=j*q,h.push(A.x,A.y,A.z),x.set(le,U,q).normalize(),d.push(x.x,x.y,x.z),f.push(Oe,1-W),D.push(g++)}p.push(D)}for(let b=0;b<i;b++)for(let D=0;D<s;D++){const j=p[D+1][b],ge=p[D+1][b+1],Oe=p[D][b+1];u.push(p[D][b],j,Oe),u.push(j,ge,Oe),R+=6}c.addGroup(v,R,0),v+=R})(),!1===o&&(e>0&&M(!0),t>0&&M(!1)),this.setIndex(u),this.setAttribute("position",new st(h,3)),this.setAttribute("normal",new st(d,3)),this.setAttribute("uv",new st(f,2))}static fromJSON(e){return new Ss(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Wr extends Ss{constructor(e=1,t=1,n=8,i=1,s=!1,o=0,a=2*Math.PI){super(0,e,t,n,i,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Wr(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Xi extends ft{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],o=[];function l(y,M,x,A){const R=A+1,U=[];for(let b=0;b<=R;b++){U[b]=[];const D=y.clone().lerp(x,b/R),W=M.clone().lerp(x,b/R),j=R-b;for(let ge=0;ge<=j;ge++)U[b][ge]=0===ge&&b===R?D:D.clone().lerp(W,ge/j)}for(let b=0;b<R;b++)for(let D=0;D<2*(R-b)-1;D++){const W=Math.floor(D/2);D%2==0?(d(U[b][W+1]),d(U[b+1][W]),d(U[b][W])):(d(U[b][W+1]),d(U[b+1][W+1]),d(U[b+1][W]))}}function d(y){s.push(y.x,y.y,y.z)}function f(y,M){const x=3*y;M.x=e[x+0],M.y=e[x+1],M.z=e[x+2]}function p(y,M,x,A){A<0&&1===y.x&&(o[M]=y.x-1),0===x.x&&0===x.z&&(o[M]=A/2/Math.PI+.5)}function m(y){return Math.atan2(y.z,-y.x)}function v(y){return Math.atan2(-y.y,Math.sqrt(y.x*y.x+y.z*y.z))}(function a(y){const M=new T,x=new T,A=new T;for(let R=0;R<t.length;R+=3)f(t[R+0],M),f(t[R+1],x),f(t[R+2],A),l(M,x,A,y)})(i),function c(y){const M=new T;for(let x=0;x<s.length;x+=3)M.x=s[x+0],M.y=s[x+1],M.z=s[x+2],M.normalize().multiplyScalar(y),s[x+0]=M.x,s[x+1]=M.y,s[x+2]=M.z}(n),function u(){const y=new T;for(let M=0;M<s.length;M+=3){y.x=s[M+0],y.y=s[M+1],y.z=s[M+2];const x=m(y)/2/Math.PI+.5,A=v(y)/Math.PI+.5;o.push(x,1-A)}(function g(){const y=new T,M=new T,x=new T,A=new T,R=new pe,U=new pe,b=new pe;for(let D=0,W=0;D<s.length;D+=9,W+=6){y.set(s[D+0],s[D+1],s[D+2]),M.set(s[D+3],s[D+4],s[D+5]),x.set(s[D+6],s[D+7],s[D+8]),R.set(o[W+0],o[W+1]),U.set(o[W+2],o[W+3]),b.set(o[W+4],o[W+5]),A.copy(y).add(M).add(x).divideScalar(3);const j=m(A);p(R,W+0,y,j),p(U,W+2,M,j),p(b,W+4,x,j)}})(),function h(){for(let y=0;y<o.length;y+=6){const M=o[y+0],x=o[y+2],A=o[y+4],R=Math.max(M,x,A),U=Math.min(M,x,A);R>.9&&U<.1&&(M<.2&&(o[y+0]+=1),x<.2&&(o[y+2]+=1),A<.2&&(o[y+4]+=1))}}()}(),this.setAttribute("position",new st(s,3)),this.setAttribute("normal",new st(s.slice(),3)),this.setAttribute("uv",new st(o,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new Xi(e.vertices,e.indices,e.radius,e.details)}}new T,new T,new T,new dn;class wi extends Hr{constructor(e){super(e),this.uuid=Nn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++)this.holes.push(e.holes[t].clone());return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++)e.holes.push(this.holes[t].toJSON());return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push((new Hr).fromJSON(i))}return this}}function eh(r,e,t,n,i){let s,o;if(i===function a0(r,e,t,n){let i=0;for(let s=e,o=t-n;s<t;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}(r,e,t,n)>0)for(s=e;s<t;s+=n)o=ih(s,r[s],r[s+1],o);else for(s=t-n;s>=e;s-=n)o=ih(s,r[s],r[s+1],o);return o&&Ta(o,o.next)&&(jr(o),o=o.next),o}function $i(r,e){if(!r)return r;e||(e=r);let n,t=r;do{if(n=!1,t.steiner||!Ta(t,t.next)&&0!==en(t.prev,t,t.next))t=t.next;else{if(jr(t),t=e=t.prev,t===t.next)break;n=!0}}while(n||t!==e);return e}function kr(r,e,t,n,i,s,o){if(!r)return;!o&&s&&function e0(r,e,t,n){let i=r;do{null===i.z&&(i.z=ec(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,function t0(r){let e,t,n,i,s,o,a,l,c=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,n=t,a=0,e=0;e<c&&(a++,n=n.nextZ,n);e++);for(l=c;a>0||l>0&&n;)0!==a&&(0===l||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,l--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,c*=2}while(o>1)}(i)}(r,n,i,s);let l,c,a=r;for(;r.prev!==r.next;)if(l=r.prev,c=r.next,s?Xg(r,n,i,s):jg(r))e.push(l.i/t),e.push(r.i/t),e.push(c.i/t),jr(r),r=c.next,a=c.next;else if((r=c)===a){o?1===o?kr(r=$g($i(r),e,t),e,t,n,i,s,2):2===o&&Kg(r,e,t,n,i,s):kr($i(r),e,t,n,i,s,1);break}}function jg(r){const e=r.prev,t=r,n=r.next;if(en(e,t,n)>=0)return!1;let i=r.next.next;for(;i!==r.prev;){if(or(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&en(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function Xg(r,e,t,n){const i=r.prev,s=r,o=r.next;if(en(i,s,o)>=0)return!1;const c=i.x>s.x?i.x>o.x?i.x:o.x:s.x>o.x?s.x:o.x,u=i.y>s.y?i.y>o.y?i.y:o.y:s.y>o.y?s.y:o.y,h=ec(i.x<s.x?i.x<o.x?i.x:o.x:s.x<o.x?s.x:o.x,i.y<s.y?i.y<o.y?i.y:o.y:s.y<o.y?s.y:o.y,e,t,n),d=ec(c,u,e,t,n);let f=r.prevZ,g=r.nextZ;for(;f&&f.z>=h&&g&&g.z<=d;){if(f!==r.prev&&f!==r.next&&or(i.x,i.y,s.x,s.y,o.x,o.y,f.x,f.y)&&en(f.prev,f,f.next)>=0||(f=f.prevZ,g!==r.prev&&g!==r.next&&or(i.x,i.y,s.x,s.y,o.x,o.y,g.x,g.y)&&en(g.prev,g,g.next)>=0))return!1;g=g.nextZ}for(;f&&f.z>=h;){if(f!==r.prev&&f!==r.next&&or(i.x,i.y,s.x,s.y,o.x,o.y,f.x,f.y)&&en(f.prev,f,f.next)>=0)return!1;f=f.prevZ}for(;g&&g.z<=d;){if(g!==r.prev&&g!==r.next&&or(i.x,i.y,s.x,s.y,o.x,o.y,g.x,g.y)&&en(g.prev,g,g.next)>=0)return!1;g=g.nextZ}return!0}function $g(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!Ta(i,s)&&th(i,n,n.next,s)&&Vr(i,s)&&Vr(s,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(s.i/t),jr(n),jr(n.next),n=r=s),n=n.next}while(n!==r);return $i(n)}function Kg(r,e,t,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&s0(o,a)){let l=nh(o,a);return o=$i(o,o.next),l=$i(l,l.next),kr(o,e,t,n,i,s),void kr(l,e,t,n,i,s)}a=a.next}o=o.next}while(o!==r)}function Jg(r,e){return r.x-e.x}function Zg(r,e){if(e=function qg(r,e){let t=e;const n=r.x,i=r.y;let o,s=-1/0;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const d=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=n&&d>s){if(s=d,d===n){if(i===t.y)return t;if(i===t.next.y)return t.next}o=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!o)return null;if(n===s)return o;const a=o,l=o.x,c=o.y;let h,u=1/0;t=o;do{n>=t.x&&t.x>=l&&n!==t.x&&or(i<c?n:s,i,l,c,i<c?s:n,i,t.x,t.y)&&(h=Math.abs(i-t.y)/(n-t.x),Vr(t,r)&&(h<u||h===u&&(t.x>o.x||t.x===o.x&&Qg(o,t)))&&(o=t,u=h)),t=t.next}while(t!==a);return o}(r,e),e){const t=nh(e,r);$i(e,e.next),$i(t,t.next)}}function Qg(r,e){return en(r.prev,r,e.prev)<0&&en(e.next,r,r.next)<0}function ec(r,e,t,n,i){return(r=1431655765&((r=858993459&((r=252645135&((r=16711935&((r=32767*(r-t)*i)|r<<8))|r<<4))|r<<2))|r<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function n0(r){let e=r,t=r;do{(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next}while(e!==r);return t}function or(r,e,t,n,i,s,o,a){return(i-o)*(e-a)-(r-o)*(s-a)>=0&&(r-o)*(n-a)-(t-o)*(e-a)>=0&&(t-o)*(s-a)-(i-o)*(n-a)>=0}function s0(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!function r0(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&th(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}(r,e)&&(Vr(r,e)&&Vr(e,r)&&function o0(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do{t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next}while(t!==r);return n}(r,e)&&(en(r.prev,r,e.prev)||en(r,e.prev,e))||Ta(r,e)&&en(r.prev,r,r.next)>0&&en(e.prev,e,e.next)>0)}function en(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Ta(r,e){return r.x===e.x&&r.y===e.y}function th(r,e,t,n){const i=Ca(en(r,e,t)),s=Ca(en(r,e,n)),o=Ca(en(t,n,r)),a=Ca(en(t,n,e));return!!(i!==s&&o!==a||0===i&&Aa(r,t,e)||0===s&&Aa(r,n,e)||0===o&&Aa(t,r,n)||0===a&&Aa(t,e,n))}function Aa(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Ca(r){return r>0?1:r<0?-1:0}function Vr(r,e){return en(r.prev,r,r.next)<0?en(r,e,r.next)>=0&&en(r,r.prev,e)>=0:en(r,e,r.prev)<0||en(r,r.next,e)<0}function nh(r,e){const t=new tc(r.i,r.x,r.y),n=new tc(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function ih(r,e,t,n){const i=new tc(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function jr(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function tc(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Si{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return.5*n}static isClockWise(e){return Si.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];sh(e),rh(n,e);let o=e.length;t.forEach(sh);for(let l=0;l<t.length;l++)i.push(o),o+=t[l].length,rh(n,t[l]);const a=function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=eh(r,0,i,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,u,h,d,f;if(n&&(s=function Yg(r,e,t,n){const i=[];let s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*n,l=s<o-1?e[s+1]*n:r.length,c=eh(r,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(n0(c));for(i.sort(Jg),s=0;s<i.length;s++)Zg(i[s],t),t=$i(t,t.next);return t}(r,e,s,t)),r.length>80*t){a=c=r[0],l=u=r[1];for(let g=t;g<i;g+=t)h=r[g],d=r[g+1],h<a&&(a=h),d<l&&(l=d),h>c&&(c=h),d>u&&(u=d);f=Math.max(c-a,u-l),f=0!==f?1/f:0}return kr(s,o,t,a,l,f),o}(n,i);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function sh(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function rh(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Ki extends ft{constructor(e=new wi([new pe(.5,.5),new pe(-.5,.5),new pe(-.5,-.5),new pe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let a=0,l=e.length;a<l;a++)o(e[a]);function o(a){const l=[],c=void 0!==t.curveSegments?t.curveSegments:12,u=void 0!==t.steps?t.steps:1;let h=void 0!==t.depth?t.depth:1,d=void 0===t.bevelEnabled||t.bevelEnabled,f=void 0!==t.bevelThickness?t.bevelThickness:.2,g=void 0!==t.bevelSize?t.bevelSize:f-.1,p=void 0!==t.bevelOffset?t.bevelOffset:0,m=void 0!==t.bevelSegments?t.bevelSegments:3;const v=t.extrudePath,y=void 0!==t.UVGenerator?t.UVGenerator:l0;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=t.amount);let M,A,R,U,b,x=!1;v&&(M=v.getSpacedPoints(u),x=!0,d=!1,A=v.computeFrenetFrames(u,!1),R=new T,U=new T,b=new T),d||(m=0,f=0,g=0,p=0);const D=a.extractPoints(c);let W=D.shape;const j=D.holes;if(!Si.isClockWise(W)){W=W.reverse();for(let ye=0,me=j.length;ye<me;ye++){const He=j[ye];Si.isClockWise(He)&&(j[ye]=He.reverse())}}const Oe=Si.triangulateShape(W,j),V=W;for(let ye=0,me=j.length;ye<me;ye++)W=W.concat(j[ye]);function le(ye,me,He){return me||console.error("THREE.ExtrudeGeometry: vec does not exist"),me.clone().multiplyScalar(He).add(ye)}const q=W.length,ve=Oe.length;function _e(ye,me,He){let at,qe,wt;const gt=ye.x-me.x,dt=ye.y-me.y,$t=He.x-ye.x,Vt=He.y-ye.y,I=gt*gt+dt*dt;if(Math.abs(gt*Vt-dt*$t)>Number.EPSILON){const ie=Math.sqrt(I),Pe=Math.sqrt($t*$t+Vt*Vt),Je=me.x-dt/ie,nt=me.y+gt/ie,Et=((He.x-Vt/Pe-Je)*Vt-(He.y+$t/Pe-nt)*$t)/(gt*Vt-dt*$t);at=Je+gt*Et-ye.x,qe=nt+dt*Et-ye.y;const Pt=at*at+qe*qe;if(Pt<=2)return new pe(at,qe);wt=Math.sqrt(Pt/2)}else{let ie=!1;gt>Number.EPSILON?$t>Number.EPSILON&&(ie=!0):gt<-Number.EPSILON?$t<-Number.EPSILON&&(ie=!0):Math.sign(dt)===Math.sign(Vt)&&(ie=!0),ie?(at=-dt,qe=gt,wt=Math.sqrt(I)):(at=gt,qe=dt,wt=Math.sqrt(I/2))}return new pe(at/wt,qe/wt)}const ne=[];for(let ye=0,me=V.length,He=me-1,at=ye+1;ye<me;ye++,He++,at++)He===me&&(He=0),at===me&&(at=0),ne[ye]=_e(V[ye],V[He],V[at]);const ue=[];let Be,Me=ne.concat();for(let ye=0,me=j.length;ye<me;ye++){const He=j[ye];Be=[];for(let at=0,qe=He.length,wt=qe-1,gt=at+1;at<qe;at++,wt++,gt++)wt===qe&&(wt=0),gt===qe&&(gt=0),Be[at]=_e(He[at],He[wt],He[gt]);ue.push(Be),Me=Me.concat(Be)}for(let ye=0;ye<m;ye++){const me=ye/m,He=f*Math.cos(me*Math.PI/2),at=g*Math.sin(me*Math.PI/2)+p;for(let qe=0,wt=V.length;qe<wt;qe++){const gt=le(V[qe],ne[qe],at);Ut(gt.x,gt.y,-He)}for(let qe=0,wt=j.length;qe<wt;qe++){const gt=j[qe];Be=ue[qe];for(let dt=0,$t=gt.length;dt<$t;dt++){const Vt=le(gt[dt],Be[dt],at);Ut(Vt.x,Vt.y,-He)}}}const $e=g+p;for(let ye=0;ye<q;ye++){const me=d?le(W[ye],Me[ye],$e):W[ye];x?(U.copy(A.normals[0]).multiplyScalar(me.x),R.copy(A.binormals[0]).multiplyScalar(me.y),b.copy(M[0]).add(U).add(R),Ut(b.x,b.y,b.z)):Ut(me.x,me.y,0)}for(let ye=1;ye<=u;ye++)for(let me=0;me<q;me++){const He=d?le(W[me],Me[me],$e):W[me];x?(U.copy(A.normals[ye]).multiplyScalar(He.x),R.copy(A.binormals[ye]).multiplyScalar(He.y),b.copy(M[ye]).add(U).add(R),Ut(b.x,b.y,b.z)):Ut(He.x,He.y,h/u*ye)}for(let ye=m-1;ye>=0;ye--){const me=ye/m,He=f*Math.cos(me*Math.PI/2),at=g*Math.sin(me*Math.PI/2)+p;for(let qe=0,wt=V.length;qe<wt;qe++){const gt=le(V[qe],ne[qe],at);Ut(gt.x,gt.y,h+He)}for(let qe=0,wt=j.length;qe<wt;qe++){const gt=j[qe];Be=ue[qe];for(let dt=0,$t=gt.length;dt<$t;dt++){const Vt=le(gt[dt],Be[dt],at);x?Ut(Vt.x,Vt.y+M[u-1].y,M[u-1].x+He):Ut(Vt.x,Vt.y,h+He)}}}function de(ye,me){let He=ye.length;for(;--He>=0;){const at=He;let qe=He-1;qe<0&&(qe=ye.length-1);for(let wt=0,gt=u+2*m;wt<gt;wt++){const dt=q*wt,$t=q*(wt+1);Tt(me+at+dt,me+qe+dt,me+qe+$t,me+at+$t)}}}function Ut(ye,me,He){l.push(ye),l.push(me),l.push(He)}function xt(ye,me,He){ke(ye),ke(me),ke(He);const at=i.length/3,qe=y.generateTopUV(n,i,at-3,at-2,at-1);It(qe[0]),It(qe[1]),It(qe[2])}function Tt(ye,me,He,at){ke(ye),ke(me),ke(at),ke(me),ke(He),ke(at);const qe=i.length/3,wt=y.generateSideWallUV(n,i,qe-6,qe-3,qe-2,qe-1);It(wt[0]),It(wt[1]),It(wt[3]),It(wt[1]),It(wt[2]),It(wt[3])}function ke(ye){i.push(l[3*ye+0]),i.push(l[3*ye+1]),i.push(l[3*ye+2])}function It(ye){s.push(ye.x),s.push(ye.y)}(function ct(){const ye=i.length/3;if(d){let me=0,He=q*me;for(let at=0;at<ve;at++){const qe=Oe[at];xt(qe[2]+He,qe[1]+He,qe[0]+He)}me=u+2*m,He=q*me;for(let at=0;at<ve;at++){const qe=Oe[at];xt(qe[0]+He,qe[1]+He,qe[2]+He)}}else{for(let me=0;me<ve;me++){const He=Oe[me];xt(He[2],He[1],He[0])}for(let me=0;me<ve;me++){const He=Oe[me];xt(He[0]+q*u,He[1]+q*u,He[2]+q*u)}}n.addGroup(ye,i.length/3-ye,0)})(),function ht(){const ye=i.length/3;let me=0;de(V,me),me+=V.length;for(let He=0,at=j.length;He<at;He++){const qe=j[He];de(qe,me),me+=qe.length}n.addGroup(ye,i.length/3-ye,1)}()}this.setAttribute("position",new st(i,3)),this.setAttribute("uv",new st(s,2)),this.computeVertexNormals()}toJSON(){const e=super.toJSON();return function c0(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++)t.shapes.push(r[n].uuid);else t.shapes.push(r.uuid);return void 0!==e.extrudePath&&(t.options.extrudePath=e.extrudePath.toJSON()),t}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++)n.push(t[e.shapes[s]]);const i=e.options.extrudePath;return void 0!==i&&(e.options.extrudePath=(new ql[i.type]).fromJSON(i)),new Ki(n,e.options)}}const l0={generateTopUV:function(r,e,t,n,i){const a=e[3*n],l=e[3*n+1],c=e[3*i],u=e[3*i+1];return[new pe(e[3*t],e[3*t+1]),new pe(a,l),new pe(c,u)]},generateSideWallUV:function(r,e,t,n,i,s){const o=e[3*t],a=e[3*t+1],l=e[3*t+2],c=e[3*n],u=e[3*n+1],h=e[3*n+2],d=e[3*i],f=e[3*i+1],g=e[3*i+2],p=e[3*s],m=e[3*s+1],v=e[3*s+2];return Math.abs(a-u)<Math.abs(o-c)?[new pe(o,1-l),new pe(c,1-h),new pe(d,1-g),new pe(p,1-v)]:[new pe(a,1-l),new pe(u,1-h),new pe(f,1-g),new pe(m,1-v)]}};class Xr extends Xi{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Xr(e.radius,e.detail)}}class Kr extends ft{constructor(e=new wi([new pe(0,.5),new pe(-.5,-.5),new pe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],o=[];let a=0,l=0;if(!1===Array.isArray(e))c(e);else for(let u=0;u<e.length;u++)c(e[u]),this.addGroup(a,l,u),a+=l,l=0;function c(u){const h=i.length/3,d=u.extractPoints(t);let f=d.shape;const g=d.holes;!1===Si.isClockWise(f)&&(f=f.reverse());for(let m=0,v=g.length;m<v;m++){const y=g[m];!0===Si.isClockWise(y)&&(g[m]=y.reverse())}const p=Si.triangulateShape(f,g);for(let m=0,v=g.length;m<v;m++)f=f.concat(g[m]);for(let m=0,v=f.length;m<v;m++){const y=f[m];i.push(y.x,y.y,0),s.push(0,0,1),o.push(y.x,y.y)}for(let m=0,v=p.length;m<v;m++){const y=p[m];n.push(y[0]+h,y[1]+h,y[2]+h),l+=3}}this.setIndex(n),this.setAttribute("position",new st(i,3)),this.setAttribute("normal",new st(s,3)),this.setAttribute("uv",new st(o,2))}toJSON(){const e=super.toJSON();return function u0(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++)e.shapes.push(r[t].uuid);else e.shapes.push(r.uuid);return e}(this.parameters.shapes,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++)n.push(t[e.shapes[i]]);return new Kr(n,e.curveSegments)}}class ar extends ft{constructor(e=1,t=32,n=16,i=0,s=2*Math.PI,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new T,d=new T,f=[],g=[],p=[],m=[];for(let v=0;v<=n;v++){const y=[],M=v/n;let x=0;0==v&&0==o?x=.5/t:v==n&&l==Math.PI&&(x=-.5/t);for(let A=0;A<=t;A++){const R=A/t;h.x=-e*Math.cos(i+R*s)*Math.sin(o+M*a),h.y=e*Math.cos(o+M*a),h.z=e*Math.sin(i+R*s)*Math.sin(o+M*a),g.push(h.x,h.y,h.z),d.copy(h).normalize(),p.push(d.x,d.y,d.z),m.push(R+x,1-M),y.push(c++)}u.push(y)}for(let v=0;v<n;v++)for(let y=0;y<t;y++){const M=u[v][y+1],x=u[v][y],A=u[v+1][y],R=u[v+1][y+1];(0!==v||o>0)&&f.push(M,x,R),(v!==n-1||l<Math.PI)&&f.push(x,A,R)}this.setIndex(f),this.setAttribute("position",new st(g,3)),this.setAttribute("normal",new st(p,3)),this.setAttribute("uv",new st(m,2))}static fromJSON(e){return new ar(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class nc extends un{constructor(e){super(),this.type="ShadowMaterial",this.color=new Ze(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}nc.prototype.isShadowMaterial=!0;class ch extends Vn{constructor(e){super(e),this.type="RawShaderMaterial"}}ch.prototype.isRawShaderMaterial=!0;class Oa extends un{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ze(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=as,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}Oa.prototype.isMeshStandardMaterial=!0;class ic extends Oa{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new pe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return cn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new Ze(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new Ze(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ze(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}ic.prototype.isMeshPhysicalMaterial=!0;class sc extends un{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new Ze(16777215),this.specular=new Ze(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=as,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}sc.prototype.isMeshPhongMaterial=!0;class uh extends un{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ze(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=as,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}uh.prototype.isMeshToonMaterial=!0;class rc extends un{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=as,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}rc.prototype.isMeshNormalMaterial=!0;class oc extends un{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new Ze(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ze(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}oc.prototype.isMeshLambertMaterial=!0;class hh extends un{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ze(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=as,this.normalScale=new pe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}hh.prototype.isMeshMatcapMaterial=!0;class dh extends Mn{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}dh.prototype.isLineDashedMaterial=!0;const h0={ShadowMaterial:nc,SpriteMaterial:Bl,RawShaderMaterial:ch,ShaderMaterial:Vn,PointsMaterial:pa,MeshPhysicalMaterial:ic,MeshStandardMaterial:Oa,MeshPhongMaterial:sc,MeshToonMaterial:uh,MeshNormalMaterial:rc,MeshLambertMaterial:oc,MeshDepthMaterial:ta,MeshDistanceMaterial:na,MeshBasicMaterial:bi,MeshMatcapMaterial:hh,LineDashedMaterial:dh,LineBasicMaterial:Mn,Material:un};un.fromType=function(r){return new h0[r]};const Jt={arraySlice:function(r,e,t){return Jt.isTypedArray(r)?new r.constructor(r.subarray(e,void 0!==t?t:r.length)):r.slice(e,t)},convertArray:function(r,e,t){return!r||!t&&r.constructor===e?r:"number"==typeof e.BYTES_PER_ELEMENT?new e(r):Array.prototype.slice.call(r)},isTypedArray:function(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)},getKeyframeOrder:function(r){const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(function e(i,s){return r[i]-r[s]}),n},sortedArray:function(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const a=t[s]*e;for(let l=0;l!==e;++l)i[o++]=r[a+l]}return i},flattenJSON:function(r,e,t,n){let i=1,s=r[0];for(;void 0!==s&&void 0===s[n];)s=r[i++];if(void 0===s)return;let o=s[n];if(void 0!==o)if(Array.isArray(o))do{o=s[n],void 0!==o&&(e.push(s.time),t.push.apply(t,o)),s=r[i++]}while(void 0!==s);else if(void 0!==o.toArray)do{o=s[n],void 0!==o&&(e.push(s.time),o.toArray(t,t.length)),s=r[i++]}while(void 0!==s);else do{o=s[n],void 0!==o&&(e.push(s.time),t.push(o)),s=r[i++]}while(void 0!==s)},subclip:function(r,e,t,n,i=30){const s=r.clone();s.name=e;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),h=[],d=[];for(let f=0;f<c.times.length;++f){const g=c.times[f]*i;if(!(g<t||g>=n)){h.push(c.times[f]);for(let p=0;p<u;++p)d.push(c.values[f*u+p])}}0!==h.length&&(c.times=Jt.convertArray(h,c.times.constructor),c.values=Jt.convertArray(d,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let o=0;o<i;++o){const a=t.tracks[o],l=a.ValueTypeName;if("bool"===l||"string"===l)continue;const c=r.tracks.find(function(v){return v.name===a.name&&v.ValueTypeName===l});if(void 0===c)continue;let u=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let d=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const g=a.times.length-1;let p;if(s<=a.times[0])p=Jt.arraySlice(a.values,u,h-u);else if(s>=a.times[g]){const v=g*h+u;p=Jt.arraySlice(a.values,v,v+h-u)}else{const v=a.createInterpolant(),y=u,M=h-u;v.evaluate(s),p=Jt.arraySlice(v.resultBuffer,y,M)}"quaternion"===l&&(new En).fromArray(p).normalize().conjugate().toArray(p);const m=c.times.length;for(let v=0;v<m;++v){const y=v*f+d;if("quaternion"===l)En.multiplyQuaternionsFlat(c.values,y,p,0,c.values,y);else{const M=f-2*d;for(let x=0;x<M;++x)c.values[y+x]-=p[x]}}}return r.blendMode=2501,r}};class Ei{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let a=n+2;;){if(void 0===i){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,s)}if(n===a)break;if(s=i,i=t[++n],e<i)break t}o=t.length;break n}if(e>=s)break e;{const a=t[1];e<a&&(n=2,s=a);for(let l=n-2;;){if(void 0===s)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===l)break;if(i=s,s=t[--n-1],e>=s)break t}o=n,n=0}}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(i=t[n],s=t[n-1],void 0===s)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(void 0===i)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,s,e)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let o=0;o!==i;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Ei.prototype.beforeStart_=Ei.prototype.copySampleValue_,Ei.prototype.afterEnd_=Ei.prototype.copySampleValue_;class d0 extends Ei{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ri,endingEnd:Ri}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,o=e+1,a=i[s],l=i[o];if(void 0===a)switch(this.getSettings_().endingStart){case Li:s=e,a=2*t-n;break;case 2402:s=i.length-2,a=t+i[s]-i[s+1];break;default:s=e,a=n}if(void 0===l)switch(this.getSettings_().endingEnd){case Li:o=e,l=2*n-t;break;case 2402:o=1,l=n+i[1]-i[0];break;default:o=e-1,l=t}const c=.5*(n-t),u=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=this._offsetPrev,h=this._offsetNext,d=this._weightPrev,f=this._weightNext,g=(n-t)/(i-t),p=g*g,m=p*g,v=-d*m+2*d*p-d*g,y=(1+d)*m+(-1.5-2*d)*p+(-.5+d)*g+1,M=(-1-f)*m+(1.5+f)*p+.5*g,x=f*m-f*p;for(let A=0;A!==a;++A)s[A]=v*o[u+A]+y*o[c+A]+M*o[l+A]+x*o[h+A];return s}}class fh extends Ei{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=(n-t)/(i-t),h=1-u;for(let d=0;d!==a;++d)s[d]=o[c+d]*h+o[l+d]*u;return s}}class f0 extends Ei{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class si{constructor(e,t,n,i){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Jt.convertArray(t,this.TimeBufferType),this.values=Jt.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Jt.convertArray(e.times,Array),values:Jt.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new f0(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new fh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new d0(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case rs:t=this.InterpolantFactoryMethodDiscrete;break;case os:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return rs;case this.InterpolantFactoryMethodLinear:return os;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<e;)++s;for(;-1!==o&&n[o]>t;)--o;if(++o,0!==s||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=Jt.arraySlice(n,s,o),this.values=Jt.arraySlice(this.values,s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;0===s&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const l=n[a];if("number"==typeof l&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(null!==o&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(void 0!==i&&Jt.isTypedArray(i))for(let a=0,l=i.length;a!==l;++a){const c=i[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=Jt.arraySlice(this.times),t=Jt.arraySlice(this.values),n=this.getValueSize(),i=2302===this.getInterpolation(),s=e.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const c=e[a];if(c!==e[a+1]&&(1!==a||c!==e[0]))if(i)l=!0;else{const h=a*n,d=h-n,f=h+n;for(let g=0;g!==n;++g){const p=t[h+g];if(p!==t[d+g]||p!==t[f+g]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const h=a*n,d=o*n;for(let f=0;f!==n;++f)t[d+f]=t[h+f]}++o}}if(s>0){e[o]=e[s];for(let a=s*n,l=o*n,c=0;c!==n;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=Jt.arraySlice(e,0,o),this.values=Jt.arraySlice(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=Jt.arraySlice(this.times,0),t=Jt.arraySlice(this.values,0),i=new(0,this.constructor)(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}si.prototype.TimeBufferType=Float32Array,si.prototype.ValueBufferType=Float32Array,si.prototype.DefaultInterpolation=os;class lr extends si{}lr.prototype.ValueTypeName="bool",lr.prototype.ValueBufferType=Array,lr.prototype.DefaultInterpolation=rs,lr.prototype.InterpolantFactoryMethodLinear=void 0,lr.prototype.InterpolantFactoryMethodSmooth=void 0;class ph extends si{}ph.prototype.ValueTypeName="color";class Yr extends si{}Yr.prototype.ValueTypeName="number";class p0 extends Ei{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-t)/(i-t);let c=e*a;for(let u=c+a;c!==u;c+=4)En.slerpFlat(s,0,o,c-a,o,c,l);return s}}class cr extends si{InterpolantFactoryMethodLinear(e){return new p0(this.times,this.values,this.getValueSize(),e)}}cr.prototype.ValueTypeName="quaternion",cr.prototype.DefaultInterpolation=os,cr.prototype.InterpolantFactoryMethodSmooth=void 0;class ur extends si{}ur.prototype.ValueTypeName="string",ur.prototype.ValueBufferType=Array,ur.prototype.DefaultInterpolation=rs,ur.prototype.InterpolantFactoryMethodLinear=void 0,ur.prototype.InterpolantFactoryMethodSmooth=void 0;class Jr extends si{}Jr.prototype.ValueTypeName="vector";class Zr{constructor(e,t=-1,n,i=2500){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Nn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(g0(n[o]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(si.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,o=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const u=Jt.getKeyframeOrder(l);l=Jt.sortedArray(l,1,u),c=Jt.sortedArray(c,1,u),!i&&0===l[0]&&(l.push(s),c.push(c[0])),o.push(new Yr(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],u=c.name.match(s);if(u&&u.length>1){const h=u[1];let d=i[h];d||(i[h]=d=[]),d.push(c)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,d,f,g,p){if(0!==f.length){const m=[],v=[];Jt.flattenJSON(f,m,v,g),0!==m.length&&p.push(new h(d,m,v))}},i=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const d=c[h].keys;if(d&&0!==d.length)if(d[0].morphTargets){const f={};let g;for(g=0;g<d.length;g++)if(d[g].morphTargets)for(let p=0;p<d[g].morphTargets.length;p++)f[d[g].morphTargets[p]]=-1;for(const p in f){const m=[],v=[];for(let y=0;y!==d[g].morphTargets.length;++y){const M=d[g];m.push(M.time),v.push(M.morphTarget===p?1:0)}i.push(new Yr(".morphTargetInfluence["+p+"]",m,v))}l=f.length*o}else{const f=".bones["+t[h].name+"]";n(Jr,f+".position",d,"pos",i),n(cr,f+".quaternion",d,"rot",i),n(Jr,f+".scale",d,"scl",i)}}return 0===i.length?null:new this(s,l,i,a)}resetDuration(){let t=0;for(let n=0,i=this.tracks.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function g0(r){if(void 0===r.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function m0(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Yr;case"vector":case"vector2":case"vector3":case"vector4":return Jr;case"color":return ph;case"quaternion":return cr;case"bool":case"boolean":return lr;case"string":return ur}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}(r.type);if(void 0===r.times){const t=[],n=[];Jt.flattenJSON(r.keys,t,n,"value"),r.times=t,r.values=n}return void 0!==e.parse?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const hr={enabled:!1,files:{},add:function(r,e){!1!==this.enabled&&(this.files[r]=e)},get:function(r){if(!1!==this.enabled)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};const gh=new class mh{constructor(e,t,n){const i=this;let l,s=!1,o=0,a=0;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,!1===s&&void 0!==i.onStart&&i.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,void 0!==i.onProgress&&i.onProgress(u,o,a),o===a&&(s=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(u){void 0!==i.onError&&i.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return-1!==h&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=c.length;h<d;h+=2){const f=c[h],g=c[h+1];if(f.global&&(f.lastIndex=0),f.test(u))return g}return null}}};class ri{constructor(e){this.manager=void 0!==e?e:gh,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Ti={};class Ai extends ri{constructor(e){super(e)}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=hr.get(e);if(void 0!==s)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(void 0!==Ti[e])return void Ti[e].push({onLoad:t,onProgress:n,onError:i});Ti[e]=[],Ti[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(200===c.status||0===c.status){if(0===c.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===c.body||void 0===c.body.getReader)return c;const u=Ti[e],h=c.body.getReader(),d=c.headers.get("Content-Length"),f=d?parseInt(d):0,g=0!==f;let p=0;const m=new ReadableStream({start(v){!function y(){h.read().then(({done:M,value:x})=>{if(M)v.close();else{p+=x.byteLength;const A=new ProgressEvent("progress",{lengthComputable:g,loaded:p,total:f});for(let R=0,U=u.length;R<U;R++){const b=u[R];b.onProgress&&b.onProgress(A)}v.enqueue(x),y()}})}()}});return new Response(m)}throw Error(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>(new DOMParser).parseFromString(u,a));case"json":return c.json();default:if(void 0===a)return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),d=h&&h[1]?h[1].toLowerCase():void 0,f=new TextDecoder(d);return c.arrayBuffer().then(g=>f.decode(g))}}}).then(c=>{hr.add(e,c);const u=Ti[e];delete Ti[e];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onLoad&&f.onLoad(c)}}).catch(c=>{const u=Ti[e];if(void 0===u)throw this.manager.itemError(e),c;delete Ti[e];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onError&&f.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Na extends ri{constructor(e){super(e)}load(e,t,n,i){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=hr.get(e);if(void 0!==o)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=Er("img");function l(){u(),hr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(h){u(),i&&i(h),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class vh extends ri{constructor(e){super(e)}load(e,t,n,i){const s=new Rr,o=new Na(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(u){s.images[c]=u,a++,6===a&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let c=0;c<e.length;++c)l(c);return s}}class v0 extends ri{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new bs,a=new Ai(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(l){const c=s.parse(l);!c||(void 0!==c.image?o.image=c.image:void 0!==c.data&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=void 0!==c.wrapS?c.wrapS:wn,o.wrapT=void 0!==c.wrapT?c.wrapT:wn,o.magFilter=void 0!==c.magFilter?c.magFilter:Qt,o.minFilter=void 0!==c.minFilter?c.minFilter:Qt,o.anisotropy=void 0!==c.anisotropy?c.anisotropy:1,void 0!==c.encoding&&(o.encoding=c.encoding),void 0!==c.flipY&&(o.flipY=c.flipY),void 0!==c.format&&(o.format=c.format),void 0!==c.type&&(o.type=c.type),void 0!==c.mipmaps&&(o.mipmaps=c.mipmaps,o.minFilter=Qn),1===c.mipmapCount&&(o.minFilter=Qt),void 0!==c.generateMipmaps&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,t&&t(o,c))},n,i),o}}class yh extends ri{constructor(e){super(e)}load(e,t,n,i){const s=new Cn,o=new Na(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,void 0!==t&&t(s)},n,i),s}}class oi extends Ft{constructor(e,t=1){super(),this.type="Light",this.color=new Ze(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}oi.prototype.isLight=!0;class ac extends oi{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(Ft.DefaultUp),this.updateMatrix(),this.groundColor=new Ze(t)}copy(e){return oi.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}ac.prototype.isHemisphereLight=!0;const xh=new ot,_h=new T,bh=new T;class lc{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new pe(512,512),this.map=null,this.mapPass=null,this.matrix=new ot,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new qo,this._frameExtents=new pe(1,1),this._viewportCount=1,this._viewports=[new Bt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;_h.setFromMatrixPosition(e.matrixWorld),t.position.copy(_h),bh.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(bh),t.updateMatrixWorld(),xh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(xh),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Mh extends lc{constructor(){super(new bn(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,n=2*wr*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}Mh.prototype.isSpotLightShadow=!0;class cc extends oi{constructor(e,t,n=0,i=Math.PI/3,s=0,o=1){super(e,t),this.type="SpotLight",this.position.copy(Ft.DefaultUp),this.updateMatrix(),this.target=new Ft,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.shadow=new Mh}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}cc.prototype.isSpotLight=!0;const wh=new ot,qr=new T,uc=new T;class Sh extends lc{constructor(){super(new bn(90,1,.5,500)),this._frameExtents=new pe(4,2),this._viewportCount=6,this._viewports=[new Bt(2,1,1,1),new Bt(0,1,1,1),new Bt(3,1,1,1),new Bt(1,1,1,1),new Bt(3,0,1,1),new Bt(1,0,1,1)],this._cubeDirections=[new T(1,0,0),new T(-1,0,0),new T(0,0,1),new T(0,0,-1),new T(0,1,0),new T(0,-1,0)],this._cubeUps=[new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,0,1),new T(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),qr.setFromMatrixPosition(e.matrixWorld),n.position.copy(qr),uc.copy(n.position),uc.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(uc),n.updateMatrixWorld(),i.makeTranslation(-qr.x,-qr.y,-qr.z),wh.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(wh)}}Sh.prototype.isPointLightShadow=!0;class hc extends oi{constructor(e,t,n=0,i=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Sh}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}hc.prototype.isPointLight=!0;class Eh extends lc{constructor(){super(new Lr(-5,5,5,-5,.5,500))}}Eh.prototype.isDirectionalLightShadow=!0;class dc extends oi{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(Ft.DefaultUp),this.updateMatrix(),this.target=new Ft,this.shadow=new Eh}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}dc.prototype.isDirectionalLight=!0;class fc extends oi{constructor(e,t){super(e,t),this.type="AmbientLight"}}fc.prototype.isAmbientLight=!0;class pc extends oi{constructor(e,t,n=10,i=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}pc.prototype.isRectAreaLight=!0;class Th{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new T)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],n*i*1.092548),t.addScaledVector(o[5],i*s*1.092548),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],n*s*1.092548),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],1.023328*i),t.addScaledVector(o[2],1.023328*s),t.addScaledVector(o[3],1.023328*n),t.addScaledVector(o[4],.858086*n*i),t.addScaledVector(o[5],.858086*i*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],.858086*n*s),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+3*i);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+3*i);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}Th.prototype.isSphericalHarmonics3=!0;class Fa extends oi{constructor(e=new Th,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}Fa.prototype.isLightProbe=!0;class Ba{static decodeText(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(n){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class mc extends ft{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}mc.prototype.isInstancedBufferGeometry=!0;class Ph extends ri{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=hr.get(e);if(void 0!==o)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){hr.add(e,l),t&&t(l),s.manager.itemEnd(e)}).catch(function(l){i&&i(l),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let Ua;Ph.prototype.isImageBitmapLoader=!0;class b0 extends ri{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Ai(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{const l=a.slice(0);(void 0===Ua&&(Ua=new(window.AudioContext||window.webkitAudioContext)),Ua).decodeAudioData(l,function(u){t(u)})}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}}(class M0 extends Fa{constructor(e,t,n=1){super(void 0,n);const i=(new Ze).set(e),s=(new Ze).set(t),o=new T(i.r,i.g,i.b),a=new T(s.r,s.g,s.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c)}}).prototype.isHemisphereLightProbe=!0,class w0 extends Fa{constructor(e,t=1){super(void 0,t);const n=(new Ze).set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}.prototype.isAmbientLightProbe=!0;class Dh{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Oh(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Oh();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Oh(){return("undefined"==typeof performance?Date:performance).now()}class C0{constructor(e,t,n){let i,s,o;switch(this.binding=e,this.valueSize=n,t){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let o=this.cumulativeWeight;if(0===o){for(let a=0;a!==i;++a)n[s+a]=n[a];o=t}else o+=t,this._mixBufferRegion(n,s,0,t/o,i);this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1&&this._mixBufferRegion(n,i,t*this._origIndex,1-s,t),o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(n[l]!==n[l+t]){a.setValue(n,i);break}}saveOriginalState(){const t=this.buffer,n=this.valueSize,i=n*this._origIndex;this.binding.getValue(t,i);for(let s=n,o=i;s!==o;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){this.binding.setValue(this.buffer,3*this.valueSize)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){En.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const o=this._workIndex*s;En.multiplyQuaternionsFlat(e,o,e,t,e,n),En.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,s){const o=1-i;for(let a=0;a!==s;++a){const l=t+a;e[l]=e[l]*o+e[n+a]*i}}_lerpAdditive(e,t,n,i,s){for(let o=0;o!==s;++o){const a=t+o;e[a]=e[a]+e[n+o]*i}}}const gc="\\[\\]\\.:\\/",P0=new RegExp("["+gc+"]","g"),vc="[^"+gc+"]",R0="[^"+gc.replace("\\.","")+"]",L0=/((?:WC+[\/:])*)/.source.replace("WC",vc),I0=/(WCOD+)?/.source.replace("WCOD",R0),D0=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",vc),O0=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",vc),N0=new RegExp("^"+L0+I0+D0+O0+"$"),F0=["material","materials","bones"];class B0{constructor(e,t,n){const i=n||jt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const i=this._bindings[this._targetGroup.nCachedObjects_];void 0!==i&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}let jt=(()=>{class r{constructor(t,n,i){this.path=n,this.parsedPath=i||r.parseTrackName(n),this.node=r.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,n,i){return t&&t.isAnimationObjectGroup?new r.Composite(t,n,i):new r(t,n,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(P0,"")}static parseTrackName(t){const n=N0.exec(t);if(null===n)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const i={nodeName:n[2],objectName:n[3],objectIndex:n[4],propertyName:n[5],propertyIndex:n[6]},s=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==s&&-1!==s){const o=i.nodeName.substring(s+1);-1!==F0.indexOf(o)&&(i.nodeName=i.nodeName.substring(0,s),i.objectName=o)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,n){if(void 0===n||""===n||"."===n||-1===n||n===t.name||n===t.uuid)return t;if(t.skeleton){const i=t.skeleton.getBoneByName(n);if(void 0!==i)return i}if(t.children){const i=function(o){for(let a=0;a<o.length;a++){const l=o[a];if(l.name===n||l.uuid===n)return l;const c=i(l.children);if(c)return c}return null},s=i(t.children);if(s)return s}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,n){t[n]=this.targetObject[this.propertyName]}_getValue_array(t,n){const i=this.resolvedProperty;for(let s=0,o=i.length;s!==o;++s)t[n++]=i[s]}_getValue_arrayElement(t,n){t[n]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,n){this.resolvedProperty.toArray(t,n)}_setValue_direct(t,n){this.targetObject[this.propertyName]=t[n]}_setValue_direct_setNeedsUpdate(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,n){const i=this.resolvedProperty;for(let s=0,o=i.length;s!==o;++s)i[s]=t[n++]}_setValue_array_setNeedsUpdate(t,n){const i=this.resolvedProperty;for(let s=0,o=i.length;s!==o;++s)i[s]=t[n++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,n){const i=this.resolvedProperty;for(let s=0,o=i.length;s!==o;++s)i[s]=t[n++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,n){this.resolvedProperty[this.propertyIndex]=t[n]}_setValue_arrayElement_setNeedsUpdate(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,n){this.resolvedProperty.fromArray(t,n)}_setValue_fromArray_setNeedsUpdate(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,n){this.bind(),this.getValue(t,n)}_setValue_unbound(t,n){this.bind(),this.setValue(t,n)}bind(){let t=this.node;const n=this.parsedPath,i=n.objectName,s=n.propertyName;let o=n.propertyIndex;if(t||(t=r.findNode(this.rootNode,n.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(i){let u=n.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let h=0;h<t.length;h++)if(t[h].name===u){u=h;break}break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==u){if(void 0===t[u])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[u]}}const a=t[s];if(void 0===a)return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n.nodeName+"."+s+" but it wasn't found.",t);let l=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?l=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(l=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(void 0!==o){if("morphTargetInfluences"===s){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[o]&&(o=t.morphTargetDictionary[o])}c=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=o}else void 0!==a.fromArray&&void 0!==a.toArray?(c=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(c=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=s;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][l]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}return r.Composite=B0,r})();jt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},jt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},jt.prototype.GetterByBindingType=[jt.prototype._getValue_direct,jt.prototype._getValue_array,jt.prototype._getValue_arrayElement,jt.prototype._getValue_toArray],jt.prototype.SetterByBindingTypeAndVersioning=[[jt.prototype._setValue_direct,jt.prototype._setValue_direct_setNeedsUpdate,jt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[jt.prototype._setValue_array,jt.prototype._setValue_array_setNeedsUpdate,jt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[jt.prototype._setValue_arrayElement,jt.prototype._setValue_arrayElement_setNeedsUpdate,jt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[jt.prototype._setValue_fromArray,jt.prototype._setValue_fromArray_setNeedsUpdate,jt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class z0{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,o=s.length,a=new Array(o),l={endingStart:Ri,endingEnd:Ri};for(let c=0;c!==o;++c){const u=s[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,a=i/s;e.warp(1,s/i,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+n,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled)return void this._updateWeight(e);const s=this._startTime;if(null!==s){const l=(e-s)*n;if(l<0||0===n)return;this._startTime=null,t=n*l}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;if(2501===this.blendMode)for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);else for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(i,a)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const o=2202===n;if(0===e)return-1===s?i:o&&1==(1&s)?t-i:i;if(2200===n){-1===s&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else{if(!(i<0)){this.time=i;break e}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===s&&(e>=0?(s=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===l){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&1==(1&s))return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Li,i.endingEnd=Li):(i.endingStart=e?this.zeroSlopeAtStart?Li:Ri:2402,i.endingEnd=t?this.zeroSlopeAtEnd?Li:Ri:2402)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;null===o&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=n,this}}(class H0 extends Ii{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,o=e._propertyBindings,a=e._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let u=c[l];void 0===u&&(u={},c[l]=u);for(let h=0;h!==s;++h){const d=i[h],f=d.name;let g=u[f];if(void 0!==g)++g.referenceCount,o[h]=g;else{if(g=o[h],void 0!==g){null===g._cacheIndex&&(++g.referenceCount,this._addInactiveBinding(g,l,f));continue}g=new C0(jt.create(n,f,t&&t._propertyBindings[h].binding.parsedPath),d.ValueTypeName,d.getValueSize()),++g.referenceCount,this._addInactiveBinding(g,l,f),o[h]=g}a[h].resultBuffer=g.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];0==--s.useCount&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let o=s[t];if(void 0===o)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,a=o[s],l=a.knownActions,c=l[l.length-1],u=e._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),e._byClipCacheIndex=null,delete a.actionByRoot[(e._localRoot||this._root).uuid],0===l.length&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];0==--s.referenceCount&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[t];void 0===o&&(o={},i[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[i],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[s],0===Object.keys(a).length&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return void 0===n&&(n=new fh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let o="string"==typeof e?Zr.findByName(i,e):e;const a=null!==o?o.uuid:e,l=this._actionsByClip[a];let c=null;if(void 0===n&&(n=null!==o?o.blendMode:2500),void 0!==l){const h=l.actionByRoot[s];if(void 0!==h&&h.blendMode===n)return h;c=l.knownActions[0],null===o&&(o=c._clip)}if(null===o)return null;const u=new z0(this,o,t,n);return this._bindAction(u,c),this._addInactiveAction(u,a,s),u}existingAction(e,t){const n=t||this._root,i=n.uuid,s="string"==typeof e?Zr.findByName(n,e):e,a=this._actionsByClip[s?s.uuid:e];return void 0!==a&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions;for(let n=this._nActiveActions-1;n>=0;--n)e[n].stop();return this}update(e){const t=this._actions,n=this._nActiveActions,i=this.time+=e*=this.timeScale,s=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(i,e,s,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(void 0!==s){const o=s.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const u=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const l=n[o].actionByRoot[t];void 0!==l&&(this._deactivateAction(l),this._removeInactiveAction(l))}const s=this._bindingsByRootAndName[t];if(void 0!==s)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}).prototype._controlInterpolantsResultBuffer=new Float32Array(1);class za{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new za(void 0===this.value.clone?this.value:this.value.clone())}}(class G0 extends _s{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}).prototype.isInstancedInterleavedBuffer=!0;class k0{constructor(e,t,n=0,i=1/0){this.ray=new ms(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new zo,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return yc(e,this,n,t),n.sort(Bh),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)yc(e[i],this,n,t);return n.sort(Bh),n}}function Bh(r,e){return r.distance-e.distance}function yc(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),!0===n){const i=r.children;for(let s=0,o=i.length;s<o;s++)yc(i[s],e,t,!0)}}class V0{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(cn(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}const Uh=new pe;class Qr{constructor(e=new pe(1/0,1/0),t=new pe(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Uh.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Uh.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Qr.prototype.isBox2=!0;const Yi=new T,Ga=new ot,xc=new ot;function Gh(r){const e=[];!0===r.isBone&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,Gh(r.children[t]));return e}class Y0{static toHalfFloat(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=cn(e,-65504,65504),Kh[0]=e;const t=Yh[0],n=t>>23&511;return Zn[n]+((8388607&t)>>qn[n])}static fromHalfFloat(e){const t=e>>10;return Yh[0]=bc[Jh[t]+(1023&e)]+dr[t],Kh[0]}}const $h=new ArrayBuffer(4),Kh=new Float32Array($h),Yh=new Uint32Array($h),Zn=new Uint32Array(512),qn=new Uint32Array(512);for(let r=0;r<256;++r){const e=r-127;e<-27?(Zn[r]=0,Zn[256|r]=32768,qn[r]=24,qn[256|r]=24):e<-14?(Zn[r]=1024>>-e-14,Zn[256|r]=1024>>-e-14|32768,qn[r]=-e-1,qn[256|r]=-e-1):e<=15?(Zn[r]=e+15<<10,Zn[256|r]=e+15<<10|32768,qn[r]=13,qn[256|r]=13):e<128?(Zn[r]=31744,Zn[256|r]=64512,qn[r]=24,qn[256|r]=24):(Zn[r]=31744,Zn[256|r]=64512,qn[r]=13,qn[256|r]=13)}const bc=new Uint32Array(2048),dr=new Uint32Array(64),Jh=new Uint32Array(64);for(let r=1;r<1024;++r){let e=r<<13,t=0;for(;0==(8388608&e);)e<<=1,t-=8388608;e&=-8388609,t+=947912704,bc[r]=e|t}for(let r=1024;r<2048;++r)bc[r]=939524096+(r-1024<<13);for(let r=1;r<31;++r)dr[r]=r<<23;dr[31]=1199570944,dr[32]=2147483648;for(let r=33;r<63;++r)dr[r]=2147483648+(r-32<<23);dr[63]=3347054592;for(let r=1;r<64;++r)32!==r&&(Jh[r]=1024);jn.create=function(r,e){return console.log("THREE.Curve.create() has been deprecated"),r.prototype=Object.create(jn.prototype),r.prototype.constructor=r,r.prototype.getPoint=e,r},Hr.prototype.fromPoints=function(r){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(r)},class K0 extends ws{constructor(e=10,t=10,n=4473924,i=8947848){n=new Ze(n),i=new Ze(i);const s=t/2,o=e/t,a=e/2,l=[],c=[];for(let d=0,f=0,g=-a;d<=t;d++,g+=o){l.push(-a,0,g,a,0,g),l.push(g,0,-a,g,0,a);const p=d===s?n:i;p.toArray(c,f),f+=3,p.toArray(c,f),f+=3,p.toArray(c,f),f+=3,p.toArray(c,f),f+=3}const u=new ft;u.setAttribute("position",new st(l,3)),u.setAttribute("color",new st(c,3)),super(u,new Mn({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class X0 extends ws{constructor(e){const t=Gh(e),n=new ft,i=[],s=[],o=new Ze(0,0,1),a=new Ze(0,1,0);for(let c=0;c<t.length;c++){const u=t[c];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new st(i,3)),n.setAttribute("color",new st(s,3)),super(n,new Mn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");xc.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(Ga.multiplyMatrices(xc,a.matrixWorld),Yi.setFromMatrixPosition(Ga),i.setXYZ(o,Yi.x,Yi.y,Yi.z),Ga.multiplyMatrices(xc,a.parent.matrixWorld),Yi.setFromMatrixPosition(Ga),i.setXYZ(o+1,Yi.x,Yi.y,Yi.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},ri.prototype.extractUrlBase=function(r){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Ba.extractUrlBase(r)},ri.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Qr.prototype.center=function(r){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(r)},Qr.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Qr.prototype.isIntersectionBox=function(r){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)},Qr.prototype.size=function(r){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(r)},Fn.prototype.center=function(r){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(r)},Fn.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Fn.prototype.isIntersectionBox=function(r){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)},Fn.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)},Fn.prototype.size=function(r){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(r)},Ui.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")},Ni.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},qo.prototype.setFromMatrix=function(r){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(r)},gn.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)},gn.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)},gn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},gn.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)},gn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},gn.prototype.getInverse=function(r){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()},ot.prototype.extractPosition=function(r){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(r)},ot.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)},ot.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new T).setFromMatrixColumn(this,3)},ot.prototype.setRotationFromQuaternion=function(r){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(r)},ot.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},ot.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)},ot.prototype.multiplyVector4=function(r){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)},ot.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},ot.prototype.rotateAxis=function(r){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),r.transformDirection(this)},ot.prototype.crossVector=function(r){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)},ot.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},ot.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},ot.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},ot.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},ot.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},ot.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)},ot.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},ot.prototype.makeFrustum=function(r,e,t,n,i,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(r,e,n,t,i,s)},ot.prototype.getInverse=function(r){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()},Mi.prototype.isIntersectionLine=function(r){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(r)},En.prototype.multiplyVector3=function(r){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),r.applyQuaternion(this)},En.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},ms.prototype.isIntersectionBox=function(r){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)},ms.prototype.isIntersectionPlane=function(r){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(r)},ms.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)},dn.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},dn.prototype.barycoordFromPoint=function(r,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(r,e)},dn.prototype.midpoint=function(r){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(r)},dn.prototypenormal=function(r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(r)},dn.prototype.plane=function(r){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(r)},dn.barycoordFromPoint=function(r,e,t,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),dn.getBarycoord(r,e,t,n,i)},dn.normal=function(r,e,t,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),dn.getNormal(r,e,t,n)},wi.prototype.extractAllPoints=function(r){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(r)},wi.prototype.extrude=function(r){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Ki(this,r)},wi.prototype.makeGeometry=function(r){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Kr(this,r)},pe.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)},pe.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)},pe.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},T.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},T.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},T.prototype.getPositionFromMatrix=function(r){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(r)},T.prototype.getScaleFromMatrix=function(r){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(r)},T.prototype.getColumnFromMatrix=function(r,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,r)},T.prototype.applyProjection=function(r){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(r)},T.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)},T.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)},T.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Bt.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)},Bt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ft.prototype.getChildByName=function(r){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(r)},Ft.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Ft.prototype.translate=function(r,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,r)},Ft.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Ft.prototype.applyMatrix=function(r){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)},Object.defineProperties(Ft.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(r){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=r}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),yn.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(yn.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),ca.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},bn.prototype.setLens=function(r,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(r)},Object.defineProperties(oi.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(r){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=r}},shadowCameraLeft:{set:function(r){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=r}},shadowCameraRight:{set:function(r){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=r}},shadowCameraTop:{set:function(r){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=r}},shadowCameraBottom:{set:function(r){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=r}},shadowCameraNear:{set:function(r){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=r}},shadowCameraFar:{set:function(r){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=r}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(r){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=r}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(r){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=r}},shadowMapHeight:{set:function(r){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=r}}}),Object.defineProperties(kt.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Fs},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Fs)}}}),kt.prototype.setDynamic=function(r){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===r?Fs:Mr),this},kt.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},kt.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},ft.prototype.addIndex=function(r){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(r)},ft.prototype.addAttribute=function(r,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===r?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(r,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(r,new kt(arguments[1],arguments[2])))},ft.prototype.addDrawCall=function(r,e,t){void 0!==t&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(r,e)},ft.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},ft.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},ft.prototype.removeAttribute=function(r){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(r)},ft.prototype.applyMatrix=function(r){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)},Object.defineProperties(ft.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),_s.prototype.setDynamic=function(r){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===r?Fs:Mr),this},_s.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Ki.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},Ki.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},Ki.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},sa.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},za.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(un.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Ze}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(r){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===r}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(r){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=r}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(Vn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(r){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=r}}}),Ht.prototype.clearTarget=function(r,e,t,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(r),this.clear(e,t,n)},Ht.prototype.animate=function(r){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(r)},Ht.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Ht.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Ht.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Ht.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Ht.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Ht.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Ht.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Ht.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Ht.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Ht.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Ht.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Ht.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Ht.prototype.enableScissorTest=function(r){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(r)},Ht.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Ht.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Ht.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Ht.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Ht.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Ht.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Ht.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Ht.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Ht.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Ht.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Ht.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=r}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=r}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(r){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===r?Xt:pi}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(Tu.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(Pn.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=r}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=r}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=r}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=r}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(r){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=r}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(r){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=r}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(r){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=r}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(r){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=r}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(r){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=r}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(r){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=r}}}),class E0 extends Ft{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}.prototype.load=function(r){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new b0).load(r,function(n){e.setBuffer(n)}),this},Jo.prototype.updateCubeMap=function(r,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(r,e)},Jo.prototype.clear=function(r,e,t,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(r,e,t,n)},hs.crossOrigin=void 0,hs.loadTexture=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new yh;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s},hs.loadTextureCube=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new vh;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s},hs.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},hs.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};class J0 extends Pn{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:k}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=k)}}]);